{
  "adapter_spec": {
    "method": "multiple_choice_joint",
    "global_prefix": "",
    "global_suffix": "",
    "instructions": "The following are multiple choice questions (with answers) about college computer science.\n",
    "input_prefix": "Question: ",
    "input_suffix": "\n",
    "reference_prefix": "A. ",
    "reference_suffix": "\n",
    "chain_of_thought_prefix": "",
    "chain_of_thought_suffix": "\n",
    "output_prefix": "Answer: ",
    "output_suffix": "\n",
    "instance_prefix": "\n",
    "substitutions": [],
    "max_train_instances": 5,
    "max_eval_instances": 100,
    "num_outputs": 5,
    "num_train_trials": 1,
    "num_trials": 1,
    "sample_train": true,
    "model_deployment": "huggingface/phi-3.5-mini-instruct",
    "model": "microsoft/phi-3.5-mini-instruct",
    "temperature": 0.0,
    "max_tokens": 1,
    "stop_sequences": [
      "\n"
    ],
    "multi_label": false
  },
  "request_states": [
    {
      "instance": {
        "input": {
          "text": "One approach to handling fuzzy logic data might be to design a computer using ternary (base-3) logic so that data could be stored as \u201ctrue,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits are required to represent at least 256 different values?"
        },
        "references": [
          {
            "output": {
              "text": "4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "6"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "7"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id104"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "4",
        "B": "5",
        "C": "6",
        "D": "7"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: One approach to handling fuzzy logic data might be to design a computer using ternary (base-3) logic so that data could be stored as \u201ctrue,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits are required to represent at least 256 different values?\nA. 4\nB. 5\nC. 6\nD. 7\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.11199915409088135,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.11199915409088135
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11199917644262314,
              "max_token_negative_log_likelihood": 0.11199917644262314,
              "predictive_entropy": 0.1001323014497757,
              "shannon_entropy": 0.3853617012500763
            }
          }
        ],
        "cached": false,
        "request_time": 0.2805180549621582,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "one  approach to handling   fuzzy   logic data  might   be to   design  a computer  using  ternary   (base-3)  logic  so that data  could be   stored   as  \u201ctrue,\u201d \u201cfalse,\u201d   and   \u201cunknown.\u201d   if  each  ternary   logic  element   is called  a flit, how   many  flits are  required to  represent at   least  256 different values?"
        },
        "references": [
          {
            "output": {
              "text": "4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "6"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "7"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id104",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "One approach to handling fuzzy logic data might be to design a computer using ternary (base-3) logic so that data could be stored as \u201ctrue,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits are required to represent at least 256 different values?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "4",
        "B": "5",
        "C": "6",
        "D": "7"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: one  approach to handling   fuzzy   logic data  might   be to   design  a computer  using  ternary   (base-3)  logic  so that data  could be   stored   as  \u201ctrue,\u201d \u201cfalse,\u201d   and   \u201cunknown.\u201d   if  each  ternary   logic  element   is called  a flit, how   many  flits are  required to  represent at   least  256 different values?\nA. 4\nB. 5\nC. 6\nD. 7\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0755142942070961,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0755142942070961
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0755142942070961,
              "max_token_negative_log_likelihood": 0.0755142942070961,
              "predictive_entropy": 0.07002187520265579,
              "shannon_entropy": 0.2668936252593994
            }
          }
        ],
        "cached": false,
        "request_time": 0.27756261825561523,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "One approach to handling fuzzy logic data mite be to design a computer usin ternary (base-3) logic soo that data could b stored as \u201ctru,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits r required to represent at least 256 diff values?"
        },
        "references": [
          {
            "output": {
              "text": "4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "6"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "7"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id104",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "One approach to handling fuzzy logic data might be to design a computer using ternary (base-3) logic so that data could be stored as \u201ctrue,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits are required to represent at least 256 different values?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "4",
        "B": "5",
        "C": "6",
        "D": "7"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: One approach to handling fuzzy logic data mite be to design a computer usin ternary (base-3) logic soo that data could b stored as \u201ctru,\u201d \u201cfalse,\u201d and \u201cunknown.\u201d If each ternary logic element is called a flit, how many flits r required to represent at least 256 diff values?\nA. 4\nB. 5\nC. 6\nD. 7\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.08135223388671875,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.08135223388671875
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.08135223388671875,
              "max_token_negative_log_likelihood": 0.08135223388671875,
              "predictive_entropy": 0.07499609887599945,
              "shannon_entropy": 0.2978939116001129
            }
          }
        ],
        "cached": false,
        "request_time": 0.5396783351898193,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following evaluation strategies must be defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause"
        },
        "references": [
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id15"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "II only",
        "B": "I and II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following evaluation strategies must be defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause\nA. II only\nB. I and II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.3582520380927008e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5402734279632568,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of the following  evaluation stradegies must  be  defined  in  order   to excecute  a logic  program on a   sequential  machine?\ni.  evaluation  order   of   rules\nii.   evaluation order  of   clauses\niii.   evaluation  order   of arguments in  each  clause"
        },
        "references": [
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id15",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following evaluation strategies must be defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "II only",
        "B": "I and II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of the following  evaluation stradegies must  be  defined  in  order   to excecute  a logic  program on a   sequential  machine?\ni.  evaluation  order   of   rules\nii.   evaluation order  of   clauses\niii.   evaluation  order   of arguments in  each  clause\nA. II only\nB. I and II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.0544105144560945e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5250382423400879,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following evaluation strategies must b defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause"
        },
        "references": [
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id15",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following evaluation strategies must be defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "II only",
        "B": "I and II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following evaluation strategies must b defined in order to execute a logic program on a sequential machine?\nI. Evaluation order of rules\nII. Evaluation order of clauses\nIII. Evaluation order of arguments in each clause\nA. II only\nB. I and II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.0472724343866275e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5140929222106934,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let T (n) be defined by T(1) = 7 and T(n + 1) = 3n + T(n) for all integers n \u2265 1. Which of the following represents the order of growth of T(n) as a function of n?"
        },
        "references": [
          {
            "output": {
              "text": "\u0398(n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n log n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n^2)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "\u0398(n^2 log n)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id81"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "\u0398(n)",
        "B": "\u0398(n log n)",
        "C": "\u0398(n^2)",
        "D": "\u0398(n^2 log n)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let T (n) be defined by T(1) = 7 and T(n + 1) = 3n + T(n) for all integers n \u2265 1. Which of the following represents the order of growth of T(n) as a function of n?\nA. \u0398(n)\nB. \u0398(n log n)\nC. \u0398(n^2)\nD. \u0398(n^2 log n)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.3037072420120239,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.3037072420120239
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.30370721220970154,
              "max_token_negative_log_likelihood": 0.30370721220970154,
              "predictive_entropy": 0.22415928542613983,
              "shannon_entropy": 0.8486192226409912
            }
          }
        ],
        "cached": false,
        "request_time": 0.5273394584655762,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let  t (n) be deffined by   t(1)   =  7   and   t(n   +   1)   = 3n  + t(n) for all   integers n  \u2265   1.  which of  the  following  represents  hten  order  of  growth of  t(n)   as   a   function  of   n?"
        },
        "references": [
          {
            "output": {
              "text": "\u0398(n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n log n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n^2)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "\u0398(n^2 log n)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id81",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let T (n) be defined by T(1) = 7 and T(n + 1) = 3n + T(n) for all integers n \u2265 1. Which of the following represents the order of growth of T(n) as a function of n?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "\u0398(n)",
        "B": "\u0398(n log n)",
        "C": "\u0398(n^2)",
        "D": "\u0398(n^2 log n)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let  t (n) be deffined by   t(1)   =  7   and   t(n   +   1)   = 3n  + t(n) for all   integers n  \u2265   1.  which of  the  following  represents  hten  order  of  growth of  t(n)   as   a   function  of   n?\nA. \u0398(n)\nB. \u0398(n log n)\nC. \u0398(n^2)\nD. \u0398(n^2 log n)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.834327220916748,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.834327220916748
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.8343271017074585,
              "max_token_negative_log_likelihood": 1.8343271017074585,
              "predictive_entropy": 0.292980432510376,
              "shannon_entropy": 0.7922288179397583
            }
          }
        ],
        "cached": false,
        "request_time": 0.5138454437255859,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let T (n) b defined by T(1) = 7 and T(n + 1) = 3n + T(n) fa all integers n \u2265 1. Which of da following represents da order of growth of T(n) as a function of n?"
        },
        "references": [
          {
            "output": {
              "text": "\u0398(n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n log n)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "\u0398(n^2)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "\u0398(n^2 log n)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id81",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let T (n) be defined by T(1) = 7 and T(n + 1) = 3n + T(n) for all integers n \u2265 1. Which of the following represents the order of growth of T(n) as a function of n?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "\u0398(n)",
        "B": "\u0398(n log n)",
        "C": "\u0398(n^2)",
        "D": "\u0398(n^2 log n)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let T (n) b defined by T(1) = 7 and T(n + 1) = 3n + T(n) fa all integers n \u2265 1. Which of da following represents da order of growth of T(n) as a function of n?\nA. \u0398(n)\nB. \u0398(n log n)\nC. \u0398(n^2)\nD. \u0398(n^2 log n)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.6587605476379395,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.6587605476379395
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.65876042842865,
              "max_token_negative_log_likelihood": 1.65876042842865,
              "predictive_entropy": 0.3157861828804016,
              "shannon_entropy": 0.9675127863883972
            }
          }
        ],
        "cached": false,
        "request_time": 0.5310173034667969,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of the following page-replacement policies, which is guaranteed to incur the minimum number of page faults?"
        },
        "references": [
          {
            "output": {
              "text": "Replace the page whose next reference will be the longest time in the future."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Replace the page whose next reference will be the shortest time in the future."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace the page whose most recent reference was the shortest time in the past."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace the page whose most recent reference was the longest time in the past."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id7"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Replace the page whose next reference will be the longest time in the future.",
        "B": "Replace the page whose next reference will be the shortest time in the future.",
        "C": "Replace the page whose most recent reference was the shortest time in the past.",
        "D": "Replace the page whose most recent reference was the longest time in the past."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of the following page-replacement policies, which is guaranteed to incur the minimum number of page faults?\nA. Replace the page whose next reference will be the longest time in the future.\nB. Replace the page whose next reference will be the shortest time in the future.\nC. Replace the page whose most recent reference was the shortest time in the past.\nD. Replace the page whose most recent reference was the longest time in the past.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.3412768840789795,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.3412768840789795
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3412769138813019,
              "max_token_negative_log_likelihood": 0.3412769138813019,
              "predictive_entropy": 0.24260079860687256,
              "shannon_entropy": 0.780350923538208
            }
          }
        ],
        "cached": false,
        "request_time": 0.5203375816345215,
        "request_datetime": 1755797616
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "of  the following page-replacement policies,   which  is  guaranteed  to   incur the   minimum   number of   page   faults?"
        },
        "references": [
          {
            "output": {
              "text": "Replace the page whose next reference will be the longest time in the future."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Replace the page whose next reference will be the shortest time in the future."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace the page whose most recent reference was the shortest time in the past."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace the page whose most recent reference was the longest time in the past."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id7",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Of the following page-replacement policies, which is guaranteed to incur the minimum number of page faults?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Replace the page whose next reference will be the longest time in the future.",
        "B": "Replace the page whose next reference will be the shortest time in the future.",
        "C": "Replace the page whose most recent reference was the shortest time in the past.",
        "D": "Replace the page whose most recent reference was the longest time in the past."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: of  the following page-replacement policies,   which  is  guaranteed  to   incur the   minimum   number of   page   faults?\nA. Replace the page whose next reference will be the longest time in the future.\nB. Replace the page whose next reference will be the shortest time in the future.\nC. Replace the page whose most recent reference was the shortest time in the past.\nD. Replace the page whose most recent reference was the longest time in the past.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.39299893379211426,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.39299893379211426
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.39299896359443665,
              "max_token_negative_log_likelihood": 0.39299896359443665,
              "predictive_entropy": 0.2652858793735504,
              "shannon_entropy": 0.761012852191925
            }
          }
        ],
        "cached": false,
        "request_time": 0.5312187671661377,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of da following page-replacement policies, which is guaranteed to incur da minimum number of page faults?"
        },
        "references": [
          {
            "output": {
              "text": "Replace da page whose nxt reference gon be da longest time in da future."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Replace da page whose nxt reference gon be da shortest time in da future."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace da page whose most recent reference was da shortest time in da past."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Replace da page whose most recent reference was da longest time in da past."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id7",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Of the following page-replacement policies, which is guaranteed to incur the minimum number of page faults?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Replace da page whose nxt reference gon be da longest time in da future.",
        "B": "Replace da page whose nxt reference gon be da shortest time in da future.",
        "C": "Replace da page whose most recent reference was da shortest time in da past.",
        "D": "Replace da page whose most recent reference was da longest time in da past."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of da following page-replacement policies, which is guaranteed to incur da minimum number of page faults?\nA. Replace da page whose nxt reference gon be da longest time in da future.\nB. Replace da page whose nxt reference gon be da shortest time in da future.\nC. Replace da page whose most recent reference was da shortest time in da past.\nD. Replace da page whose most recent reference was da longest time in da past.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.12553048133850098,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.12553048133850098
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12553048133850098,
              "max_token_negative_log_likelihood": 0.12553048133850098,
              "predictive_entropy": 0.11072150617837906,
              "shannon_entropy": 0.4209473729133606
            }
          }
        ],
        "cached": false,
        "request_time": 0.5203385353088379,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "TCP protocol is responsible (among other things) for"
        },
        "references": [
          {
            "output": {
              "text": "Routing packets through the network"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of packets between directly connected machines"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Dealing with differences among operating system architectures"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id29"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Routing packets through the network",
        "B": "Reliable delivery of packets between directly connected machines",
        "C": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
        "D": "Dealing with differences among operating system architectures"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: TCP protocol is responsible (among other things) for\nA. Routing packets through the network\nB. Reliable delivery of packets between directly connected machines\nC. Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected\nD. Dealing with differences among operating system architectures\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -3.814689989667386e-06,
            "tokens": [
              {
                "text": "C",
                "logprob": -3.814689989667386e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.814704541582614e-06,
              "max_token_negative_log_likelihood": 3.814704541582614e-06,
              "predictive_entropy": 3.814689989667386e-06,
              "shannon_entropy": 5.1746261306107044e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5269069671630859,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "tcp   protocol   is responsible (among   other   things)   for"
        },
        "references": [
          {
            "output": {
              "text": "Routing packets through the network"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of packets between directly connected machines"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Dealing with differences among operating system architectures"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id29",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "TCP protocol is responsible (among other things) for"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Routing packets through the network",
        "B": "Reliable delivery of packets between directly connected machines",
        "C": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
        "D": "Dealing with differences among operating system architectures"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: tcp   protocol   is responsible (among   other   things)   for\nA. Routing packets through the network\nB. Reliable delivery of packets between directly connected machines\nC. Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected\nD. Dealing with differences among operating system architectures\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.0019286142196506262,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.0019286142196506262
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0019286383176222444,
              "max_token_negative_log_likelihood": 0.0019286383176222444,
              "predictive_entropy": 0.0019249222241342068,
              "shannon_entropy": 0.013970719650387764
            }
          }
        ],
        "cached": false,
        "request_time": 0.5090377330780029,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "At time 0, five jobs are available for execution on a single processor, with service times of 25, 15, 5, 3, and 2 time units. Which of the following is the minimum value of the average completion time of these jobs?"
        },
        "references": [
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "208/5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "92/5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id107"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "50",
        "B": "208/5",
        "C": "92/5",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: At time 0, five jobs are available for execution on a single processor, with service times of 25, 15, 5, 3, and 2 time units. Which of the following is the minimum value of the average completion time of these jobs?\nA. 50\nB. 208/5\nC. 92/5\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.8259482383728027,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.8259482383728027
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8259482383728027,
              "max_token_negative_log_likelihood": 0.8259482383728027,
              "predictive_entropy": 0.3616163432598114,
              "shannon_entropy": 0.6855007410049438
            }
          }
        ],
        "cached": false,
        "request_time": 0.5279750823974609,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "at   time 0, five   jobs   are available  for  execution  on  a   single  processor,   iwth   service   times   of 25,  15,   5,   3,  and  2   time  units.  which of the   following  is   the minimum   value  of  the average  completion  time   of  these   jobs?"
        },
        "references": [
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "208/5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "92/5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id107",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "At time 0, five jobs are available for execution on a single processor, with service times of 25, 15, 5, 3, and 2 time units. Which of the following is the minimum value of the average completion time of these jobs?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "50",
        "B": "208/5",
        "C": "92/5",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: at   time 0, five   jobs   are available  for  execution  on  a   single  processor,   iwth   service   times   of 25,  15,   5,   3,  and  2   time  units.  which of the   following  is   the minimum   value  of  the average  completion  time   of  these   jobs?\nA. 50\nB. 208/5\nC. 92/5\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.42870819568634033,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.42870819568634033
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.42870819568634033,
              "max_token_negative_log_likelihood": 0.42870819568634033,
              "predictive_entropy": 0.27923905849456787,
              "shannon_entropy": 0.6466951370239258
            }
          }
        ],
        "cached": false,
        "request_time": 0.5173623561859131,
        "request_datetime": 1755797617
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "At time 0, five jobs r available fir execution on a single processor, w service times of 25, 15, 5, 3, and 2 time units. Which of da following is da minimum value of da average completion time of dese jobs?"
        },
        "references": [
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "208/5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "92/5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id107",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "At time 0, five jobs are available for execution on a single processor, with service times of 25, 15, 5, 3, and 2 time units. Which of the following is the minimum value of the average completion time of these jobs?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "50",
        "B": "208/5",
        "C": "92/5",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: At time 0, five jobs r available fir execution on a single processor, w service times of 25, 15, 5, 3, and 2 time units. Which of da following is da minimum value of da average completion time of dese jobs?\nA. 50\nB. 208/5\nC. 92/5\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.2811533510684967,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.2811533510684967
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2811533510684967,
              "max_token_negative_log_likelihood": 0.2811533510684967,
              "predictive_entropy": 0.21224619448184967,
              "shannon_entropy": 0.5569125413894653
            }
          }
        ],
        "cached": false,
        "request_time": 0.5312318801879883,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is usually NOT represented in a subroutine's activation record frame for a stack-based programming language?"
        },
        "references": [
          {
            "output": {
              "text": "Values of local variables"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A heap area"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The return address"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Stack pointer for the calling activation record"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id50"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Values of local variables",
        "B": "A heap area",
        "C": "The return address",
        "D": "Stack pointer for the calling activation record"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is usually NOT represented in a subroutine's activation record frame for a stack-based programming language?\nA. Values of local variables\nB. A heap area\nC. The return address\nD. Stack pointer for the calling activation record\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.3501860740561256e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5190420150756836,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of the following   is  usually   not   represented in a  subroutine's  activation record frame for   a   stack-based  programming   language?"
        },
        "references": [
          {
            "output": {
              "text": "Values of local variables"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A heap area"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The return address"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Stack pointer for the calling activation record"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id50",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is usually NOT represented in a subroutine's activation record frame for a stack-based programming language?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Values of local variables",
        "B": "A heap area",
        "C": "The return address",
        "D": "Stack pointer for the calling activation record"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of the following   is  usually   not   represented in a  subroutine's  activation record frame for   a   stack-based  programming   language?\nA. Values of local variables\nB. A heap area\nC. The return address\nD. Stack pointer for the calling activation record\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.2187114085147073e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5250473022460938,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is usually NOT represented in a subroutine's activation record frame fa a stack-based programming language?"
        },
        "references": [
          {
            "output": {
              "text": "Values of local variables"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A heap area"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The return address"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Stack pointer fir the callin activation record"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id50",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is usually NOT represented in a subroutine's activation record frame for a stack-based programming language?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Values of local variables",
        "B": "A heap area",
        "C": "The return address",
        "D": "Stack pointer fir the callin activation record"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is usually NOT represented in a subroutine's activation record frame fa a stack-based programming language?\nA. Values of local variables\nB. A heap area\nC. The return address\nD. Stack pointer fir the callin activation record\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.5813033094633795e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5131967067718506,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The main difference between a network operating system and a distributed operating system is that"
        },
        "references": [
          {
            "output": {
              "text": "A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "A network operating system uses a local-area network, while a distributed operating system uses a wide-area network"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A distributed operating system uses a local-area network, while a network operating system uses a wide-area network"
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id12"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible",
        "B": "A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible",
        "C": "A network operating system uses a local-area network, while a distributed operating system uses a wide-area network",
        "D": "A distributed operating system uses a local-area network, while a network operating system uses a wide-area network"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The main difference between a network operating system and a distributed operating system is that\nA. A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible\nB. A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible\nC. A network operating system uses a local-area network, while a distributed operating system uses a wide-area network\nD. A distributed operating system uses a local-area network, while a network operating system uses a wide-area network\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.11967968195676804,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.11967968195676804
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11967967450618744,
              "max_token_negative_log_likelihood": 0.11967967450618744,
              "predictive_entropy": 0.1061803549528122,
              "shannon_entropy": 0.35232019424438477
            }
          }
        ],
        "cached": false,
        "request_time": 0.5308024883270264,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "the   main  difference   between   a  network  operating   sytem and   a distributed  operating   system  is  that"
        },
        "references": [
          {
            "output": {
              "text": "A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "A network operating system uses a local-area network, while a distributed operating system uses a wide-area network"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A distributed operating system uses a local-area network, while a network operating system uses a wide-area network"
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id12",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "The main difference between a network operating system and a distributed operating system is that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible",
        "B": "A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible",
        "C": "A network operating system uses a local-area network, while a distributed operating system uses a wide-area network",
        "D": "A distributed operating system uses a local-area network, while a network operating system uses a wide-area network"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: the   main  difference   between   a  network  operating   sytem and   a distributed  operating   system  is  that\nA. A network operating system hides the existence of many machines from the user, but a distributed operating system makes the existence of many machines visible\nB. A distributed operating system hides the existence of many machines from the user, but a network operating system makes the existence of many machines visible\nC. A network operating system uses a local-area network, while a distributed operating system uses a wide-area network\nD. A distributed operating system uses a local-area network, while a network operating system uses a wide-area network\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.2131100296974182,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.2131100296974182
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2131100594997406,
              "max_token_negative_log_likelihood": 0.2131100594997406,
              "predictive_entropy": 0.17220725119113922,
              "shannon_entropy": 0.4890134334564209
            }
          }
        ],
        "cached": false,
        "request_time": 0.5151307582855225,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?"
        },
        "references": [
          {
            "output": {
              "text": "M = 10, m = 10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 10, m = 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 7, m = 4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "M = 6, m = 4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id21"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "M = 10, m = 10",
        "B": "M = 10, m = 1",
        "C": "M = 7, m = 4",
        "D": "M = 6, m = 4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?\nA. M = 10, m = 10\nB. M = 10, m = 1\nC. M = 7, m = 4\nD. M = 6, m = 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.05105797201395035,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.05105797201395035
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.05105799064040184,
              "max_token_negative_log_likelihood": 0.05105799064040184,
              "predictive_entropy": 0.04851650446653366,
              "shannon_entropy": 0.22357578575611115
            }
          }
        ],
        "cached": false,
        "request_time": 0.5405418872833252,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "consider  the   collecton   of  all   undirected graphs  with  10 nodes   and   6   edges.   let   m and m,  respectively,   be  the maximum   and  minimum  number of connected  components   in any   graph in  the collection. if   a  graph  has no  selfloops  and   there's   at  most   one edge   between  any  pair  of nodes, which   of the following  is true?"
        },
        "references": [
          {
            "output": {
              "text": "M = 10, m = 10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 10, m = 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 7, m = 4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "M = 6, m = 4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id21",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "M = 10, m = 10",
        "B": "M = 10, m = 1",
        "C": "M = 7, m = 4",
        "D": "M = 6, m = 4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: consider  the   collecton   of  all   undirected graphs  with  10 nodes   and   6   edges.   let   m and m,  respectively,   be  the maximum   and  minimum  number of connected  components   in any   graph in  the collection. if   a  graph  has no  selfloops  and   there's   at  most   one edge   between  any  pair  of nodes, which   of the following  is true?\nA. M = 10, m = 10\nB. M = 10, m = 1\nC. M = 7, m = 4\nD. M = 6, m = 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.40828877687454224,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.40828877687454224
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.40828877687454224,
              "max_token_negative_log_likelihood": 0.40828877687454224,
              "predictive_entropy": 0.2714250087738037,
              "shannon_entropy": 0.7923674583435059
            }
          }
        ],
        "cached": false,
        "request_time": 0.5234248638153076,
        "request_datetime": 1755797618
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider da collection of alll undirected graphs witt 10 nodes and 6 edges. Let M and m, respectively, b the maximum and minimum number of connected components in any graph in da collection. If a graph has no selfloops and thea is at most one edge between any pair of nodes, which of da following is tru?"
        },
        "references": [
          {
            "output": {
              "text": "M = 10, m = 10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 10, m = 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "M = 7, m = 4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "M = 6, m = 4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id21",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "M = 10, m = 10",
        "B": "M = 10, m = 1",
        "C": "M = 7, m = 4",
        "D": "M = 6, m = 4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider da collection of alll undirected graphs witt 10 nodes and 6 edges. Let M and m, respectively, b the maximum and minimum number of connected components in any graph in da collection. If a graph has no selfloops and thea is at most one edge between any pair of nodes, which of da following is tru?\nA. M = 10, m = 10\nB. M = 10, m = 1\nC. M = 7, m = 4\nD. M = 6, m = 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.17099499702453613,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.17099499702453613
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.17099502682685852,
              "max_token_negative_log_likelihood": 0.17099502682685852,
              "predictive_entropy": 0.1441190093755722,
              "shannon_entropy": 0.44232475757598877
            }
          }
        ],
        "cached": false,
        "request_time": 0.538546085357666,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A particular disk unit uses a bit string to record the occupancy or vacancy of its tracks, with O denoting vacant and 1 denoting occupied. A 32-bit segment of this string has the hexadecimal value D4FE2003. The percentage of occupied tracks for the corresponding part of the disk, to the nearest percent, is"
        },
        "references": [
          {
            "output": {
              "text": "12%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "38%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "44%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id95"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "12%",
        "B": "25%",
        "C": "38%",
        "D": "44%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A particular disk unit uses a bit string to record the occupancy or vacancy of its tracks, with O denoting vacant and 1 denoting occupied. A 32-bit segment of this string has the hexadecimal value D4FE2003. The percentage of occupied tracks for the corresponding part of the disk, to the nearest percent, is\nA. 12%\nB. 25%\nC. 38%\nD. 44%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To",
            "logprob": -0.9516739845275879,
            "tokens": [
              {
                "text": "To",
                "logprob": -0.9516739845275879
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.9516739845275879,
              "max_token_negative_log_likelihood": 0.9516739845275879,
              "predictive_entropy": 0.3674357831478119,
              "shannon_entropy": 1.1463268995285034
            }
          }
        ],
        "cached": false,
        "request_time": 0.5272140502929688,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a particular  disk unit uses  a  bit   string  to   record the   occupancy   or  vacancy of  its tracks,   with o denoting  vacant  and 1   denoting  occupied.  a  32-bit  segment  of   this string  has  the   hexadecimal   value d4fe2003.  the   percentage of   occupied   tracks   for  teh  corresponding  part   of   the   disk, to  the  nearest   percent,  is"
        },
        "references": [
          {
            "output": {
              "text": "12%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "38%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "44%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id95",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A particular disk unit uses a bit string to record the occupancy or vacancy of its tracks, with O denoting vacant and 1 denoting occupied. A 32-bit segment of this string has the hexadecimal value D4FE2003. The percentage of occupied tracks for the corresponding part of the disk, to the nearest percent, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "12%",
        "B": "25%",
        "C": "38%",
        "D": "44%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a particular  disk unit uses  a  bit   string  to   record the   occupancy   or  vacancy of  its tracks,   with o denoting  vacant  and 1   denoting  occupied.  a  32-bit  segment  of   this string  has  the   hexadecimal   value d4fe2003.  the   percentage of   occupied   tracks   for  teh  corresponding  part   of   the   disk, to  the  nearest   percent,  is\nA. 12%\nB. 25%\nC. 38%\nD. 44%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.38883960247039795,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.38883960247039795
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.38883963227272034,
              "max_token_negative_log_likelihood": 0.38883963227272034,
              "predictive_entropy": 0.26357221603393555,
              "shannon_entropy": 0.7839393615722656
            }
          }
        ],
        "cached": false,
        "request_time": 0.5356559753417969,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A particular disk unit uses a bit string to record da occupancy or vacancy of its tracks, w O denoting vacant and 1 denoting occupied. A 32-bit segment of dis string has da hexadecimal value D4FE2003. Da percentage of occupied tracks fa the corresponding part of da disk, to da nearest percent, is"
        },
        "references": [
          {
            "output": {
              "text": "12%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "38%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "44%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id95",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A particular disk unit uses a bit string to record the occupancy or vacancy of its tracks, with O denoting vacant and 1 denoting occupied. A 32-bit segment of this string has the hexadecimal value D4FE2003. The percentage of occupied tracks for the corresponding part of the disk, to the nearest percent, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "12%",
        "B": "25%",
        "C": "38%",
        "D": "44%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A particular disk unit uses a bit string to record da occupancy or vacancy of its tracks, w O denoting vacant and 1 denoting occupied. A 32-bit segment of dis string has da hexadecimal value D4FE2003. Da percentage of occupied tracks fa the corresponding part of da disk, to da nearest percent, is\nA. 12%\nB. 25%\nC. 38%\nD. 44%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.8816518187522888,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.8816518187522888
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8816518783569336,
              "max_token_negative_log_likelihood": 0.8816518783569336,
              "predictive_entropy": 0.365090548992157,
              "shannon_entropy": 0.7681528925895691
            }
          }
        ],
        "cached": false,
        "request_time": 0.4913787841796875,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The hit ratio of a cache memory is the percentage of accesses (reads and writes) for which data are found in the cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in the cache does not affect main memory until the line is evicted from the cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed that write-allocation is always used, which of the following is true?"
        },
        "references": [
          {
            "output": {
              "text": "Write-back usually results in a better hit ratio than write-through."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Write-through usually results in a better hit ratio than write-back."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id94"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Write-back usually results in a better hit ratio than write-through.",
        "B": "Write-through usually results in a better hit ratio than write-back.",
        "C": "The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through.",
        "D": "The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The hit ratio of a cache memory is the percentage of accesses (reads and writes) for which data are found in the cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in the cache does not affect main memory until the line is evicted from the cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed that write-allocation is always used, which of the following is true?\nA. Write-back usually results in a better hit ratio than write-through.\nB. Write-through usually results in a better hit ratio than write-back.\nC. The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through.\nD. The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0015711355954408646,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0015711355954408646
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0015711603919044137,
              "max_token_negative_log_likelihood": 0.0015711603919044137,
              "predictive_entropy": 0.0015686937840655446,
              "shannon_entropy": 0.012845437973737717
            }
          }
        ],
        "cached": false,
        "request_time": 0.5726032257080078,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "the hit  ratio of  a   cache memory   is the   percentage   of accesses  (reads  andd  writes) for whcih  data are  found in  the  cache.   write-through   is  a policy   whereby   every  write   operation   updates main  memory. write-back   is a  policy   whereby a write   operation   to   a  line  found  in   the   cache doesn't affect  main   memory until   the  line is   evicted from   the   cache. write-allocation  is  a  policy  whereby  a cache line   is   allocated   and loaded on a write-miss. if   it's   assumed  that   write-allocation is always   used,   which of   the following is  true?"
        },
        "references": [
          {
            "output": {
              "text": "Write-back usually results in a better hit ratio than write-through."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Write-through usually results in a better hit ratio than write-back."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id94",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "The hit ratio of a cache memory is the percentage of accesses (reads and writes) for which data are found in the cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in the cache does not affect main memory until the line is evicted from the cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed that write-allocation is always used, which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Write-back usually results in a better hit ratio than write-through.",
        "B": "Write-through usually results in a better hit ratio than write-back.",
        "C": "The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through.",
        "D": "The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: the hit  ratio of  a   cache memory   is the   percentage   of accesses  (reads  andd  writes) for whcih  data are  found in  the  cache.   write-through   is  a policy   whereby   every  write   operation   updates main  memory. write-back   is a  policy   whereby a write   operation   to   a  line  found  in   the   cache doesn't affect  main   memory until   the  line is   evicted from   the   cache. write-allocation  is  a  policy  whereby  a cache line   is   allocated   and loaded on a write-miss. if   it's   assumed  that   write-allocation is always   used,   which of   the following is  true?\nA. Write-back usually results in a better hit ratio than write-through.\nB. Write-through usually results in a better hit ratio than write-back.\nC. The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through.\nD. The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0020911272149533033,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0020911272149533033
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.002091148868203163,
              "max_token_negative_log_likelihood": 0.002091148868203163,
              "predictive_entropy": 0.0020867804996669292,
              "shannon_entropy": 0.0160266924649477
            }
          }
        ],
        "cached": false,
        "request_time": 0.5311174392700195,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The hit ratio of a cache memory is da percentage of accesses (reads and writes) fa which data r found in da cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in da cache does not affect main memory untill the line is evicted from da cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed dat write-allocation is always used, which of da following is tru?"
        },
        "references": [
          {
            "output": {
              "text": "Write-back usually results in a betta hit ratio den write-through."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Write-through usually results in a betta hit ratio den write-back."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation gon never b larger fir write-back den for write-through."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The percentage of write operations resulting in a main memory operation gon never b larger fir writethrough den for write-back."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id94",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "The hit ratio of a cache memory is the percentage of accesses (reads and writes) for which data are found in the cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in the cache does not affect main memory until the line is evicted from the cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed that write-allocation is always used, which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Write-back usually results in a betta hit ratio den write-through.",
        "B": "Write-through usually results in a betta hit ratio den write-back.",
        "C": "The percentage of write operations resulting in a main memory operation gon never b larger fir write-back den for write-through.",
        "D": "The percentage of write operations resulting in a main memory operation gon never b larger fir writethrough den for write-back."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The hit ratio of a cache memory is da percentage of accesses (reads and writes) fa which data r found in da cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in da cache does not affect main memory untill the line is evicted from da cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed dat write-allocation is always used, which of da following is tru?\nA. Write-back usually results in a betta hit ratio den write-through.\nB. Write-through usually results in a betta hit ratio den write-back.\nC. The percentage of write operations resulting in a main memory operation gon never b larger fir write-back den for write-through.\nD. The percentage of write operations resulting in a main memory operation gon never b larger fir writethrough den for write-back.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.03610802814364433,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.03610802814364433
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.036108050495386124,
              "max_token_negative_log_likelihood": 0.036108050495386124,
              "predictive_entropy": 0.03482751548290253,
              "shannon_entropy": 0.15516003966331482
            }
          }
        ],
        "cached": false,
        "request_time": 0.5865311622619629,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "If p(x) is the minimal-degree interpolating polynomial for the real-valued function f(x) at the n + 1 distinct real numbers x0, .... xn what is the maximum possible degree of p(x)?"
        },
        "references": [
          {
            "output": {
              "text": "n"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "n + 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "n + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2n"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id27"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "n",
        "B": "n + 1",
        "C": "n + 2",
        "D": "2n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: If p(x) is the minimal-degree interpolating polynomial for the real-valued function f(x) at the n + 1 distinct real numbers x0, .... xn what is the maximum possible degree of p(x)?\nA. n\nB. n + 1\nC. n + 2\nD. 2n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -4.768370445162873e-07,
            "tokens": [
              {
                "text": "B",
                "logprob": -4.768370445162873e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.768372718899627e-07,
              "max_token_negative_log_likelihood": 4.768372718899627e-07,
              "predictive_entropy": 4.768370445162873e-07,
              "shannon_entropy": 8.200026059057564e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5334725379943848,
        "request_datetime": 1755797619
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "if p(x) is  the minimal-degree interpolating  polynomial   for the real-valued  function  f(x)  at  the  n   + 1  distinct   real   numbers   x0,   ....  xn what's   the maximum   possible degree of p(x)?"
        },
        "references": [
          {
            "output": {
              "text": "n"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "n + 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "n + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2n"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id27",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "If p(x) is the minimal-degree interpolating polynomial for the real-valued function f(x) at the n + 1 distinct real numbers x0, .... xn what is the maximum possible degree of p(x)?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "n",
        "B": "n + 1",
        "C": "n + 2",
        "D": "2n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: if p(x) is  the minimal-degree interpolating  polynomial   for the real-valued  function  f(x)  at  the  n   + 1  distinct   real   numbers   x0,   ....  xn what's   the maximum   possible degree of p(x)?\nA. n\nB. n + 1\nC. n + 2\nD. 2n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -7.152555099310121e-07,
            "tokens": [
              {
                "text": "B",
                "logprob": -7.152555099310121e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 7.152560215217818e-07,
              "max_token_negative_log_likelihood": 7.152560215217818e-07,
              "predictive_entropy": 7.152555099310121e-07,
              "shannon_entropy": 1.115725353884045e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5463128089904785,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "If p(x) is da minimal-degree interpolating polynomial fa the real-valued function fuc(x) at da n + 1 distinct real numbers x0, .... xn wht is da maximum possible degree of p(x)?"
        },
        "references": [
          {
            "output": {
              "text": "n"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "n + 1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "n + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2n"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id27",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "If p(x) is the minimal-degree interpolating polynomial for the real-valued function f(x) at the n + 1 distinct real numbers x0, .... xn what is the maximum possible degree of p(x)?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "n",
        "B": "n + 1",
        "C": "n + 2",
        "D": "2n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: If p(x) is da minimal-degree interpolating polynomial fa the real-valued function fuc(x) at da n + 1 distinct real numbers x0, .... xn wht is da maximum possible degree of p(x)?\nA. n\nB. n + 1\nC. n + 2\nD. 2n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.0024756519123911858,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.0024756519123911858
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0024756414350122213,
              "max_token_negative_log_likelihood": 0.0024756414350122213,
              "predictive_entropy": 0.002469520317390561,
              "shannon_entropy": 0.017311599105596542
            }
          }
        ],
        "cached": false,
        "request_time": 0.5273699760437012,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Bob writes down a number between 1 and 1,000. Mary must identify that number by asking \"yes/no\" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?"
        },
        "references": [
          {
            "output": {
              "text": "1,000"
            },
            "tags": []
          },
          {
            "output": {
              "text": "999"
            },
            "tags": []
          },
          {
            "output": {
              "text": "500"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id48"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1,000",
        "B": "999",
        "C": "500",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Bob writes down a number between 1 and 1,000. Mary must identify that number by asking \"yes/no\" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?\nA. 1,000\nB. 999\nC. 500\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.5105049014091492,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.5105049014091492
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5105048418045044,
              "max_token_negative_log_likelihood": 0.5105048418045044,
              "predictive_entropy": 0.30640116333961487,
              "shannon_entropy": 0.8959009647369385
            }
          }
        ],
        "cached": false,
        "request_time": 0.5311281681060791,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "bob  writes   down   a   number   between  1  and   1,000.  mary must  identify that number by  asking \"yes/no\" questions   of  bob.   mary  knows   that bob always  tells   the truth.  if mary   uses an  optimal  strategy,   then  she'll  determine   the   answer at  the end  of  exactly  how many  questions in   the   worst   case?"
        },
        "references": [
          {
            "output": {
              "text": "1,000"
            },
            "tags": []
          },
          {
            "output": {
              "text": "999"
            },
            "tags": []
          },
          {
            "output": {
              "text": "500"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id48",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Bob writes down a number between 1 and 1,000. Mary must identify that number by asking \"yes/no\" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1,000",
        "B": "999",
        "C": "500",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: bob  writes   down   a   number   between  1  and   1,000.  mary must  identify that number by  asking \"yes/no\" questions   of  bob.   mary  knows   that bob always  tells   the truth.  if mary   uses an  optimal  strategy,   then  she'll  determine   the   answer at  the end  of  exactly  how many  questions in   the   worst   case?\nA. 1,000\nB. 999\nC. 500\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.01244835089892149,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.01244835089892149
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.012448342517018318,
              "max_token_negative_log_likelihood": 0.012448342517018318,
              "predictive_entropy": 0.012294341810047626,
              "shannon_entropy": 0.0749150887131691
            }
          }
        ],
        "cached": false,
        "request_time": 0.5053565502166748,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Bob writes downn a number between 1 and 1,000. Mary must identify dat number by askin \"yea/no\" questions of Bob. Mary knows dat Bob always tells da truth. If Mary uses an optimal strategy, then she gon determine da answer at da end of exactly how many questions in da worst case?"
        },
        "references": [
          {
            "output": {
              "text": "1,000"
            },
            "tags": []
          },
          {
            "output": {
              "text": "999"
            },
            "tags": []
          },
          {
            "output": {
              "text": "500"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id48",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Bob writes down a number between 1 and 1,000. Mary must identify that number by asking \"yes/no\" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1,000",
        "B": "999",
        "C": "500",
        "D": "10"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Bob writes downn a number between 1 and 1,000. Mary must identify dat number by askin \"yea/no\" questions of Bob. Mary knows dat Bob always tells da truth. If Mary uses an optimal strategy, then she gon determine da answer at da end of exactly how many questions in da worst case?\nA. 1,000\nB. 999\nC. 500\nD. 10\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.19238421320915222,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.19238421320915222
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.19238418340682983,
              "max_token_negative_log_likelihood": 0.19238418340682983,
              "predictive_entropy": 0.15871499478816986,
              "shannon_entropy": 0.475242018699646
            }
          }
        ],
        "cached": false,
        "request_time": 0.5313131809234619,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Many cryptographic protocols base their security on assumptions about the computational difficulty of integer factorization. Integer factorization serves this purpose because we believe that"
        },
        "references": [
          {
            "output": {
              "text": "integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "P = NP"
            },
            "tags": []
          },
          {
            "output": {
              "text": "even if P = NP, integer factorization is still likely not to be polynomial-time computable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "testing primality is computationally intractable"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id56"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs",
        "B": "P = NP",
        "C": "even if P = NP, integer factorization is still likely not to be polynomial-time computable",
        "D": "testing primality is computationally intractable"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Many cryptographic protocols base their security on assumptions about the computational difficulty of integer factorization. Integer factorization serves this purpose because we believe that\nA. integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs\nB. P = NP\nC. even if P = NP, integer factorization is still likely not to be polynomial-time computable\nD. testing primality is computationally intractable\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0001722425949992612,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0001722425949992612
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.00017227226635441184,
              "max_token_negative_log_likelihood": 0.00017227226635441184,
              "predictive_entropy": 0.0001722425949992612,
              "shannon_entropy": 0.0017134342342615128
            }
          }
        ],
        "cached": false,
        "request_time": 0.5148293972015381,
        "request_datetime": 1755797620
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "many   cryptographic   protocols  base their  security  on   assumptions about   the computational  difficulity  of integer  factorization.   integer  factorization   serves   this   purpose   because  we believe that"
        },
        "references": [
          {
            "output": {
              "text": "integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "P = NP"
            },
            "tags": []
          },
          {
            "output": {
              "text": "even if P = NP, integer factorization is still likely not to be polynomial-time computable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "testing primality is computationally intractable"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id56",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Many cryptographic protocols base their security on assumptions about the computational difficulty of integer factorization. Integer factorization serves this purpose because we believe that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs",
        "B": "P = NP",
        "C": "even if P = NP, integer factorization is still likely not to be polynomial-time computable",
        "D": "testing primality is computationally intractable"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: many   cryptographic   protocols  base their  security  on   assumptions about   the computational  difficulity  of integer  factorization.   integer  factorization   serves   this   purpose   because  we believe that\nA. integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs\nB. P = NP\nC. even if P = NP, integer factorization is still likely not to be polynomial-time computable\nD. testing primality is computationally intractable\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0011024356354027987,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0011024356354027987
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.001102458918467164,
              "max_token_negative_log_likelihood": 0.001102458918467164,
              "predictive_entropy": 0.0011012441245839,
              "shannon_entropy": 0.008626680821180344
            }
          }
        ],
        "cached": false,
        "request_time": 0.5319325923919678,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Many cryptographic protocols base their security on assumptions bou the computational difficulty of integer factorization. Integer factorization serves dis purpose cuz we believe that"
        },
        "references": [
          {
            "output": {
              "text": "integer multiplication is a function whose inverse, factorization, remains difficult fir a bigass class of inputs"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "P = NP"
            },
            "tags": []
          },
          {
            "output": {
              "text": "even if P = NP, integer factorization is still likely not to b polynomial-time computable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "testing primality is computationally intractable"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id56",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Many cryptographic protocols base their security on assumptions about the computational difficulty of integer factorization. Integer factorization serves this purpose because we believe that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "integer multiplication is a function whose inverse, factorization, remains difficult fir a bigass class of inputs",
        "B": "P = NP",
        "C": "even if P = NP, integer factorization is still likely not to b polynomial-time computable",
        "D": "testing primality is computationally intractable"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Many cryptographic protocols base their security on assumptions bou the computational difficulty of integer factorization. Integer factorization serves dis purpose cuz we believe that\nA. integer multiplication is a function whose inverse, factorization, remains difficult fir a bigass class of inputs\nB. P = NP\nC. even if P = NP, integer factorization is still likely not to b polynomial-time computable\nD. testing primality is computationally intractable\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.00019226610311307013,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.00019226610311307013
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0001922434603329748,
              "max_token_negative_log_likelihood": 0.0001922434603329748,
              "predictive_entropy": 0.00019220651302020997,
              "shannon_entropy": 0.0018436702666804194
            }
          }
        ],
        "cached": false,
        "request_time": 0.5155987739562988,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "If a malicious process is granted temporary administrator-level access to a system"
        },
        "references": [
          {
            "output": {
              "text": "the threat is over as soon as the process is killed"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the threat is over after the operating system is rebooted"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the thread is over after rebooting the machine and replacing files that show a virus infection"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the threat is often permanent until the entire disk is wiped clean"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id66"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "the threat is over as soon as the process is killed",
        "B": "the threat is over after the operating system is rebooted",
        "C": "the thread is over after rebooting the machine and replacing files that show a virus infection",
        "D": "the threat is often permanent until the entire disk is wiped clean"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: If a malicious process is granted temporary administrator-level access to a system\nA. the threat is over as soon as the process is killed\nB. the threat is over after the operating system is rebooted\nC. the thread is over after rebooting the machine and replacing files that show a virus infection\nD. the threat is often permanent until the entire disk is wiped clean\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -5.960462772236497e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -5.960462772236497e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 5.960466182841628e-07,
              "max_token_negative_log_likelihood": 5.960466182841628e-07,
              "predictive_entropy": 5.960462772236497e-07,
              "shannon_entropy": 9.937246431945823e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5319812297821045,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "if  a   malicious   process is granted   temporary administrator-level access   to  a sytem"
        },
        "references": [
          {
            "output": {
              "text": "the threat is over as soon as the process is killed"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the threat is over after the operating system is rebooted"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the thread is over after rebooting the machine and replacing files that show a virus infection"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the threat is often permanent until the entire disk is wiped clean"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id66",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "If a malicious process is granted temporary administrator-level access to a system"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "the threat is over as soon as the process is killed",
        "B": "the threat is over after the operating system is rebooted",
        "C": "the thread is over after rebooting the machine and replacing files that show a virus infection",
        "D": "the threat is often permanent until the entire disk is wiped clean"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: if  a   malicious   process is granted   temporary administrator-level access   to  a sytem\nA. the threat is over as soon as the process is killed\nB. the threat is over after the operating system is rebooted\nC. the thread is over after rebooting the machine and replacing files that show a virus infection\nD. the threat is often permanent until the entire disk is wiped clean\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -5.602820692729438e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -5.602820692729438e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 5.602852525044e-06,
              "max_token_negative_log_likelihood": 5.602852525044e-06,
              "predictive_entropy": 5.602821147476789e-06,
              "shannon_entropy": 7.517250924138352e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5181622505187988,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two alternatives for interconnecting a set of processors with bidirectional links are (1) the fully interconnected network, in which each processor is directly connected to every other processor, and (2) the ring network, in which each processor is connected to two other processors. The worst-case path length for a network is the maximum, over all pairs of nodes in the network, of the minimum length paths (measured in number of links) between the nodes. For each type of interconnection of n processors, a figure of merit can be formed as the product of the number of links required for the network times the worst-case path length connecting any two processors. The ratio of this figure of merit for the fully interconnected network compared to that of the ring network, for even n > 2, is"
        },
        "references": [
          {
            "output": {
              "text": "1/(n^2)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/(n(n-1))"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/n"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(n-1)/n"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id59"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/(n^2)",
        "B": "1/(n(n-1))",
        "C": "1/n",
        "D": "(n-1)/n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two alternatives for interconnecting a set of processors with bidirectional links are (1) the fully interconnected network, in which each processor is directly connected to every other processor, and (2) the ring network, in which each processor is connected to two other processors. The worst-case path length for a network is the maximum, over all pairs of nodes in the network, of the minimum length paths (measured in number of links) between the nodes. For each type of interconnection of n processors, a figure of merit can be formed as the product of the number of links required for the network times the worst-case path length connecting any two processors. The ratio of this figure of merit for the fully interconnected network compared to that of the ring network, for even n > 2, is\nA. 1/(n^2)\nB. 1/(n(n-1))\nC. 1/n\nD. (n-1)/n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -3.657102346420288,
            "tokens": [
              {
                "text": "A",
                "logprob": -3.657102346420288
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.657102108001709,
              "max_token_negative_log_likelihood": 3.657102108001709,
              "predictive_entropy": 0.09437951445579529,
              "shannon_entropy": 0.7709856033325195
            }
          }
        ],
        "cached": false,
        "request_time": 0.5700592994689941,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "two   alternatives   for  interconnecting a set of processors with bidirectional   links are (1)   the fully   interconnected  network,  in   which each processor   is directly   connected to every  other processor,   and (2)  the   ring network,   in   which  eahc processer   is  connected to two other   processors. the worst-case  path length   for a network  is  the   maximum,   over all pairs  of nodes  in  the  network, of  teh   minimum length   paths   (measured   in   number of links)  between the nodes.  for each  type   of interconnection of   n   processors, a figure of   merit   can be   formed as  the product of the   number   of  links required   for  the  network  times  the worst-case  path   length   connecting   any  two processors.  the ratio   of  this figure   of   merit for  the   fully   interconnected network   compared   to   thgat  of  the  ring network, for  even n  >  2,   is"
        },
        "references": [
          {
            "output": {
              "text": "1/(n^2)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/(n(n-1))"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/n"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(n-1)/n"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id59",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Two alternatives for interconnecting a set of processors with bidirectional links are (1) the fully interconnected network, in which each processor is directly connected to every other processor, and (2) the ring network, in which each processor is connected to two other processors. The worst-case path length for a network is the maximum, over all pairs of nodes in the network, of the minimum length paths (measured in number of links) between the nodes. For each type of interconnection of n processors, a figure of merit can be formed as the product of the number of links required for the network times the worst-case path length connecting any two processors. The ratio of this figure of merit for the fully interconnected network compared to that of the ring network, for even n > 2, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/(n^2)",
        "B": "1/(n(n-1))",
        "C": "1/n",
        "D": "(n-1)/n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: two   alternatives   for  interconnecting a set of processors with bidirectional   links are (1)   the fully   interconnected  network,  in   which each processor   is directly   connected to every  other processor,   and (2)  the   ring network,   in   which  eahc processer   is  connected to two other   processors. the worst-case  path length   for a network  is  the   maximum,   over all pairs  of nodes  in  the  network, of  teh   minimum length   paths   (measured   in   number of links)  between the nodes.  for each  type   of interconnection of   n   processors, a figure of   merit   can be   formed as  the product of the   number   of  links required   for  the  network  times  the worst-case  path   length   connecting   any  two processors.  the ratio   of  this figure   of   merit for  the   fully   interconnected network   compared   to   thgat  of  the  ring network, for  even n  >  2,   is\nA. 1/(n^2)\nB. 1/(n(n-1))\nC. 1/n\nD. (n-1)/n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.12021956592798233,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.12021956592798233
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12021955847740173,
              "max_token_negative_log_likelihood": 0.12021955847740173,
              "predictive_entropy": 0.1066017746925354,
              "shannon_entropy": 0.4527670741081238
            }
          }
        ],
        "cached": false,
        "request_time": 0.5531909465789795,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two alternatives fa interconnecting a set of processors witt bidirectional links r (1) da fully interconnected network, in which each processor is directly connected to every other processor, and (2) da ring network, in which each processor is connected to 2 other processors. Da worst-case path length fa a network is da maximum, ova all pairs of nodes in da network, of da minimum length paths (measured in number of links) between da nodes. Fir each type of interconnection of n processors, a figure of merit can b formed as da product of da number of links required fa the network times da worst-case path length connecting any 2 processors. Da ratio of dis figure of merit fir the fully interconnected network compared to dat of da ring network, fa even n > 2, is"
        },
        "references": [
          {
            "output": {
              "text": "1/(n^2)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/(n(n-1))"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/n"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(n-1)/n"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id59",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Two alternatives for interconnecting a set of processors with bidirectional links are (1) the fully interconnected network, in which each processor is directly connected to every other processor, and (2) the ring network, in which each processor is connected to two other processors. The worst-case path length for a network is the maximum, over all pairs of nodes in the network, of the minimum length paths (measured in number of links) between the nodes. For each type of interconnection of n processors, a figure of merit can be formed as the product of the number of links required for the network times the worst-case path length connecting any two processors. The ratio of this figure of merit for the fully interconnected network compared to that of the ring network, for even n > 2, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/(n^2)",
        "B": "1/(n(n-1))",
        "C": "1/n",
        "D": "(n-1)/n"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two alternatives fa interconnecting a set of processors witt bidirectional links r (1) da fully interconnected network, in which each processor is directly connected to every other processor, and (2) da ring network, in which each processor is connected to 2 other processors. Da worst-case path length fa a network is da maximum, ova all pairs of nodes in da network, of da minimum length paths (measured in number of links) between da nodes. Fir each type of interconnection of n processors, a figure of merit can b formed as da product of da number of links required fa the network times da worst-case path length connecting any 2 processors. Da ratio of dis figure of merit fir the fully interconnected network compared to dat of da ring network, fa even n > 2, is\nA. 1/(n^2)\nB. 1/(n(n-1))\nC. 1/n\nD. (n-1)/n\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.06655077636241913,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.06655077636241913
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.06655076146125793,
              "max_token_negative_log_likelihood": 0.06655076146125793,
              "predictive_entropy": 0.06226591765880585,
              "shannon_entropy": 0.30433017015457153
            }
          }
        ],
        "cached": false,
        "request_time": 0.6052803993225098,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In the NoNicks operating system, the time required by a single file-read operation has four nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of the system, the file read retrieved blocks of 1,000 bytes. In version 2, the file read (along with the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. The ratio of-the time required to read a large file under version 2 to the time required to read the same large file under version 1 is approximately"
        },
        "references": [
          {
            "output": {
              "text": "1:4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1:3.5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "1:1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.1:1"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id18"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1:4",
        "B": "1:3.5",
        "C": "1:1",
        "D": "1.1:1"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In the NoNicks operating system, the time required by a single file-read operation has four nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of the system, the file read retrieved blocks of 1,000 bytes. In version 2, the file read (along with the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. The ratio of-the time required to read a large file under version 2 to the time required to read the same large file under version 1 is approximately\nA. 1:4\nB. 1:3.5\nC. 1:1\nD. 1.1:1\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -2.5844228267669678,
            "tokens": [
              {
                "text": "C",
                "logprob": -2.5844228267669678
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.5844225883483887,
              "max_token_negative_log_likelihood": 2.5844225883483887,
              "predictive_entropy": 0.1949678510427475,
              "shannon_entropy": 0.30333760380744934
            }
          }
        ],
        "cached": false,
        "request_time": 0.5473604202270508,
        "request_datetime": 1755797621
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in  the   nonicks   operating  system,  the  time recquired   by   a single  file-read   operation has  four   nonoverlapping  components:\ndisk   seek time-25 msec\ndisk latency   time-8 msec\ndisk transfer time-   1 msec per 1,000 bytes\noperating system overhead-1 msec  per  1,000  bytes   + 10   msec\nin  version 1 of the   system,  the  file read   retrieved  blocks  of  1,000  bytes. in version 2,  the  file  read  (along   with  the   underlying  layout   on   disk)   was  modified  to retrieve  blocks   of  4,000   bytes. the  ratio   of-the   tiome   required   to   read  a   large   file  under   version 2   to   the   time  required to read  teh   same larg  file   under  version  1  is   approximately"
        },
        "references": [
          {
            "output": {
              "text": "1:4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1:3.5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "1:1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.1:1"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id18",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In the NoNicks operating system, the time required by a single file-read operation has four nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of the system, the file read retrieved blocks of 1,000 bytes. In version 2, the file read (along with the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. The ratio of-the time required to read a large file under version 2 to the time required to read the same large file under version 1 is approximately"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1:4",
        "B": "1:3.5",
        "C": "1:1",
        "D": "1.1:1"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in  the   nonicks   operating  system,  the  time recquired   by   a single  file-read   operation has  four   nonoverlapping  components:\ndisk   seek time-25 msec\ndisk latency   time-8 msec\ndisk transfer time-   1 msec per 1,000 bytes\noperating system overhead-1 msec  per  1,000  bytes   + 10   msec\nin  version 1 of the   system,  the  file read   retrieved  blocks  of  1,000  bytes. in version 2,  the  file  read  (along   with  the   underlying  layout   on   disk)   was  modified  to retrieve  blocks   of  4,000   bytes. the  ratio   of-the   tiome   required   to   read  a   large   file  under   version 2   to   the   time  required to read  teh   same larg  file   under  version  1  is   approximately\nA. 1:4\nB. 1:3.5\nC. 1:1\nD. 1.1:1\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.03702010586857796,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.03702010586857796
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.037020083516836166,
              "max_token_negative_log_likelihood": 0.037020083516836166,
              "predictive_entropy": 0.03567465394735336,
              "shannon_entropy": 0.1692439764738083
            }
          }
        ],
        "cached": false,
        "request_time": 0.6078572273254395,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In da NoNicks operating system, da time required by a single file-read operation has 4 nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of da system, da file read retrieved blocks of 1,000 bytes. In version 2, da file read (along w the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. Da ratio of-the time required to read a bigass file under version 2 to da time required to read da same bigass file under version 1 is approximately"
        },
        "references": [
          {
            "output": {
              "text": "1:4"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1:3.5"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "1:1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.1:1"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id18",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In the NoNicks operating system, the time required by a single file-read operation has four nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of the system, the file read retrieved blocks of 1,000 bytes. In version 2, the file read (along with the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. The ratio of-the time required to read a large file under version 2 to the time required to read the same large file under version 1 is approximately"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1:4",
        "B": "1:3.5",
        "C": "1:1",
        "D": "1.1:1"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In da NoNicks operating system, da time required by a single file-read operation has 4 nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of da system, da file read retrieved blocks of 1,000 bytes. In version 2, da file read (along w the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. Da ratio of-the time required to read a bigass file under version 2 to da time required to read da same bigass file under version 1 is approximately\nA. 1:4\nB. 1:3.5\nC. 1:1\nD. 1.1:1\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.6108653545379639,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.6108653545379639
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.6108652353286743,
              "max_token_negative_log_likelihood": 1.6108652353286743,
              "predictive_entropy": 0.32171350717544556,
              "shannon_entropy": 0.5600084066390991
            }
          }
        ],
        "cached": false,
        "request_time": 0.5576276779174805,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following language features requires that stack-based storage allocation be used rather than static allocation?"
        },
        "references": [
          {
            "output": {
              "text": "Recursive procedures"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Arbitrary goto's"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two-dimensional arrays"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Integer-valued functions"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id79"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Recursive procedures",
        "B": "Arbitrary goto's",
        "C": "Two-dimensional arrays",
        "D": "Integer-valued functions"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following language features requires that stack-based storage allocation be used rather than static allocation?\nA. Recursive procedures\nB. Arbitrary goto's\nC. Two-dimensional arrays\nD. Integer-valued functions\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 6.119453832553745e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5687828063964844,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of   the following language features   requires that   stack-based   storage   allocation  be  used rather thna  static  allocation?"
        },
        "references": [
          {
            "output": {
              "text": "Recursive procedures"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Arbitrary goto's"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two-dimensional arrays"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Integer-valued functions"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id79",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following language features requires that stack-based storage allocation be used rather than static allocation?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Recursive procedures",
        "B": "Arbitrary goto's",
        "C": "Two-dimensional arrays",
        "D": "Integer-valued functions"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of   the following language features   requires that   stack-based   storage   allocation  be  used rather thna  static  allocation?\nA. Recursive procedures\nB. Arbitrary goto's\nC. Two-dimensional arrays\nD. Integer-valued functions\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.8416863520331894e-11
            }
          }
        ],
        "cached": false,
        "request_time": 0.5536720752716064,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following language features requires dat stack-based storage allocation b used rather den static allocation?"
        },
        "references": [
          {
            "output": {
              "text": "Recursive procedures"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Arbitrary goto's"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two-dimensional arrays"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Integer-valued functions"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id79",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following language features requires that stack-based storage allocation be used rather than static allocation?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Recursive procedures",
        "B": "Arbitrary goto's",
        "C": "Two-dimensional arrays",
        "D": "Integer-valued functions"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following language features requires dat stack-based storage allocation b used rather den static allocation?\nA. Recursive procedures\nB. Arbitrary goto's\nC. Two-dimensional arrays\nD. Integer-valued functions\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 2.9461134545272216e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5212736129760742,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following characteristics of a programming language is best specified using a context-free grammar?"
        },
        "references": [
          {
            "output": {
              "text": "Identifier length"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Maximum level of nesting"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Operator precedence"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Type compatibility"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id97"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Identifier length",
        "B": "Maximum level of nesting",
        "C": "Operator precedence",
        "D": "Type compatibility"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following characteristics of a programming language is best specified using a context-free grammar?\nA. Identifier length\nB. Maximum level of nesting\nC. Operator precedence\nD. Type compatibility\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.00019107422849629074,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.00019107422849629074
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.00019105113460682333,
              "max_token_negative_log_likelihood": 0.00019105113460682333,
              "predictive_entropy": 0.00019101463840343058,
              "shannon_entropy": 0.0018273771274834871
            }
          }
        ],
        "cached": false,
        "request_time": 0.5062127113342285,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "hwihc of  hten following   charistics   of  a   programming  language is  best   specified using   a   context-free  grammar?"
        },
        "references": [
          {
            "output": {
              "text": "Identifier length"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Maximum level of nesting"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Operator precedence"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Type compatibility"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id97",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following characteristics of a programming language is best specified using a context-free grammar?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Identifier length",
        "B": "Maximum level of nesting",
        "C": "Operator precedence",
        "D": "Type compatibility"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: hwihc of  hten following   charistics   of  a   programming  language is  best   specified using   a   context-free  grammar?\nA. Identifier length\nB. Maximum level of nesting\nC. Operator precedence\nD. Type compatibility\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -6.210611172718927e-05,
            "tokens": [
              {
                "text": "C",
                "logprob": -6.210611172718927e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 6.210996798472479e-05,
              "max_token_negative_log_likelihood": 6.210996798472479e-05,
              "predictive_entropy": 6.210611172718927e-05,
              "shannon_entropy": 0.0006632207660004497
            }
          }
        ],
        "cached": false,
        "request_time": 0.5214130878448486,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following characteristics of a programming language is best specified usin a context-free grammar?"
        },
        "references": [
          {
            "output": {
              "text": "Identifier length"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Maximum level of nesting"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Operator precedence"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Type compatibility"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id97",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following characteristics of a programming language is best specified using a context-free grammar?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Identifier length",
        "B": "Maximum level of nesting",
        "C": "Operator precedence",
        "D": "Type compatibility"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following characteristics of a programming language is best specified usin a context-free grammar?\nA. Identifier length\nB. Maximum level of nesting\nC. Operator precedence\nD. Type compatibility\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -9.60780744208023e-05,
            "tokens": [
              {
                "text": "C",
                "logprob": -9.60780744208023e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 9.608730033505708e-05,
              "max_token_negative_log_likelihood": 9.608730033505708e-05,
              "predictive_entropy": 9.607806714484468e-05,
              "shannon_entropy": 0.0009850270580500364
            }
          }
        ],
        "cached": false,
        "request_time": 0.5090811252593994,
        "request_datetime": 1755797622
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In which of the following representations of numbers by 8-bit words is the addition of the integers 109 and -42 within range?\nI. One's complement\nII. Two's complement\nIII. Sign and magnitude"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id65"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In which of the following representations of numbers by 8-bit words is the addition of the integers 109 and -42 within range?\nI. One's complement\nII. Two's complement\nIII. Sign and magnitude\nA. I only\nB. II only\nC. I and II only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.07287787614041e-05,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.07287787614041e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.0728893357736524e-05,
              "max_token_negative_log_likelihood": 1.0728893357736524e-05,
              "predictive_entropy": 1.0728777851909399e-05,
              "shannon_entropy": 0.00013413447595667094
            }
          }
        ],
        "cached": false,
        "request_time": 0.5257031917572021,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in  which  of  the  following representations   of numbers  by 8-bit  words is  the addition of   the  integers  109   and -42   within   range?\ni.   one's complement\nii. two's   complement\niii.   sign   adn   magnitude"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id65",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In which of the following representations of numbers by 8-bit words is the addition of the integers 109 and -42 within range?\nI. One's complement\nII. Two's complement\nIII. Sign and magnitude"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in  which  of  the  following representations   of numbers  by 8-bit  words is  the addition of   the  integers  109   and -42   within   range?\ni.   one's complement\nii. two's   complement\niii.   sign   adn   magnitude\nA. I only\nB. II only\nC. I and II only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.0016891986597329378,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.0016891986597329378
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0016891909763216972,
              "max_token_negative_log_likelihood": 0.0016891909763216972,
              "predictive_entropy": 0.0016863399650901556,
              "shannon_entropy": 0.012813769280910492
            }
          }
        ],
        "cached": false,
        "request_time": 0.5138258934020996,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In which of da following representations of numbers by 8-bit words is da addition of da integers 109 and -42 within range?\nI. One's complement\nII. 2's complement\nIII. Sign and magnitude"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id65",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In which of the following representations of numbers by 8-bit words is the addition of the integers 109 and -42 within range?\nI. One's complement\nII. Two's complement\nIII. Sign and magnitude"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In which of da following representations of numbers by 8-bit words is da addition of da integers 109 and -42 within range?\nI. One's complement\nII. 2's complement\nIII. Sign and magnitude\nA. I only\nB. II only\nC. I and II only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -4.291525328881107e-06,
            "tokens": [
              {
                "text": "C",
                "logprob": -4.291525328881107e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.291543518775143e-06,
              "max_token_negative_log_likelihood": 4.291543518775143e-06,
              "predictive_entropy": 4.291524874133756e-06,
              "shannon_entropy": 5.7592635130276904e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5294780731201172,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of the following, which gives the best upper bound for the value of f(N) where f is a solution to the recurrence f(2N + 1) = f(2N) = f(N) + log N for N >= 1, with f(1) = 0?"
        },
        "references": [
          {
            "output": {
              "text": "O(log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(N log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(log N) + 0(1)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O((log N)^2)"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id100"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "O(log N)",
        "B": "O(N log N)",
        "C": "O(log N) + 0(1)",
        "D": "O((log N)^2)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of the following, which gives the best upper bound for the value of f(N) where f is a solution to the recurrence f(2N + 1) = f(2N) = f(N) + log N for N >= 1, with f(1) = 0?\nA. O(log N)\nB. O(N log N)\nC. O(log N) + 0(1)\nD. O((log N)^2)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.009523909538984299,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.009523909538984299
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.009523896500468254,
              "max_token_negative_log_likelihood": 0.009523896500468254,
              "predictive_entropy": 0.009433622471988201,
              "shannon_entropy": 0.05519906431436539
            }
          }
        ],
        "cached": false,
        "request_time": 0.5171713829040527,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "of  teh folowing,  which gives  the   best  upper bound   for  the  value  of f(n)   where f   is a   solution  to  the recurrence   f(2n   +   1)   = f(2n) =   f(n)  +  log   n   for  n >= 1,  with f(1)   = 0?"
        },
        "references": [
          {
            "output": {
              "text": "O(log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(N log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(log N) + 0(1)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O((log N)^2)"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id100",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which gives the best upper bound for the value of f(N) where f is a solution to the recurrence f(2N + 1) = f(2N) = f(N) + log N for N >= 1, with f(1) = 0?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "O(log N)",
        "B": "O(N log N)",
        "C": "O(log N) + 0(1)",
        "D": "O((log N)^2)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: of  teh folowing,  which gives  the   best  upper bound   for  the  value  of f(n)   where f   is a   solution  to  the recurrence   f(2n   +   1)   = f(2n) =   f(n)  +  log   n   for  n >= 1,  with f(1)   = 0?\nA. O(log N)\nB. O(N log N)\nC. O(log N) + 0(1)\nD. O((log N)^2)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0021029042545706034,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0021029042545706034
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0021029156632721424,
              "max_token_negative_log_likelihood": 0.0021029156632721424,
              "predictive_entropy": 0.0020984981674700975,
              "shannon_entropy": 0.015319658443331718
            }
          }
        ],
        "cached": false,
        "request_time": 0.5339393615722656,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of da following, which gives da best upper bound fa the value of fuc(N) where fuc is a solution to da recurrence fuc(2N + 1) = fuc(2N) = fuc(N) + log N fa N >= 1, wid f(1) = 0?"
        },
        "references": [
          {
            "output": {
              "text": "O(log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(N log N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O(log N) + 0(1)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "O((log N)^2)"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id100",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which gives the best upper bound for the value of f(N) where f is a solution to the recurrence f(2N + 1) = f(2N) = f(N) + log N for N >= 1, with f(1) = 0?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "O(log N)",
        "B": "O(N log N)",
        "C": "O(log N) + 0(1)",
        "D": "O((log N)^2)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of da following, which gives da best upper bound fa the value of fuc(N) where fuc is a solution to da recurrence fuc(2N + 1) = fuc(2N) = fuc(N) + log N fa N >= 1, wid f(1) = 0?\nA. O(log N)\nB. O(N log N)\nC. O(log N) + 0(1)\nD. O((log N)^2)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.030238499864935875,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.030238499864935875
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.030238481238484383,
              "max_token_negative_log_likelihood": 0.030238481238484383,
              "predictive_entropy": 0.029337801039218903,
              "shannon_entropy": 0.14203298091888428
            }
          }
        ],
        "cached": false,
        "request_time": 0.5178577899932861,
        "request_datetime": 1755797623
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "If L is a language accepted by some automaton M, which of the following is (are) true?\nI. If M is a nondeterministic finite automaton, then L is accepted by some deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by some nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by some deterministic Turing machine."
        },
        "references": [
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id13"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "III only",
        "B": "I and II only",
        "C": "II and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: If L is a language accepted by some automaton M, which of the following is (are) true?\nI. If M is a nondeterministic finite automaton, then L is accepted by some deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by some nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by some deterministic Turing machine.\nA. III only\nB. I and II only\nC. II and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 6.849772944406141e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5540030002593994,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "if  l   is   a laguage accepted by some automaton m,  which of the  follwoing   is (are)  true?\ni.   if  m is   a nondeterministic  finite automaton,  then  l   is  accepted  by some   deterministic finite   automaton.\nii.  if m is a  deterministic   pushdown automaton,  then   l  is accepted   by  some nondeterministic pushdown automaton.\niii.  if   m   is  a nondeterministic pushdown automaton, then   l   is accepted by   some  deterministic  turing  machine."
        },
        "references": [
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id13",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "If L is a language accepted by some automaton M, which of the following is (are) true?\nI. If M is a nondeterministic finite automaton, then L is accepted by some deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by some nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by some deterministic Turing machine."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "III only",
        "B": "I and II only",
        "C": "II and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: if  l   is   a laguage accepted by some automaton m,  which of the  follwoing   is (are)  true?\ni.   if  m is   a nondeterministic  finite automaton,  then  l   is  accepted  by some   deterministic finite   automaton.\nii.  if m is a  deterministic   pushdown automaton,  then   l  is accepted   by  some nondeterministic pushdown automaton.\niii.  if   m   is  a nondeterministic pushdown automaton, then   l   is accepted by   some  deterministic  turing  machine.\nA. III only\nB. I and II only\nC. II and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.311301275563892e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.311301275563892e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.3113030945532955e-06,
              "max_token_negative_log_likelihood": 1.3113030945532955e-06,
              "predictive_entropy": 1.3113013892507297e-06,
              "shannon_entropy": 1.896542016766034e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.541907548904419,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "If L is a language accepted by sum automaton M, which of da following is (r) tru?\nI. If M is a nondeterministic finite automaton, then L is accepted by sum deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by sum nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by sum deterministic Turing machine."
        },
        "references": [
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id13",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "If L is a language accepted by some automaton M, which of the following is (are) true?\nI. If M is a nondeterministic finite automaton, then L is accepted by some deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by some nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by some deterministic Turing machine."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "III only",
        "B": "I and II only",
        "C": "II and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: If L is a language accepted by sum automaton M, which of da following is (r) tru?\nI. If M is a nondeterministic finite automaton, then L is accepted by sum deterministic finite automaton.\nII. If M is a deterministic pushdown automaton, then L is accepted by sum nondeterministic pushdown automaton.\nIII. If M is a nondeterministic pushdown automaton, then L is accepted by sum deterministic Turing machine.\nA. III only\nB. I and II only\nC. II and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.033306144177913666,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.033306144177913666
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.033306121826171875,
              "max_token_negative_log_likelihood": 0.033306121826171875,
              "predictive_entropy": 0.032215092331171036,
              "shannon_entropy": 0.16143789887428284
            }
          }
        ],
        "cached": false,
        "request_time": 0.5542340278625488,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "For all strings x, the function x^M is defined recursively as follows.\ne^M= e, and\nif w is a string and a is a string with length 1, then\n(aw)^M = aw^Ma.\nLet a be a string with length 1, and let x and y be arbitrary strings. Which of the following is true?"
        },
        "references": [
          {
            "output": {
              "text": "a^M = a"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(ax)^M = (xa)^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(xy)^M = y^Mx^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "None of the above"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id31"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "a^M = a",
        "B": "(ax)^M = (xa)^M",
        "C": "(xy)^M = y^Mx^M",
        "D": "None of the above"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: For all strings x, the function x^M is defined recursively as follows.\ne^M= e, and\nif w is a string and a is a string with length 1, then\n(aw)^M = aw^Ma.\nLet a be a string with length 1, and let x and y be arbitrary strings. Which of the following is true?\nA. a^M = a\nB. (ax)^M = (xa)^M\nC. (xy)^M = y^Mx^M\nD. None of the above\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.003947325050830841,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.003947325050830841
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.003947349730879068,
              "max_token_negative_log_likelihood": 0.003947349730879068,
              "predictive_entropy": 0.003931798972189426,
              "shannon_entropy": 0.029059289023280144
            }
          }
        ],
        "cached": false,
        "request_time": 0.5372147560119629,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "for  all strings  x,  the function  x^m   is  defined  recursively   as  follows.\ne^m= e,  anbd\nif w  is  a string and a  is a  string   with  length   1, then\n(aw)^m  = aw^ma.\nlet   a   be  a  string with  length 1,   and let   x adn   y   be arbitrary strings. which of the  following is true?"
        },
        "references": [
          {
            "output": {
              "text": "a^M = a"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(ax)^M = (xa)^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(xy)^M = y^Mx^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "None of the above"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id31",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "For all strings x, the function x^M is defined recursively as follows.\ne^M= e, and\nif w is a string and a is a string with length 1, then\n(aw)^M = aw^Ma.\nLet a be a string with length 1, and let x and y be arbitrary strings. Which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "a^M = a",
        "B": "(ax)^M = (xa)^M",
        "C": "(xy)^M = y^Mx^M",
        "D": "None of the above"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: for  all strings  x,  the function  x^m   is  defined  recursively   as  follows.\ne^m= e,  anbd\nif w  is  a string and a  is a  string   with  length   1, then\n(aw)^m  = aw^ma.\nlet   a   be  a  string with  length 1,   and let   x adn   y   be arbitrary strings. which of the  following is true?\nA. a^M = a\nB. (ax)^M = (xa)^M\nC. (xy)^M = y^Mx^M\nD. None of the above\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.18941032886505127,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.18941032886505127
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18941029906272888,
              "max_token_negative_log_likelihood": 0.18941029906272888,
              "predictive_entropy": 0.15672697126865387,
              "shannon_entropy": 0.5209941864013672
            }
          }
        ],
        "cached": false,
        "request_time": 0.5420138835906982,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "For alll strings x, da function x^M is defined recursively as follows.\ne^M= e, and\nif wid is a string and a is a string wit length 1, then\n(aw)^M = aw^Ma.\nLet a b a string w length 1, and let x and y b arbitrary strings. Which of da following is tru?"
        },
        "references": [
          {
            "output": {
              "text": "a^M = a"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(ax)^M = (xa)^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "(xy)^M = y^Mx^M"
            },
            "tags": []
          },
          {
            "output": {
              "text": "None of da above"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id31",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "For all strings x, the function x^M is defined recursively as follows.\ne^M= e, and\nif w is a string and a is a string with length 1, then\n(aw)^M = aw^Ma.\nLet a be a string with length 1, and let x and y be arbitrary strings. Which of the following is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "a^M = a",
        "B": "(ax)^M = (xa)^M",
        "C": "(xy)^M = y^Mx^M",
        "D": "None of da above"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: For alll strings x, da function x^M is defined recursively as follows.\ne^M= e, and\nif wid is a string and a is a string wit length 1, then\n(aw)^M = aw^Ma.\nLet a b a string w length 1, and let x and y b arbitrary strings. Which of da following is tru?\nA. a^M = a\nB. (ax)^M = (xa)^M\nC. (xy)^M = y^Mx^M\nD. None of da above\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.006909643299877644,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.006909643299877644
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.006909643299877644,
              "max_token_negative_log_likelihood": 0.006909643299877644,
              "predictive_entropy": 0.006862064823508263,
              "shannon_entropy": 0.044044412672519684
            }
          }
        ],
        "cached": false,
        "request_time": 0.5068981647491455,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2000"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id64"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2000"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?\nA. 0\nB. 256\nC. 1024\nD. 2000\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.13312914967536926,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.13312914967536926
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.13312916457653046,
              "max_token_negative_log_likelihood": 0.13312916457653046,
              "predictive_entropy": 0.11653488129377365,
              "shannon_entropy": 0.4926127791404724
            }
          }
        ],
        "cached": false,
        "request_time": 0.5774147510528564,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "array   a  contains 256  elements  of  4   bytes  each.  its first   element   is   stored   at  physical   address   4,096.\narray  b  contains 512  elements  of   4  bytes  each. its first element   is  stored   at physical   address  8,192.\nassume  that   only arrays  a   and b   can  be   cached  in an initially  empty,   physically   addressed,  physically   tagged,  direct-mapped,  2k-byte   cache   wtih an   8-byte   block   size.  the   following   loop is   then executed.\nfor  (i  =  0;  i   <   256;   i++)\n  a[i]   =   a[i]   +  b[2*i];\nduring  the   execution of   the   loop,   how   many bytes  will   be  written   to   memory   if  teh cache   has  a  write-back  policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2000"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id64",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2000"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: array   a  contains 256  elements  of  4   bytes  each.  its first   element   is   stored   at  physical   address   4,096.\narray  b  contains 512  elements  of   4  bytes  each. its first element   is  stored   at physical   address  8,192.\nassume  that   only arrays  a   and b   can  be   cached  in an initially  empty,   physically   addressed,  physically   tagged,  direct-mapped,  2k-byte   cache   wtih an   8-byte   block   size.  the   following   loop is   then executed.\nfor  (i  =  0;  i   <   256;   i++)\n  a[i]   =   a[i]   +  b[2*i];\nduring  the   execution of   the   loop,   how   many bytes  will   be  written   to   memory   if  teh cache   has  a  write-back  policy?\nA. 0\nB. 256\nC. 1024\nD. 2000\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.04927762225270271,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.04927762225270271
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.04927762970328331,
              "max_token_negative_log_likelihood": 0.04927762970328331,
              "predictive_entropy": 0.04690820351243019,
              "shannon_entropy": 0.232412189245224
            }
          }
        ],
        "cached": false,
        "request_time": 0.5621562004089355,
        "request_datetime": 1755797624
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume dat only arrays A and B can b cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache wid an 8-byte block size. Da following loop is then executed.\nfir (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDurin the execution of da loop, how many bytes gon be written to memory if da cache has a write-back policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2000"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id64",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2000"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume dat only arrays A and B can b cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache wid an 8-byte block size. Da following loop is then executed.\nfir (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDurin the execution of da loop, how many bytes gon be written to memory if da cache has a write-back policy?\nA. 0\nB. 256\nC. 1024\nD. 2000\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.2510431706905365,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.2510431706905365
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2510431706905365,
              "max_token_negative_log_likelihood": 0.2510431706905365,
              "predictive_entropy": 0.19530877470970154,
              "shannon_entropy": 0.6834558844566345
            }
          }
        ],
        "cached": false,
        "request_time": 0.5869269371032715,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The IP protocol is primarily concerned with"
        },
        "references": [
          {
            "output": {
              "text": "Routing packets through the network"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reliable delivery of packets between directly connected machines"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dealing with differences among operating system architectures"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id38"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Routing packets through the network",
        "B": "Reliable delivery of packets between directly connected machines",
        "C": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
        "D": "Dealing with differences among operating system architectures"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The IP protocol is primarily concerned with\nA. Routing packets through the network\nB. Reliable delivery of packets between directly connected machines\nC. Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected\nD. Dealing with differences among operating system architectures\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.029750416055321693,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.029750416055321693
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.029750440269708633,
              "max_token_negative_log_likelihood": 0.029750440269708633,
              "predictive_entropy": 0.028878387063741684,
              "shannon_entropy": 0.13234375417232513
            }
          }
        ],
        "cached": false,
        "request_time": 0.5398406982421875,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "the ip  protocol  is  primarily   concerned  with"
        },
        "references": [
          {
            "output": {
              "text": "Routing packets through the network"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reliable delivery of packets between directly connected machines"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dealing with differences among operating system architectures"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id38",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "The IP protocol is primarily concerned with"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Routing packets through the network",
        "B": "Reliable delivery of packets between directly connected machines",
        "C": "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
        "D": "Dealing with differences among operating system architectures"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: the ip  protocol  is  primarily   concerned  with\nA. Routing packets through the network\nB. Reliable delivery of packets between directly connected machines\nC. Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected\nD. Dealing with differences among operating system architectures\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.0004024887748528272,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.0004024887748528272
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.00040247192373499274,
              "max_token_negative_log_likelihood": 0.00040247192373499274,
              "predictive_entropy": 0.000402309960918501,
              "shannon_entropy": 0.003689608769491315
            }
          }
        ],
        "cached": false,
        "request_time": 0.5434994697570801,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The IP protocol is primarily thinkn with"
        },
        "references": [
          {
            "output": {
              "text": "Routing packets thru the network"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reliable delivery of packets between directly connected machines"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reliable delivery of bigass (multi-packet) messages between machines dat are not necessarily directly connected"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dealing wit differences among operating system architectures"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id38",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "The IP protocol is primarily concerned with"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Routing packets thru the network",
        "B": "Reliable delivery of packets between directly connected machines",
        "C": "Reliable delivery of bigass (multi-packet) messages between machines dat are not necessarily directly connected",
        "D": "Dealing wit differences among operating system architectures"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The IP protocol is primarily thinkn with\nA. Routing packets thru the network\nB. Reliable delivery of packets between directly connected machines\nC. Reliable delivery of bigass (multi-packet) messages between machines dat are not necessarily directly connected\nD. Dealing wit differences among operating system architectures\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.009756026789546013,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.009756026789546013
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.009756019338965416,
              "max_token_negative_log_likelihood": 0.009756019338965416,
              "predictive_entropy": 0.009661301970481873,
              "shannon_entropy": 0.05465882271528244
            }
          }
        ],
        "cached": false,
        "request_time": 0.5227007865905762,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let f(X) = if x = 1 then 0 else [x * f(x - 1) + x**2]. The value of f(4) is"
        },
        "references": [
          {
            "output": {
              "text": "53"
            },
            "tags": []
          },
          {
            "output": {
              "text": "29"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id8"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "53",
        "B": "29",
        "C": "50",
        "D": "100"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let f(X) = if x = 1 then 0 else [x * f(x - 1) + x**2]. The value of f(4) is\nA. 53\nB. 29\nC. 50\nD. 100\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -2.245241165161133,
            "tokens": [
              {
                "text": "B",
                "logprob": -2.245241165161133
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.2452409267425537,
              "max_token_negative_log_likelihood": 2.2452409267425537,
              "predictive_entropy": 0.237775519490242,
              "shannon_entropy": 1.0329327583312988
            }
          }
        ],
        "cached": false,
        "request_time": 0.524477481842041,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let  f(x)   =   if x = 1 then 0  else [x  * f(x - 1)   +  x**2].   the value of  f(4)   is"
        },
        "references": [
          {
            "output": {
              "text": "53"
            },
            "tags": []
          },
          {
            "output": {
              "text": "29"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id8",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let f(X) = if x = 1 then 0 else [x * f(x - 1) + x**2]. The value of f(4) is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "53",
        "B": "29",
        "C": "50",
        "D": "100"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let  f(x)   =   if x = 1 then 0  else [x  * f(x - 1)   +  x**2].   the value of  f(4)   is\nA. 53\nB. 29\nC. 50\nD. 100\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.3074139654636383,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.3074139654636383
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3074139654636383,
              "max_token_negative_log_likelihood": 0.3074139654636383,
              "predictive_entropy": 0.22605566680431366,
              "shannon_entropy": 0.8465437889099121
            }
          }
        ],
        "cached": false,
        "request_time": 0.5125043392181396,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let fuc(X) = if x = 1 then 0 else [x * fuc(x - 1) + x**2]. Da value of fuc(4) is"
        },
        "references": [
          {
            "output": {
              "text": "53"
            },
            "tags": []
          },
          {
            "output": {
              "text": "29"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id8",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let f(X) = if x = 1 then 0 else [x * f(x - 1) + x**2]. The value of f(4) is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "53",
        "B": "29",
        "C": "50",
        "D": "100"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let fuc(X) = if x = 1 then 0 else [x * fuc(x - 1) + x**2]. Da value of fuc(4) is\nA. 53\nB. 29\nC. 50\nD. 100\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.8119798898696899,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.8119798898696899
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8119798898696899,
              "max_token_negative_log_likelihood": 0.8119798898696899,
              "predictive_entropy": 0.36050134897232056,
              "shannon_entropy": 0.8895308971405029
            }
          }
        ],
        "cached": false,
        "request_time": 0.52374267578125,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A 3-way, set-associative cache is"
        },
        "references": [
          {
            "output": {
              "text": "one in which each main memory word can be stored at any of 3 cache locations"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "effective only if 3 or fewer processes are running alternately on the processor"
            },
            "tags": []
          },
          {
            "output": {
              "text": "possible only with write-back"
            },
            "tags": []
          },
          {
            "output": {
              "text": "faster to access than a direct-mapped cache"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id111"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "one in which each main memory word can be stored at any of 3 cache locations",
        "B": "effective only if 3 or fewer processes are running alternately on the processor",
        "C": "possible only with write-back",
        "D": "faster to access than a direct-mapped cache"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A 3-way, set-associative cache is\nA. one in which each main memory word can be stored at any of 3 cache locations\nB. effective only if 3 or fewer processes are running alternately on the processor\nC. possible only with write-back\nD. faster to access than a direct-mapped cache\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.017081990838050842,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.017081990838050842
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.01708196848630905,
              "max_token_negative_log_likelihood": 0.01708196848630905,
              "predictive_entropy": 0.016792653128504753,
              "shannon_entropy": 0.08603791147470474
            }
          }
        ],
        "cached": false,
        "request_time": 0.5110669136047363,
        "request_datetime": 1755797625
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a  3-way, set-associative   cache  is"
        },
        "references": [
          {
            "output": {
              "text": "one in which each main memory word can be stored at any of 3 cache locations"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "effective only if 3 or fewer processes are running alternately on the processor"
            },
            "tags": []
          },
          {
            "output": {
              "text": "possible only with write-back"
            },
            "tags": []
          },
          {
            "output": {
              "text": "faster to access than a direct-mapped cache"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id111",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A 3-way, set-associative cache is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "one in which each main memory word can be stored at any of 3 cache locations",
        "B": "effective only if 3 or fewer processes are running alternately on the processor",
        "C": "possible only with write-back",
        "D": "faster to access than a direct-mapped cache"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a  3-way, set-associative   cache  is\nA. one in which each main memory word can be stored at any of 3 cache locations\nB. effective only if 3 or fewer processes are running alternately on the processor\nC. possible only with write-back\nD. faster to access than a direct-mapped cache\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -3.1681101322174072,
            "tokens": [
              {
                "text": "C",
                "logprob": -3.1681101322174072
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.168109893798828,
              "max_token_negative_log_likelihood": 3.168109893798828,
              "predictive_entropy": 0.13332372903823853,
              "shannon_entropy": 0.17562928795814514
            }
          }
        ],
        "cached": false,
        "request_time": 0.5267610549926758,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:"
        },
        "references": [
          {
            "output": {
              "text": "Counting distinct values: Given a set of n keys, determine the number of distinct key values."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Range search: Given values a and b, find all the records whose key value is in the range a, b."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Symbol table lookup: Given a program identifier, find its type and address."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id91"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Counting distinct values: Given a set of n keys, determine the number of distinct key values.",
        "B": "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary.",
        "C": "Range search: Given values a and b, find all the records whose key value is in the range a, b.",
        "D": "Symbol table lookup: Given a program identifier, find its type and address."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:\nA. Counting distinct values: Given a set of n keys, determine the number of distinct key values.\nB. Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary.\nC. Range search: Given values a and b, find all the records whose key value is in the range a, b.\nD. Symbol table lookup: Given a program identifier, find its type and address.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.07033775746822357,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.07033775746822357
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07033775001764297,
              "max_token_negative_log_likelihood": 0.07033775001764297,
              "predictive_entropy": 0.06556033343076706,
              "shannon_entropy": 0.25068825483322144
            }
          }
        ],
        "cached": false,
        "request_time": 0.511725902557373,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "hash  tables can   contribute  to an  efficient  average-case   solution for all   of the   problems  described below  except:"
        },
        "references": [
          {
            "output": {
              "text": "Counting distinct values: Given a set of n keys, determine the number of distinct key values."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Range search: Given values a and b, find all the records whose key value is in the range a, b."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Symbol table lookup: Given a program identifier, find its type and address."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id91",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Counting distinct values: Given a set of n keys, determine the number of distinct key values.",
        "B": "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary.",
        "C": "Range search: Given values a and b, find all the records whose key value is in the range a, b.",
        "D": "Symbol table lookup: Given a program identifier, find its type and address."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: hash  tables can   contribute  to an  efficient  average-case   solution for all   of the   problems  described below  except:\nA. Counting distinct values: Given a set of n keys, determine the number of distinct key values.\nB. Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary.\nC. Range search: Given values a and b, find all the records whose key value is in the range a, b.\nD. Symbol table lookup: Given a program identifier, find its type and address.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.02635037526488304,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.02635037526488304
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.026350364089012146,
              "max_token_negative_log_likelihood": 0.026350364089012146,
              "predictive_entropy": 0.02566509135067463,
              "shannon_entropy": 0.1343657672405243
            }
          }
        ],
        "cached": false,
        "request_time": 0.5359723567962646,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Hash tables can contribute to an efficient average-case solution fir all of da problems described below EXCEPT:"
        },
        "references": [
          {
            "output": {
              "text": "Counting distinct values: Given a set of n keys, determine da number of distinct key values."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamic dictionary: Support da operations of insert, delete, and search in a dictionary."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Range search: Given values a and b, find alll the records whose key value is in da range a, b."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Symbol table lookup: Given a program identifier, find its type and address."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id91",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Counting distinct values: Given a set of n keys, determine da number of distinct key values.",
        "B": "Dynamic dictionary: Support da operations of insert, delete, and search in a dictionary.",
        "C": "Range search: Given values a and b, find alll the records whose key value is in da range a, b.",
        "D": "Symbol table lookup: Given a program identifier, find its type and address."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Hash tables can contribute to an efficient average-case solution fir all of da problems described below EXCEPT:\nA. Counting distinct values: Given a set of n keys, determine da number of distinct key values.\nB. Dynamic dictionary: Support da operations of insert, delete, and search in a dictionary.\nC. Range search: Given values a and b, find alll the records whose key value is in da range a, b.\nD. Symbol table lookup: Given a program identifier, find its type and address.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.012767596170306206,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.012767596170306206
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.012767591513693333,
              "max_token_negative_log_likelihood": 0.012767591513693333,
              "predictive_entropy": 0.012605615891516209,
              "shannon_entropy": 0.0692700743675232
            }
          }
        ],
        "cached": false,
        "request_time": 0.5024540424346924,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let P be a procedure that for some inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of the following statements must be true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id35"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let P be a procedure that for some inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of the following statements must be true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0336843840777874,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0336843840777874
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0336843766272068,
              "max_token_negative_log_likelihood": 0.0336843766272068,
              "predictive_entropy": 0.032568637281656265,
              "shannon_entropy": 0.1457374393939972
            }
          }
        ],
        "cached": false,
        "request_time": 0.5376584529876709,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let p be  a procedure that  for some  inputs   calls  itself (i.e.,   is recursive).   if  p is  guaranteed to   terminate, which  of the   following statememts   must  be  true?\ni.   p  has a  local   variable.\nii. p   has   an execution path  where   it  doesn't call itself.\niii.  p   either  refers to   a   global  variable  or  has at   least   one parameter."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id35",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let P be a procedure that for some inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of the following statements must be true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let p be  a procedure that  for some  inputs   calls  itself (i.e.,   is recursive).   if  p is  guaranteed to   terminate, which  of the   following statememts   must  be  true?\ni.   p  has a  local   variable.\nii. p   has   an execution path  where   it  doesn't call itself.\niii.  p   either  refers to   a   global  variable  or  has at   least   one parameter.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.006317170336842537,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.006317170336842537
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.006317141931504011,
              "max_token_negative_log_likelihood": 0.006317141931504011,
              "predictive_entropy": 0.006277361419051886,
              "shannon_entropy": 0.038246508687734604
            }
          }
        ],
        "cached": false,
        "request_time": 0.5233426094055176,
        "request_datetime": 1755797626
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let P b a procedure dat for sum inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of da following statements must b true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id35",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let P be a procedure that for some inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of the following statements must be true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let P b a procedure dat for sum inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of da following statements must b true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.994744449504651e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.994744449504651e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.9949940148508176e-05,
              "max_token_negative_log_likelihood": 4.9949940148508176e-05,
              "predictive_entropy": 4.994744449504651e-05,
              "shannon_entropy": 0.0005592512898147106
            }
          }
        ],
        "cached": false,
        "request_time": 0.5304186344146729,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose it takes 1 second to factor a general 100 x 100 matrix using Gaussian elimination. Of the following, which is the best estimate of the number of seconds it will take to factor a 500 x 500 matrix based on the relative dimensions?"
        },
        "references": [
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25"
            },
            "tags": []
          },
          {
            "output": {
              "text": "125"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id11"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "5",
        "B": "10",
        "C": "25",
        "D": "125"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose it takes 1 second to factor a general 100 x 100 matrix using Gaussian elimination. Of the following, which is the best estimate of the number of seconds it will take to factor a 500 x 500 matrix based on the relative dimensions?\nA. 5\nB. 10\nC. 25\nD. 125\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.054934099316596985,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.054934099316596985
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.05493411421775818,
              "max_token_negative_log_likelihood": 0.05493411421775818,
              "predictive_entropy": 0.051997747272253036,
              "shannon_entropy": 0.20898282527923584
            }
          }
        ],
        "cached": false,
        "request_time": 0.515841007232666,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "suppose it   takes 1   second   to factor a general 100  x   100  matrix  useing   gaussian  elimination.   of  the  following,  which  is   the   best   estimate   of  the  number of  seconds  it'll take to   factor a 500   x   500   matrix  based  on the   relative   dimensions?"
        },
        "references": [
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25"
            },
            "tags": []
          },
          {
            "output": {
              "text": "125"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id11",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Suppose it takes 1 second to factor a general 100 x 100 matrix using Gaussian elimination. Of the following, which is the best estimate of the number of seconds it will take to factor a 500 x 500 matrix based on the relative dimensions?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "5",
        "B": "10",
        "C": "25",
        "D": "125"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: suppose it   takes 1   second   to factor a general 100  x   100  matrix  useing   gaussian  elimination.   of  the  following,  which  is   the   best   estimate   of  the  number of  seconds  it'll take to   factor a 500   x   500   matrix  based  on the   relative   dimensions?\nA. 5\nB. 10\nC. 25\nD. 125\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.002390980953350663,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.002390980953350663
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.002390975831076503,
              "max_token_negative_log_likelihood": 0.002390975831076503,
              "predictive_entropy": 0.0023852658923715353,
              "shannon_entropy": 0.019346117973327637
            }
          }
        ],
        "cached": false,
        "request_time": 0.5306355953216553,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose it takes 1 second to factor a general 100 x 100 matrix usin Gaussian elimination. Of da following, which is da best estimate of da number of secs it gon take to factor a 500 x 500 matrix based on da relative dimensions?"
        },
        "references": [
          {
            "output": {
              "text": "5"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25"
            },
            "tags": []
          },
          {
            "output": {
              "text": "125"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "valid",
        "id": "id11",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Suppose it takes 1 second to factor a general 100 x 100 matrix using Gaussian elimination. Of the following, which is the best estimate of the number of seconds it will take to factor a 500 x 500 matrix based on the relative dimensions?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "5",
        "B": "10",
        "C": "25",
        "D": "125"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose it takes 1 second to factor a general 100 x 100 matrix usin Gaussian elimination. Of da following, which is da best estimate of da number of secs it gon take to factor a 500 x 500 matrix based on da relative dimensions?\nA. 5\nB. 10\nC. 25\nD. 125\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.0072159855626523495,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.0072159855626523495
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.007215961813926697,
              "max_token_negative_log_likelihood": 0.007215961813926697,
              "predictive_entropy": 0.00716407923027873,
              "shannon_entropy": 0.04307347908616066
            }
          }
        ],
        "cached": false,
        "request_time": 0.5182204246520996,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A particular parallel program computation requires 100 seconds when executed on a single processor. If 40 percent of this computation is \"inherently sequential\" (i.e., will not benefit from additional processors), then the theoretically best possible elapsed times for this program running with 2 and 4 processors, respectively, are"
        },
        "references": [
          {
            "output": {
              "text": "20 and 10 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "30 and 15 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50 and 25 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "70 and 55 seconds"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id53"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "20 and 10 seconds",
        "B": "30 and 15 seconds",
        "C": "50 and 25 seconds",
        "D": "70 and 55 seconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A particular parallel program computation requires 100 seconds when executed on a single processor. If 40 percent of this computation is \"inherently sequential\" (i.e., will not benefit from additional processors), then the theoretically best possible elapsed times for this program running with 2 and 4 processors, respectively, are\nA. 20 and 10 seconds\nB. 30 and 15 seconds\nC. 50 and 25 seconds\nD. 70 and 55 seconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.9830348491668701,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.9830348491668701
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.9830348491668701,
              "max_token_negative_log_likelihood": 0.9830348491668701,
              "predictive_entropy": 0.3678258955478668,
              "shannon_entropy": 1.1943609714508057
            }
          }
        ],
        "cached": false,
        "request_time": 0.5381267070770264,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a   particular   paralel   program   computation requires  100   seconds  when   executed   on  a   single processor.   if   40 percent  of  this  computation is   \"inherently sequential\"   (i.e.,   won't  benefit   from   additonal processors),   then the   theoretically  best   possible   elapsed  times  for  thsi program running   with 2   and 4  processors,   respectively, are"
        },
        "references": [
          {
            "output": {
              "text": "20 and 10 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "30 and 15 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50 and 25 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "70 and 55 seconds"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id53",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A particular parallel program computation requires 100 seconds when executed on a single processor. If 40 percent of this computation is \"inherently sequential\" (i.e., will not benefit from additional processors), then the theoretically best possible elapsed times for this program running with 2 and 4 processors, respectively, are"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "20 and 10 seconds",
        "B": "30 and 15 seconds",
        "C": "50 and 25 seconds",
        "D": "70 and 55 seconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a   particular   paralel   program   computation requires  100   seconds  when   executed   on  a   single processor.   if   40 percent  of  this  computation is   \"inherently sequential\"   (i.e.,   won't  benefit   from   additonal processors),   then the   theoretically  best   possible   elapsed  times  for  thsi program running   with 2   and 4  processors,   respectively, are\nA. 20 and 10 seconds\nB. 30 and 15 seconds\nC. 50 and 25 seconds\nD. 70 and 55 seconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.4314817786216736,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.4314817786216736
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.4314817488193512,
              "max_token_negative_log_likelihood": 0.4314817488193512,
              "predictive_entropy": 0.28026720881462097,
              "shannon_entropy": 0.9856576323509216
            }
          }
        ],
        "cached": false,
        "request_time": 0.5229263305664062,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A particular parallel program computation requires 100 secs when executed on a single processor. If 40 percent of dis computation is \"inherently sequential\" (i.e., gon not benefit from additional processors), then da theoretically best possible elapsed times fir this program runnin with 2 and 4 processors, respectively, are"
        },
        "references": [
          {
            "output": {
              "text": "20 and 10 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "30 and 15 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "50 and 25 seconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "70 and 55 seconds"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id53",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A particular parallel program computation requires 100 seconds when executed on a single processor. If 40 percent of this computation is \"inherently sequential\" (i.e., will not benefit from additional processors), then the theoretically best possible elapsed times for this program running with 2 and 4 processors, respectively, are"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "20 and 10 seconds",
        "B": "30 and 15 seconds",
        "C": "50 and 25 seconds",
        "D": "70 and 55 seconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A particular parallel program computation requires 100 secs when executed on a single processor. If 40 percent of dis computation is \"inherently sequential\" (i.e., gon not benefit from additional processors), then da theoretically best possible elapsed times fir this program runnin with 2 and 4 processors, respectively, are\nA. 20 and 10 seconds\nB. 30 and 15 seconds\nC. 50 and 25 seconds\nD. 70 and 55 seconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.551855206489563,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.551855206489563
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5518551468849182,
              "max_token_negative_log_likelihood": 0.5518551468849182,
              "predictive_entropy": 0.3178026080131531,
              "shannon_entropy": 1.0881463289260864
            }
          }
        ],
        "cached": false,
        "request_time": 0.5372662544250488,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which of the following undirected graphs must have an Euler circuit?\nI. A complete graph with 12 vertices\nII. A complete graph with 13 vertices\nIII. A tree with 13 vertices"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id96"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which of the following undirected graphs must have an Euler circuit?\nI. A complete graph with 12 vertices\nII. A complete graph with 13 vertices\nIII. A tree with 13 vertices\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0009114163694903255,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0009114163694903255
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0009114125859923661,
              "max_token_negative_log_likelihood": 0.0009114125859923661,
              "predictive_entropy": 0.0009105823119170964,
              "shannon_entropy": 0.007288824301213026
            }
          }
        ],
        "cached": false,
        "request_time": 0.5205016136169434,
        "request_datetime": 1755797627
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "an  euler circuit of  an  undirected  graph   is  a  circuit  in  which each   edge  of   the graph  appears  exactly   once.   which   of  the  following undirected   graphs must've   an euler circuit?\ni.  a   complete   graph wtih  12  vertices\nii.   a   complete  graph with 13  vertices\niii.   a   tree with 13 vertices"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id96",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which of the following undirected graphs must have an Euler circuit?\nI. A complete graph with 12 vertices\nII. A complete graph with 13 vertices\nIII. A tree with 13 vertices"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: an  euler circuit of  an  undirected  graph   is  a  circuit  in  which each   edge  of   the graph  appears  exactly   once.   which   of  the  following undirected   graphs must've   an euler circuit?\ni.  a   complete   graph wtih  12  vertices\nii.   a   complete  graph with 13  vertices\niii.   a   tree with 13 vertices\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.910580976982601e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5327849388122559,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An Euler circuit of an undirected graph is a circuit in which each edge of da graph appears exactly once. Which of da following undirected graphs must have an Euler circuit?\nI. A complete graph w/ 12 vertices\nII. A complete graph wid 13 vertices\nIII. A tree wid 13 vertices"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id96",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which of the following undirected graphs must have an Euler circuit?\nI. A complete graph with 12 vertices\nII. A complete graph with 13 vertices\nIII. A tree with 13 vertices"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An Euler circuit of an undirected graph is a circuit in which each edge of da graph appears exactly once. Which of da following undirected graphs must have an Euler circuit?\nI. A complete graph w/ 12 vertices\nII. A complete graph wid 13 vertices\nIII. A tree wid 13 vertices\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.00023052419419400394,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.00023052419419400394
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.00023051773314364254,
              "max_token_negative_log_likelihood": 0.00023051773314364254,
              "predictive_entropy": 0.00023046460410114378,
              "shannon_entropy": 0.002161015523597598
            }
          }
        ],
        "cached": false,
        "request_time": 0.511347770690918,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let M be a single-tape, deterministic Turing machine with tape alphabet {blank,0,1}, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\nI. The computation C lasts for at least n steps.\nII. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\nIII. M scans at least n distinct tape squares during the computation C."
        },
        "references": [
          {
            "output": {
              "text": "None"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id110"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "None",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let M be a single-tape, deterministic Turing machine with tape alphabet {blank,0,1}, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\nI. The computation C lasts for at least n steps.\nII. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\nIII. M scans at least n distinct tape squares during the computation C.\nA. None\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.02630067989230156,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.02630067989230156
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.026300672441720963,
              "max_token_negative_log_likelihood": 0.026300672441720963,
              "predictive_entropy": 0.025617964565753937,
              "shannon_entropy": 0.12040287256240845
            }
          }
        ],
        "cached": false,
        "request_time": 0.5551645755767822,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let m be  a  single-tape,  deterministic   turing   machine   with tape alphabet {blank,0,1},   and   let c   denote the (possibly  infinite) computation of  m   starting   wtih   a  blank   tape.  hten  input   to   each  problem below   is  m,  together  with  a positive   integer n.  which of   the  following   problems  is (are)   decidable?\ni.   the  computation  c  lasts   for at   least   n  steps.\nii.   ther   computation c   lasts for   at  least   n   steps,   and m   prints a 1   at   some  point after  the nth   step.\niii. m   scans   at   least  n   distinct tape   squares   during   the   computation c."
        },
        "references": [
          {
            "output": {
              "text": "None"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id110",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let M be a single-tape, deterministic Turing machine with tape alphabet {blank,0,1}, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\nI. The computation C lasts for at least n steps.\nII. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\nIII. M scans at least n distinct tape squares during the computation C."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "None",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let m be  a  single-tape,  deterministic   turing   machine   with tape alphabet {blank,0,1},   and   let c   denote the (possibly  infinite) computation of  m   starting   wtih   a  blank   tape.  hten  input   to   each  problem below   is  m,  together  with  a positive   integer n.  which of   the  following   problems  is (are)   decidable?\ni.   the  computation  c  lasts   for at   least   n  steps.\nii.   ther   computation c   lasts for   at  least   n   steps,   and m   prints a 1   at   some  point after  the nth   step.\niii. m   scans   at   least  n   distinct tape   squares   during   the   computation c.\nA. None\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.0005194983095861971,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.0005194983095861971
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0005194701952859759,
              "max_token_negative_log_likelihood": 0.0005194701952859759,
              "predictive_entropy": 0.000519200402777642,
              "shannon_entropy": 0.004446985200047493
            }
          }
        ],
        "cached": false,
        "request_time": 0.5389344692230225,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let M b a single-tape, deterministic Turing machine w tape alphabet {blank,0,1}, and let C denote da (possibly infinite) computation of M starting w a blank tape. Da input to each problem below is M, together witt a positive integer n. Which of da following problems is (r) decidable?\nI. Da computation C lasts fa at least n steps.\nII. Da computation C lasts fir at least n steps, and M prints a 1 at sum point after da nth step.\nIII. M scans at least n distinct tape squares durin the computation C."
        },
        "references": [
          {
            "output": {
              "text": "None"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id110",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let M be a single-tape, deterministic Turing machine with tape alphabet {blank,0,1}, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\nI. The computation C lasts for at least n steps.\nII. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\nIII. M scans at least n distinct tape squares during the computation C."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "None",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let M b a single-tape, deterministic Turing machine w tape alphabet {blank,0,1}, and let C denote da (possibly infinite) computation of M starting w a blank tape. Da input to each problem below is M, together witt a positive integer n. Which of da following problems is (r) decidable?\nI. Da computation C lasts fa at least n steps.\nII. Da computation C lasts fir at least n steps, and M prints a 1 at sum point after da nth step.\nIII. M scans at least n distinct tape squares durin the computation C.\nA. None\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.9740809798240662,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.9740809798240662
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.9740809798240662,
              "max_token_negative_log_likelihood": 0.9740809798240662,
              "predictive_entropy": 0.3677537143230438,
              "shannon_entropy": 0.6628997325897217
            }
          }
        ],
        "cached": false,
        "request_time": 0.558647632598877,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen chip is found to be defective, what is the probability that the chip came from Company Y?"
        },
        "references": [
          {
            "output": {
              "text": "2 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "4 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1 / 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2 / 3"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id101"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "2 / 9",
        "B": "4 / 9",
        "C": "1 / 2",
        "D": "2 / 3"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen chip is found to be defective, what is the probability that the chip came from Company Y?\nA. 2 / 9\nB. 4 / 9\nC. 1 / 2\nD. 2 / 3\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.2076835632324219,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.2076835632324219
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2076834440231323,
              "max_token_negative_log_likelihood": 1.2076834440231323,
              "predictive_entropy": 0.3609631359577179,
              "shannon_entropy": 1.1080527305603027
            }
          }
        ],
        "cached": false,
        "request_time": 0.5381729602813721,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "company   x shipped   5  computer   chips,  1  of   which   was defective, and comany y shipped 4   computer  chips, 2   of which were   defective.  one   computer  chip  is  to be   chosen  uniformly   at random from  the 9   chips  shipped  by  the   companies.   if the chosen chip  is   found to be   defective, what's  the  probability   that   the chip  came  from  company  y?"
        },
        "references": [
          {
            "output": {
              "text": "2 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "4 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1 / 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2 / 3"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id101",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen chip is found to be defective, what is the probability that the chip came from Company Y?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "2 / 9",
        "B": "4 / 9",
        "C": "1 / 2",
        "D": "2 / 3"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: company   x shipped   5  computer   chips,  1  of   which   was defective, and comany y shipped 4   computer  chips, 2   of which were   defective.  one   computer  chip  is  to be   chosen  uniformly   at random from  the 9   chips  shipped  by  the   companies.   if the chosen chip  is   found to be   defective, what's  the  probability   that   the chip  came  from  company  y?\nA. 2 / 9\nB. 4 / 9\nC. 1 / 2\nD. 2 / 3\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.6796561479568481,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.6796561479568481
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6796561479568481,
              "max_token_negative_log_likelihood": 0.6796561479568481,
              "predictive_entropy": 0.34444376826286316,
              "shannon_entropy": 1.017311692237854
            }
          }
        ],
        "cached": false,
        "request_time": 0.540999174118042,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to b chosen uniformly at random from da 9 chips shipped by da companies. If da chosen chip is found to b defective, wat is da probability dat the chip came from Company Y?"
        },
        "references": [
          {
            "output": {
              "text": "2 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "4 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1 / 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2 / 3"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id101",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen chip is found to be defective, what is the probability that the chip came from Company Y?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "2 / 9",
        "B": "4 / 9",
        "C": "1 / 2",
        "D": "2 / 3"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to b chosen uniformly at random from da 9 chips shipped by da companies. If da chosen chip is found to b defective, wat is da probability dat the chip came from Company Y?\nA. 2 / 9\nB. 4 / 9\nC. 1 / 2\nD. 2 / 3\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.5723516941070557,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.5723516941070557
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5723516941070557,
              "max_token_negative_log_likelihood": 0.5723516941070557,
              "predictive_entropy": 0.3229191303253174,
              "shannon_entropy": 0.9201068878173828
            }
          }
        ],
        "cached": false,
        "request_time": 0.5218486785888672,
        "request_datetime": 1755797628
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer lamont is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen lamont is found to be defective, what is the probability that the lamont came from Company Y?"
        },
        "references": [
          {
            "output": {
              "text": "2 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "4 / 9"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1 / 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2 / 3"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id101",
        "perturbation": {
          "name": "person_name",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "race=white_american",
          "target_class": "race=black_american",
          "name_file_path": "src/data/helm/perturbations/person_name/data/person_names.txt",
          "person_name_type": "first_name",
          "preserve_gender": true
        }
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "2 / 9",
        "B": "4 / 9",
        "C": "1 / 2",
        "D": "2 / 3"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer lamont is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen lamont is found to be defective, what is the probability that the lamont came from Company Y?\nA. 2 / 9\nB. 4 / 9\nC. 1 / 2\nD. 2 / 3\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.9847542643547058,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.9847542643547058
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.984754204750061,
              "max_token_negative_log_likelihood": 0.984754204750061,
              "predictive_entropy": 0.36783623695373535,
              "shannon_entropy": 1.0060675144195557
            }
          }
        ],
        "cached": false,
        "request_time": 0.5372364521026611,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?"
        },
        "references": [
          {
            "output": {
              "text": "To translate Web addresses to host names"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the IP address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the hardware address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the hardware address of a given IP address"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id78"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "To translate Web addresses to host names",
        "B": "To determine the IP address of a given host name",
        "C": "To determine the hardware address of a given host name",
        "D": "To determine the hardware address of a given IP address"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?\nA. To translate Web addresses to host names\nB. To determine the IP address of a given host name\nC. To determine the hardware address of a given host name\nD. To determine the hardware address of a given IP address\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.8615548014640808,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.8615548014640808
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8615548610687256,
              "max_token_negative_log_likelihood": 0.8615548610687256,
              "predictive_entropy": 0.36401093006134033,
              "shannon_entropy": 0.6810876131057739
            }
          }
        ],
        "cached": false,
        "request_time": 0.4983406066894531,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in the   internet   protocol   (ip) suite   of  protocols, which of   the   folowing   best  decribes  the  purpose  of the  address resolution   protocol?"
        },
        "references": [
          {
            "output": {
              "text": "To translate Web addresses to host names"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the IP address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the hardware address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine the hardware address of a given IP address"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id78",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "To translate Web addresses to host names",
        "B": "To determine the IP address of a given host name",
        "C": "To determine the hardware address of a given host name",
        "D": "To determine the hardware address of a given IP address"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in the   internet   protocol   (ip) suite   of  protocols, which of   the   folowing   best  decribes  the  purpose  of the  address resolution   protocol?\nA. To translate Web addresses to host names\nB. To determine the IP address of a given host name\nC. To determine the hardware address of a given host name\nD. To determine the hardware address of a given IP address\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.513717508762397e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5313584804534912,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In da Internet Protocol (IP) suite of protocols, which of da following best describes da purpose of da Address Resolution Protocol?"
        },
        "references": [
          {
            "output": {
              "text": "To translate Web addresses to host names"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine da IP address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine da hardware address of a given host name"
            },
            "tags": []
          },
          {
            "output": {
              "text": "To determine da hardware address of a given IP address"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id78",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "To translate Web addresses to host names",
        "B": "To determine da IP address of a given host name",
        "C": "To determine da hardware address of a given host name",
        "D": "To determine da hardware address of a given IP address"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In da Internet Protocol (IP) suite of protocols, which of da following best describes da purpose of da Address Resolution Protocol?\nA. To translate Web addresses to host names\nB. To determine da IP address of a given host name\nC. To determine da hardware address of a given host name\nD. To determine da hardware address of a given IP address\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.2679592370986938,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.2679592370986938
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2679593563079834,
              "max_token_negative_log_likelihood": 1.2679593563079834,
              "predictive_entropy": 0.35681048035621643,
              "shannon_entropy": 0.594290018081665
            }
          }
        ],
        "cached": false,
        "request_time": 0.4879469871520996,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In multiprogrammed systems it is advantageous if some programs such as editors and compilers can be shared by several users. Which of the following must be true of multiprogrammed systems in order that a single copy of a program can be shared by several users?\nI. The program is a macro.\nII. The program is recursive.\nIII. The program is reentrant."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id61"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In multiprogrammed systems it is advantageous if some programs such as editors and compilers can be shared by several users. Which of the following must be true of multiprogrammed systems in order that a single copy of a program can be shared by several users?\nI. The program is a macro.\nII. The program is recursive.\nIII. The program is reentrant.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.7585774492754354e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5327386856079102,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in  multiprogrammed systems  it's  advantageous  if  some programs  such   as  editors and compilers  can be   shared by  several  users. which   of   the   following must  be true   of   multiprogrammed   systems  in order   that a  single copy   of   a program  can be  shared   by several  users?\ni.   the  program is a   macro.\nii.  the  progrom   is recursive.\niii.   the   progrom   is   reentrant."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id61",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In multiprogrammed systems it is advantageous if some programs such as editors and compilers can be shared by several users. Which of the following must be true of multiprogrammed systems in order that a single copy of a program can be shared by several users?\nI. The program is a macro.\nII. The program is recursive.\nIII. The program is reentrant."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in  multiprogrammed systems  it's  advantageous  if  some programs  such   as  editors and compilers  can be   shared by  several  users. which   of   the   following must  be true   of   multiprogrammed   systems  in order   that a  single copy   of   a program  can be  shared   by several  users?\ni.   the  program is a   macro.\nii.  the  progrom   is recursive.\niii.   the   progrom   is   reentrant.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.1383496456573994e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5078854560852051,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In multiprogrammed systems it is advantageous if sum programs such as editors and compilers can b shared by several users. Which of da following must b true of multiprogrammed systems in order dat a single copy of a program can b shared by several users?\nI. Da program is a macro.\nII. Da program is recursive.\nIII. Da program is reentrant."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id61",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In multiprogrammed systems it is advantageous if some programs such as editors and compilers can be shared by several users. Which of the following must be true of multiprogrammed systems in order that a single copy of a program can be shared by several users?\nI. The program is a macro.\nII. The program is recursive.\nIII. The program is reentrant."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In multiprogrammed systems it is advantageous if sum programs such as editors and compilers can b shared by several users. Which of da following must b true of multiprogrammed systems in order dat a single copy of a program can b shared by several users?\nI. Da program is a macro.\nII. Da program is recursive.\nIII. Da program is reentrant.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 9.350800382890156e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5316970348358154,
        "request_datetime": 1755797629
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is NOT a reasonable justification for choosing to busy-wait on an asynchronous event?"
        },
        "references": [
          {
            "output": {
              "text": "The wait is expected to be short."
            },
            "tags": []
          },
          {
            "output": {
              "text": "A busy-wait loop is easier to code than an interrupt handler."
            },
            "tags": []
          },
          {
            "output": {
              "text": "There is no other work for the processor to do."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The program executes on a time-sharing system."
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id32"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The wait is expected to be short.",
        "B": "A busy-wait loop is easier to code than an interrupt handler.",
        "C": "There is no other work for the processor to do.",
        "D": "The program executes on a time-sharing system."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is NOT a reasonable justification for choosing to busy-wait on an asynchronous event?\nA. The wait is expected to be short.\nB. A busy-wait loop is easier to code than an interrupt handler.\nC. There is no other work for the processor to do.\nD. The program executes on a time-sharing system.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.0780682941913255e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5177433490753174,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of the  following isn't   a  reasonable   justification  for choosing to  busy-wait  on an asynchronous  event?"
        },
        "references": [
          {
            "output": {
              "text": "The wait is expected to be short."
            },
            "tags": []
          },
          {
            "output": {
              "text": "A busy-wait loop is easier to code than an interrupt handler."
            },
            "tags": []
          },
          {
            "output": {
              "text": "There is no other work for the processor to do."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The program executes on a time-sharing system."
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id32",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is NOT a reasonable justification for choosing to busy-wait on an asynchronous event?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The wait is expected to be short.",
        "B": "A busy-wait loop is easier to code than an interrupt handler.",
        "C": "There is no other work for the processor to do.",
        "D": "The program executes on a time-sharing system."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of the  following isn't   a  reasonable   justification  for choosing to  busy-wait  on an asynchronous  event?\nA. The wait is expected to be short.\nB. A busy-wait loop is easier to code than an interrupt handler.\nC. There is no other work for the processor to do.\nD. The program executes on a time-sharing system.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.768370445162873e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.768370445162873e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.768372718899627e-07,
              "max_token_negative_log_likelihood": 4.768372718899627e-07,
              "predictive_entropy": 4.768370445162873e-07,
              "shannon_entropy": 7.126889613573439e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5271942615509033,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is NOT a reasonable justification fir choosing to busy-wait on an asynchronous event?"
        },
        "references": [
          {
            "output": {
              "text": "The wait is expected to b short."
            },
            "tags": []
          },
          {
            "output": {
              "text": "A busy-wait loop is easier to code den an interrupt handler."
            },
            "tags": []
          },
          {
            "output": {
              "text": "There is no other wrk for da processor to do."
            },
            "tags": []
          },
          {
            "output": {
              "text": "The program executes on a time-sharing system."
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id32",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is NOT a reasonable justification for choosing to busy-wait on an asynchronous event?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The wait is expected to b short.",
        "B": "A busy-wait loop is easier to code den an interrupt handler.",
        "C": "There is no other wrk for da processor to do.",
        "D": "The program executes on a time-sharing system."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is NOT a reasonable justification fir choosing to busy-wait on an asynchronous event?\nA. The wait is expected to b short.\nB. A busy-wait loop is easier to code den an interrupt handler.\nC. There is no other wrk for da processor to do.\nD. The program executes on a time-sharing system.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.794088160840147e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.49301576614379883,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id23"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0008526980527676642,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0008526980527676642
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0008527098689228296,
              "max_token_negative_log_likelihood": 0.0008527098689228296,
              "predictive_entropy": 0.0008519830880686641,
              "shannon_entropy": 0.007061375305056572
            }
          }
        ],
        "cached": false,
        "request_time": 0.5279603004455566,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of   the  following statements  discribe(s)  properties of   a  purely segmented memory sytem?\ni. it  divides memory  into   units of equal size.\nii.  it   permits   implementation  of virtual   memory.\niii.  it suffers   from   internal   fragmentation."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id23",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of   the  following statements  discribe(s)  properties of   a  purely segmented memory sytem?\ni. it  divides memory  into   units of equal size.\nii.  it   permits   implementation  of virtual   memory.\niii.  it suffers   from   internal   fragmentation.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.768370445162873e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.768370445162873e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.768372718899627e-07,
              "max_token_negative_log_likelihood": 4.768372718899627e-07,
              "predictive_entropy": 4.768370445162873e-07,
              "shannon_entropy": 7.169364835135639e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5183849334716797,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id23",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.586808113846928e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.586808113846928e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.5868750526569784e-05,
              "max_token_negative_log_likelihood": 2.5868750526569784e-05,
              "predictive_entropy": 2.586808113846928e-05,
              "shannon_entropy": 0.00031433365074917674
            }
          }
        ],
        "cached": false,
        "request_time": 0.5312638282775879,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A \"strictly binary tree\" is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of strictly binary trees there exists c > 0 such that, for any tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. Which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N > 1 ?"
        },
        "references": [
          {
            "output": {
              "text": "h <= log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h = 1/c * log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h < c log2(N)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "h > c log2(N)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id68"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "h <= log2(N)",
        "B": "h = 1/c * log2(N)",
        "C": "h < c log2(N)",
        "D": "h > c log2(N)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A \"strictly binary tree\" is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of strictly binary trees there exists c > 0 such that, for any tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. Which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N > 1 ?\nA. h <= log2(N)\nB. h = 1/c * log2(N)\nC. h < c log2(N)\nD. h > c log2(N)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -3.3378546504536644e-06,
            "tokens": [
              {
                "text": "C",
                "logprob": -3.3378546504536644e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.337865791763761e-06,
              "max_token_negative_log_likelihood": 3.337865791763761e-06,
              "predictive_entropy": 3.3378546504536644e-06,
              "shannon_entropy": 4.616819933289662e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.48918843269348145,
        "request_datetime": 1755797630
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a  \"strictly binary  tree\" is a binary  tree in which  eveyr  node   that's not a leaf  has  two  children.  suppose   that  for  a   class  of  strictly binary trees there exists c  > 0   such   that, for any   tree  in the class,   the  ratio   of   the   lengths  of   any   two root-to-leaf   paths   is   bounded  above by c. whihc   of  the  following  best  characterizes   the  hieght h of  any tree   in  tihs class, where n   is  the number of   nodes  in  the tree and  n  > 1   ?"
        },
        "references": [
          {
            "output": {
              "text": "h <= log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h = 1/c * log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h < c log2(N)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "h > c log2(N)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id68",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A \"strictly binary tree\" is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of strictly binary trees there exists c > 0 such that, for any tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. Which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N > 1 ?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "h <= log2(N)",
        "B": "h = 1/c * log2(N)",
        "C": "h < c log2(N)",
        "D": "h > c log2(N)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a  \"strictly binary  tree\" is a binary  tree in which  eveyr  node   that's not a leaf  has  two  children.  suppose   that  for  a   class  of  strictly binary trees there exists c  > 0   such   that, for any   tree  in the class,   the  ratio   of   the   lengths  of   any   two root-to-leaf   paths   is   bounded  above by c. whihc   of  the  following  best  characterizes   the  hieght h of  any tree   in  tihs class, where n   is  the number of   nodes  in  the tree and  n  > 1   ?\nA. h <= log2(N)\nB. h = 1/c * log2(N)\nC. h < c log2(N)\nD. h > c log2(N)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -5.364403477869928e-06,
            "tokens": [
              {
                "text": "C",
                "logprob": -5.364403477869928e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 5.364432581700385e-06,
              "max_token_negative_log_likelihood": 5.364432581700385e-06,
              "predictive_entropy": 5.364403932617279e-06,
              "shannon_entropy": 7.319737778743729e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.552753210067749,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A \"strictly binary tree\" is a binary tree in which every node dat is not a leaf has 2 children. Suppose dat for a class of strictly binary trees dere exists c > 0 such dat, fir any tree in da class, da ratio of da lengths of any 2 root-to-leaf paths is bounded above by c. Which of da following best characterizes da height h of any tree in dis class, where N is da number of nodes in da tree and N > 1 ?"
        },
        "references": [
          {
            "output": {
              "text": "h <= log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h = 1/c * log2(N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "h < c log2(N)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "h > c log2(N)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id68",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A \"strictly binary tree\" is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of strictly binary trees there exists c > 0 such that, for any tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. Which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N > 1 ?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "h <= log2(N)",
        "B": "h = 1/c * log2(N)",
        "C": "h < c log2(N)",
        "D": "h > c log2(N)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A \"strictly binary tree\" is a binary tree in which every node dat is not a leaf has 2 children. Suppose dat for a class of strictly binary trees dere exists c > 0 such dat, fir any tree in da class, da ratio of da lengths of any 2 root-to-leaf paths is bounded above by c. Which of da following best characterizes da height h of any tree in dis class, where N is da number of nodes in da tree and N > 1 ?\nA. h <= log2(N)\nB. h = 1/c * log2(N)\nC. h < c log2(N)\nD. h > c log2(N)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.7881377516459906e-06,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.7881377516459906e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.7881409348774469e-06,
              "max_token_negative_log_likelihood": 1.7881409348774469e-06,
              "predictive_entropy": 1.7881377516459906e-06,
              "shannon_entropy": 2.6854384486796334e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5275611877441406,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following sets of bit strings CANNOT be described with a regular expression?"
        },
        "references": [
          {
            "output": {
              "text": "All bit strings whose number of zeros is a multiple of five"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings starting with a zero and ending with a one"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings with an even number of zeros"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings with more ones than zeros"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id57"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "All bit strings whose number of zeros is a multiple of five",
        "B": "All bit strings starting with a zero and ending with a one",
        "C": "All bit strings with an even number of zeros",
        "D": "All bit strings with more ones than zeros"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following sets of bit strings CANNOT be described with a regular expression?\nA. All bit strings whose number of zeros is a multiple of five\nB. All bit strings starting with a zero and ending with a one\nC. All bit strings with an even number of zeros\nD. All bit strings with more ones than zeros\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 2.328639766346896e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5489168167114258,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of  tje   following  sets  of   bit   strings   can't  be  described   with   a  regular   expression?"
        },
        "references": [
          {
            "output": {
              "text": "All bit strings whose number of zeros is a multiple of five"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings starting with a zero and ending with a one"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings with an even number of zeros"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings with more ones than zeros"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id57",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following sets of bit strings CANNOT be described with a regular expression?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "All bit strings whose number of zeros is a multiple of five",
        "B": "All bit strings starting with a zero and ending with a one",
        "C": "All bit strings with an even number of zeros",
        "D": "All bit strings with more ones than zeros"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of  tje   following  sets  of   bit   strings   can't  be  described   with   a  regular   expression?\nA. All bit strings whose number of zeros is a multiple of five\nB. All bit strings starting with a zero and ending with a one\nC. All bit strings with an even number of zeros\nD. All bit strings with more ones than zeros\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.7881377516459906e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.7881377516459906e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.7881409348774469e-06,
              "max_token_negative_log_likelihood": 1.7881409348774469e-06,
              "predictive_entropy": 1.7881377516459906e-06,
              "shannon_entropy": 2.5364688553963788e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5317373275756836,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following sets of bit strings CANNOT b described wit a regular expression?"
        },
        "references": [
          {
            "output": {
              "text": "All bit strings whose number of zeros is a multiple of five"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings starting w a zero and ending w/ a one"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings wit an even number of zeros"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All bit strings wit more ones den zeros"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id57",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following sets of bit strings CANNOT be described with a regular expression?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "All bit strings whose number of zeros is a multiple of five",
        "B": "All bit strings starting w a zero and ending w/ a one",
        "C": "All bit strings wit an even number of zeros",
        "D": "All bit strings wit more ones den zeros"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following sets of bit strings CANNOT b described wit a regular expression?\nA. All bit strings whose number of zeros is a multiple of five\nB. All bit strings starting w a zero and ending w/ a one\nC. All bit strings wit an even number of zeros\nD. All bit strings wit more ones den zeros\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0028062984347343445,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0028062984347343445
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0028063058853149414,
              "max_token_negative_log_likelihood": 0.0028063058853149414,
              "predictive_entropy": 0.0027984415646642447,
              "shannon_entropy": 0.019280292093753815
            }
          }
        ],
        "cached": false,
        "request_time": 0.5280232429504395,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about circuits is (are) true?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must be controlled by an external clock."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id83"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about circuits is (are) true?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must be controlled by an external clock.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.07888974994421005,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.07888974994421005
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07888972759246826,
              "max_token_negative_log_likelihood": 0.07888972759246826,
              "predictive_entropy": 0.0729052945971489,
              "shannon_entropy": 0.2685356140136719
            }
          }
        ],
        "cached": false,
        "request_time": 0.5156886577606201,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of   ther   following  statements   about  circuits  is (are)  true?\ni. combinational circuits may hvea   feedback;  sequential   circuits   do  not.\nii.  combinational   circuits have  a \"memoryless\" property; sequential   circuits  do  onot.\niii.  both   sequential and combinational  circuits must  be   controlled   by   an   external clock."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id83",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about circuits is (are) true?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must be controlled by an external clock."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of   ther   following  statements   about  circuits  is (are)  true?\ni. combinational circuits may hvea   feedback;  sequential   circuits   do  not.\nii.  combinational   circuits have  a \"memoryless\" property; sequential   circuits  do  onot.\niii.  both   sequential and combinational  circuits must  be   controlled   by   an   external clock.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.006715348921716213,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.006715348921716213
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.006715324241667986,
              "max_token_negative_log_likelihood": 0.006715324241667986,
              "predictive_entropy": 0.0066703795455396175,
              "shannon_entropy": 0.04017973318696022
            }
          }
        ],
        "cached": false,
        "request_time": 0.5319216251373291,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements bou circuits is (r) tru?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must b controlled by an external clock."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id83",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about circuits is (are) true?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must be controlled by an external clock."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements bou circuits is (r) tru?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must b controlled by an external clock.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.136871099472046,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.136871099472046
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.136871099472046,
              "max_token_negative_log_likelihood": 1.136871099472046,
              "predictive_entropy": 0.36473244428634644,
              "shannon_entropy": 0.627488374710083
            }
          }
        ],
        "cached": false,
        "request_time": 0.49802064895629883,
        "request_datetime": 1755797631
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\nI. M-7\u2019s pipeline has better maximum throughput than M-5\u2019s pipeline.\nII. The latency of a single instruction is shorter on M-7\u2019s pipeline than on M-5\u2019s pipeline.\nIII. Programs executing on M-7 will always run faster than programs executing on M-5."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id87"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\nI. M-7\u2019s pipeline has better maximum throughput than M-5\u2019s pipeline.\nII. The latency of a single instruction is shorter on M-7\u2019s pipeline than on M-5\u2019s pipeline.\nIII. Programs executing on M-7 will always run faster than programs executing on M-5.\nA. I only\nB. II only\nC. I and III\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.113827645778656,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.113827645778656
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11382763087749481,
              "max_token_negative_log_likelihood": 0.11382763087749481,
              "predictive_entropy": 0.10158111900091171,
              "shannon_entropy": 0.3479052484035492
            }
          }
        ],
        "cached": false,
        "request_time": 0.5755581855773926,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "two  processors,   m-5   and m-7, implement thge   same   instruction set.   processor  m-5 uses  a 5-stage   pipeline and a  clock  cycle  of 10 nanoseconds.   processor m-7  uses a   7-stage  pipeline   and a  clock   cycle  of 7.5   nanoseconds.   which of   the  following   is   (are)  true?\ni.  m-7\u2019s pipeline   has better maximum  throughput  than   m-5\u2019s pipeline.\nii.   the  latency  of a  single instruction   is  shorter on  m-7\u2019s pipeline   than   on m-5\u2019s   pipeline.\niii. programs executing   on   m-7  will  always  run   faster than programs executing  on  m-5."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id87",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\nI. M-7\u2019s pipeline has better maximum throughput than M-5\u2019s pipeline.\nII. The latency of a single instruction is shorter on M-7\u2019s pipeline than on M-5\u2019s pipeline.\nIII. Programs executing on M-7 will always run faster than programs executing on M-5."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: two  processors,   m-5   and m-7, implement thge   same   instruction set.   processor  m-5 uses  a 5-stage   pipeline and a  clock  cycle  of 10 nanoseconds.   processor m-7  uses a   7-stage  pipeline   and a  clock   cycle  of 7.5   nanoseconds.   which of   the  following   is   (are)  true?\ni.  m-7\u2019s pipeline   has better maximum  throughput  than   m-5\u2019s pipeline.\nii.   the  latency  of a  single instruction   is  shorter on  m-7\u2019s pipeline   than   on m-5\u2019s   pipeline.\niii. programs executing   on   m-7  will  always  run   faster than programs executing  on  m-5.\nA. I only\nB. II only\nC. I and III\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.002991845365613699,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.002991845365613699
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0029918558429926634,
              "max_token_negative_log_likelihood": 0.0029918558429926634,
              "predictive_entropy": 0.0029829179402440786,
              "shannon_entropy": 0.020401032641530037
            }
          }
        ],
        "cached": false,
        "request_time": 0.5532331466674805,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two processors, M-5 and M-7, implement da same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of da following is (r) tru?\nI. M-7\u2019s pipeline has betta maximum throughput den M-5\u2019s pipeline.\nII. Da latency of a single instruction is shorter on M-7\u2019s pipeline den on M-5\u2019s pipeline.\nIII. Programs executing on M-7 gon always run faster den programs executing on M-5."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id87",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\nI. M-7\u2019s pipeline has better maximum throughput than M-5\u2019s pipeline.\nII. The latency of a single instruction is shorter on M-7\u2019s pipeline than on M-5\u2019s pipeline.\nIII. Programs executing on M-7 will always run faster than programs executing on M-5."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two processors, M-5 and M-7, implement da same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of da following is (r) tru?\nI. M-7\u2019s pipeline has betta maximum throughput den M-5\u2019s pipeline.\nII. Da latency of a single instruction is shorter on M-7\u2019s pipeline den on M-5\u2019s pipeline.\nIII. Programs executing on M-7 gon always run faster den programs executing on M-5.\nA. I only\nB. II only\nC. I and III\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.008000234141945839,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.008000234141945839
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.008000222966074944,
              "max_token_negative_log_likelihood": 0.008000222966074944,
              "predictive_entropy": 0.007936474867165089,
              "shannon_entropy": 0.04813949391245842
            }
          }
        ],
        "cached": false,
        "request_time": 0.597012996673584,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider the following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of the following statements is (are) true?\nI. The grammar is ambiguous.\nII. The grammar is suitable for top-down parsing.\nIII. The grammar is suitable for bottom-up parsing."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id90"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider the following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of the following statements is (are) true?\nI. The grammar is ambiguous.\nII. The grammar is suitable for top-down parsing.\nIII. The grammar is suitable for bottom-up parsing.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.3828182090946939e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.3828182090946939e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.3828373084834311e-05,
              "max_token_negative_log_likelihood": 1.3828373084834311e-05,
              "predictive_entropy": 1.3828182090946939e-05,
              "shannon_entropy": 0.00016883440548554063
            }
          }
        ],
        "cached": false,
        "request_time": 0.5504360198974609,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "consider the   following  grammar.\ns \u2192  ( s   )\ns  \u2192   x\nwhich  of  the  following  statements is  (are)  true?\ni. the  grammar  is ambiguous.\nii.  the grammar   is suitable   for top-down   parsing.\niii. the  grammar  is suitable for   bottom-up  parsing."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id90",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Consider the following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of the following statements is (are) true?\nI. The grammar is ambiguous.\nII. The grammar is suitable for top-down parsing.\nIII. The grammar is suitable for bottom-up parsing."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: consider the   following  grammar.\ns \u2192  ( s   )\ns  \u2192   x\nwhich  of  the  following  statements is  (are)  true?\ni. the  grammar  is ambiguous.\nii.  the grammar   is suitable   for top-down   parsing.\niii. the  grammar  is suitable for   bottom-up  parsing.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -5.960462772236497e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -5.960462772236497e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 5.960466182841628e-07,
              "max_token_negative_log_likelihood": 5.960466182841628e-07,
              "predictive_entropy": 5.960462772236497e-07,
              "shannon_entropy": 9.016122021421324e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.556835412979126,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider da following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of da following statements is (r) tru?\nI. Da grammar is ambiguous.\nII. Da grammar is suitable fa top-down parsing.\nIII. Da grammar is suitable fa bottom-up parsing."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id90",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Consider the following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of the following statements is (are) true?\nI. The grammar is ambiguous.\nII. The grammar is suitable for top-down parsing.\nIII. The grammar is suitable for bottom-up parsing."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider da following grammar.\nS \u2192 ( S )\nS \u2192 x\nWhich of da following statements is (r) tru?\nI. Da grammar is ambiguous.\nII. Da grammar is suitable fa top-down parsing.\nIII. Da grammar is suitable fa bottom-up parsing.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.753696753643453e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.753696753643453e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.7537724236026406e-05,
              "max_token_negative_log_likelihood": 2.7537724236026406e-05,
              "predictive_entropy": 2.7536965717445128e-05,
              "shannon_entropy": 0.000317060126690194
            }
          }
        ],
        "cached": false,
        "request_time": 0.5190637111663818,
        "request_datetime": 1755797632
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose that a certain software product has a mean time between failures of 10,000 hours and has a mean time to repair of 20 hours. If the product is used by 100 customers, what is its availability?"
        },
        "references": [
          {
            "output": {
              "text": "80%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "90%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "98%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "99.80%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id115"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "80%",
        "B": "90%",
        "C": "98%",
        "D": "99.80%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose that a certain software product has a mean time between failures of 10,000 hours and has a mean time to repair of 20 hours. If the product is used by 100 customers, what is its availability?\nA. 80%\nB. 90%\nC. 98%\nD. 99.80%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.031639184802770615,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.031639184802770615
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.031639184802770615,
              "max_token_negative_log_likelihood": 0.031639184802770615,
              "predictive_entropy": 0.0306538175791502,
              "shannon_entropy": 0.13869790732860565
            }
          }
        ],
        "cached": false,
        "request_time": 0.5334596633911133,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "suppose that a certain software  product has a  mean time between  failures  of 10,000  hours   andd   has  a  mean time to  repair   of  20  hours.  if the  product is  used   by   100  customers, whta's  its  availability?"
        },
        "references": [
          {
            "output": {
              "text": "80%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "90%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "98%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "99.80%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id115",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Suppose that a certain software product has a mean time between failures of 10,000 hours and has a mean time to repair of 20 hours. If the product is used by 100 customers, what is its availability?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "80%",
        "B": "90%",
        "C": "98%",
        "D": "99.80%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: suppose that a certain software  product has a  mean time between  failures  of 10,000  hours   andd   has  a  mean time to  repair   of  20  hours.  if the  product is  used   by   100  customers, whta's  its  availability?\nA. 80%\nB. 90%\nC. 98%\nD. 99.80%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.004340869374573231,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.004340869374573231
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.004340877756476402,
              "max_token_negative_log_likelihood": 0.004340877756476402,
              "predictive_entropy": 0.00432207528501749,
              "shannon_entropy": 0.02789371833205223
            }
          }
        ],
        "cached": false,
        "request_time": 0.5166757106781006,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose dat a certain software product has a mean time between failures of 10,000 hrs and has a mean time to repair of 20 hrs. If da product is used by 100 ppl, wht is its availability?"
        },
        "references": [
          {
            "output": {
              "text": "80%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "90%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "98%"
            },
            "tags": []
          },
          {
            "output": {
              "text": "99.80%"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id115",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Suppose that a certain software product has a mean time between failures of 10,000 hours and has a mean time to repair of 20 hours. If the product is used by 100 customers, what is its availability?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "80%",
        "B": "90%",
        "C": "98%",
        "D": "99.80%"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose dat a certain software product has a mean time between failures of 10,000 hrs and has a mean time to repair of 20 hrs. If da product is used by 100 ppl, wht is its availability?\nA. 80%\nB. 90%\nC. 98%\nD. 99.80%\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.024726316332817078,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.024726316332817078
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.02472631447017193,
              "max_token_negative_log_likelihood": 0.02472631447017193,
              "predictive_entropy": 0.024122420698404312,
              "shannon_entropy": 0.11478674411773682
            }
          }
        ],
        "cached": false,
        "request_time": 0.5562798976898193,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose there is an open (external) hash table with four buckets, numbered 0,1,2,3, and integers are hashed into these buckets using hash function h(x) = x mod 4. If the sequence of perfect squares 1,4,9, ... , i^2, ... is hashed into the table, then, as the total number of entries in the table grows, what will happen?"
        },
        "references": [
          {
            "output": {
              "text": "Two of the buckets will each get approximately half the entries, and the other two will remain empty."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "All buckets will receive approximately the same number of entries."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All entries will go into one particular bucket."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id6"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two of the buckets will each get approximately half the entries, and the other two will remain empty.",
        "B": "All buckets will receive approximately the same number of entries.",
        "C": "All entries will go into one particular bucket.",
        "D": "All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose there is an open (external) hash table with four buckets, numbered 0,1,2,3, and integers are hashed into these buckets using hash function h(x) = x mod 4. If the sequence of perfect squares 1,4,9, ... , i^2, ... is hashed into the table, then, as the total number of entries in the table grows, what will happen?\nA. Two of the buckets will each get approximately half the entries, and the other two will remain empty.\nB. All buckets will receive approximately the same number of entries.\nC. All entries will go into one particular bucket.\nD. All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.2811550498008728,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.2811550498008728
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2811551094055176,
              "max_token_negative_log_likelihood": 0.2811551094055176,
              "predictive_entropy": 0.21224714815616608,
              "shannon_entropy": 0.5569363236427307
            }
          }
        ],
        "cached": false,
        "request_time": 0.5443851947784424,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "suppose   there's  an open (external)  hash  table  with  four  buckets,  numbered 0,1,2,3,   and integers  are hashed   into theese   buckets  using hash   function h(x) =   x mod 4.   if the   sequence  of perfect squares  1,4,9,   ...   ,   i^2,  ... is   hashed   into  the table, hten,  as the total   number   of  entries   in the   table  grows,   what   will  happen?"
        },
        "references": [
          {
            "output": {
              "text": "Two of the buckets will each get approximately half the entries, and the other two will remain empty."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "All buckets will receive approximately the same number of entries."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All entries will go into one particular bucket."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id6",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Suppose there is an open (external) hash table with four buckets, numbered 0,1,2,3, and integers are hashed into these buckets using hash function h(x) = x mod 4. If the sequence of perfect squares 1,4,9, ... , i^2, ... is hashed into the table, then, as the total number of entries in the table grows, what will happen?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two of the buckets will each get approximately half the entries, and the other two will remain empty.",
        "B": "All buckets will receive approximately the same number of entries.",
        "C": "All entries will go into one particular bucket.",
        "D": "All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: suppose   there's  an open (external)  hash  table  with  four  buckets,  numbered 0,1,2,3,   and integers  are hashed   into theese   buckets  using hash   function h(x) =   x mod 4.   if the   sequence  of perfect squares  1,4,9,   ...   ,   i^2,  ... is   hashed   into  the table, hten,  as the total   number   of  entries   in the   table  grows,   what   will  happen?\nA. Two of the buckets will each get approximately half the entries, and the other two will remain empty.\nB. All buckets will receive approximately the same number of entries.\nC. All entries will go into one particular bucket.\nD. All buckets will receive entries, but the difference between the buckets with smallest and largest number of entries will grow.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.07428456842899323,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.07428456842899323
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07428453862667084,
              "max_token_negative_log_likelihood": 0.07428453862667084,
              "predictive_entropy": 0.0689663216471672,
              "shannon_entropy": 0.25775599479675293
            }
          }
        ],
        "cached": false,
        "request_time": 0.5896592140197754,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose thea is an open (external) hash table w four buckets, numbered 0,1,2,3, and integers r hashed into dem buckets usin hash function h(x) = x mod 4. If da sequence of bumpin squares 1,4,9, ... , i^2, ... is hashed into da table, then, as da total number of entries in da table grows, wat will happen?"
        },
        "references": [
          {
            "output": {
              "text": "Two of da buckets gon each get approximately half da entries, and da other 2 will remain empty."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "All buckets gon receive approximately da same number of entries."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All entries gon go into one particular bucket."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All buckets gon receive entries, but da difference between da buckets wit smallest and largest number of entries gon grow."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id6",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Suppose there is an open (external) hash table with four buckets, numbered 0,1,2,3, and integers are hashed into these buckets using hash function h(x) = x mod 4. If the sequence of perfect squares 1,4,9, ... , i^2, ... is hashed into the table, then, as the total number of entries in the table grows, what will happen?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two of da buckets gon each get approximately half da entries, and da other 2 will remain empty.",
        "B": "All buckets gon receive approximately da same number of entries.",
        "C": "All entries gon go into one particular bucket.",
        "D": "All buckets gon receive entries, but da difference between da buckets wit smallest and largest number of entries gon grow."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose thea is an open (external) hash table w four buckets, numbered 0,1,2,3, and integers r hashed into dem buckets usin hash function h(x) = x mod 4. If da sequence of bumpin squares 1,4,9, ... , i^2, ... is hashed into da table, then, as da total number of entries in da table grows, wat will happen?\nA. Two of da buckets gon each get approximately half da entries, and da other 2 will remain empty.\nB. All buckets gon receive approximately da same number of entries.\nC. All entries gon go into one particular bucket.\nD. All buckets gon receive entries, but da difference between da buckets wit smallest and largest number of entries gon grow.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.09441366791725159,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.09441366791725159
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.09441368281841278,
              "max_token_negative_log_likelihood": 0.09441368281841278,
              "predictive_entropy": 0.08590760082006454,
              "shannon_entropy": 0.3027656078338623
            }
          }
        ],
        "cached": false,
        "request_time": 0.5690212249755859,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Assume that any assignment statement can be executed in unit time. If as many identical processors as needed are used, what is the minimum number of time units needed to execute the assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/F\nE := B - C\nF := A + B\nwith the same result as if the assignments were executed in the order shown?"
        },
        "references": [
          {
            "output": {
              "text": "1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id71"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1",
        "B": "2",
        "C": "3",
        "D": "4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Assume that any assignment statement can be executed in unit time. If as many identical processors as needed are used, what is the minimum number of time units needed to execute the assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/F\nE := B - C\nF := A + B\nwith the same result as if the assignments were executed in the order shown?\nA. 1\nB. 2\nC. 3\nD. 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.653998851776123,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.653998851776123
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.653998851776123,
              "max_token_negative_log_likelihood": 0.653998851776123,
              "predictive_entropy": 0.34005478024482727,
              "shannon_entropy": 0.8538098335266113
            }
          }
        ],
        "cached": false,
        "request_time": 0.5702612400054932,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "assume that   any  assignment  statement   can be executed   in unit  tiem.  if as many  identical processors   as needed   are   used,  what's   the minimum   number   of time  units needed  to  excecute  the  assignments\na   :=  b  + c\nb  := a  -  b\nc :=   a *   e\nd   :=   a/f\ne :=   b   -  c\nf  :=  a +   b\nwith the same result as if   the  assignments   were executed   in   the order  shown?"
        },
        "references": [
          {
            "output": {
              "text": "1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id71",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Assume that any assignment statement can be executed in unit time. If as many identical processors as needed are used, what is the minimum number of time units needed to execute the assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/F\nE := B - C\nF := A + B\nwith the same result as if the assignments were executed in the order shown?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1",
        "B": "2",
        "C": "3",
        "D": "4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: assume that   any  assignment  statement   can be executed   in unit  tiem.  if as many  identical processors   as needed   are   used,  what's   the minimum   number   of time  units needed  to  excecute  the  assignments\na   :=  b  + c\nb  := a  -  b\nc :=   a *   e\nd   :=   a/f\ne :=   b   -  c\nf  :=  a +   b\nwith the same result as if   the  assignments   were executed   in   the order  shown?\nA. 1\nB. 2\nC. 3\nD. 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.406192809343338,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.406192809343338
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.4061928391456604,
              "max_token_negative_log_likelihood": 0.4061928391456604,
              "predictive_entropy": 0.27059823274612427,
              "shannon_entropy": 0.7114218473434448
            }
          }
        ],
        "cached": false,
        "request_time": 0.5403413772583008,
        "request_datetime": 1755797633
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Assume dat any assignment statement can b executed in unit time. If as many identical processors as needed r used, wat is da minimum number of time units needed to execute da assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/FUC\nE := B - C\nFUC := A + B\nwit the same result as if da assignments were executed in da order shown?"
        },
        "references": [
          {
            "output": {
              "text": "1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "4"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id71",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Assume that any assignment statement can be executed in unit time. If as many identical processors as needed are used, what is the minimum number of time units needed to execute the assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/F\nE := B - C\nF := A + B\nwith the same result as if the assignments were executed in the order shown?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1",
        "B": "2",
        "C": "3",
        "D": "4"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Assume dat any assignment statement can b executed in unit time. If as many identical processors as needed r used, wat is da minimum number of time units needed to execute da assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/FUC\nE := B - C\nFUC := A + B\nwit the same result as if da assignments were executed in da order shown?\nA. 1\nB. 2\nC. 3\nD. 4\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.8088569641113281,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.8088569641113281
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8088569641113281,
              "max_token_negative_log_likelihood": 0.8088569641113281,
              "predictive_entropy": 0.36023807525634766,
              "shannon_entropy": 0.7654486894607544
            }
          }
        ],
        "cached": false,
        "request_time": 0.5404822826385498,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. Which of the following are true of such a tree?\nI. Worst-case search time is logarithmic in the number of nodes.\nII. Average-case search time is logarithmic in the number of nodes.\nIII. Best-case search time is proportional to the height of the tree.\nIV. The height of the tree is logarithmic in the number of nodes."
        },
        "references": [
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and IV only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and IV"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id47"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I and III only",
        "B": "II and III only",
        "C": "II and IV only",
        "D": "I, II, and IV"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. Which of the following are true of such a tree?\nI. Worst-case search time is logarithmic in the number of nodes.\nII. Average-case search time is logarithmic in the number of nodes.\nIII. Best-case search time is proportional to the height of the tree.\nIV. The height of the tree is logarithmic in the number of nodes.\nA. I and III only\nB. II and III only\nC. II and IV only\nD. I, II, and IV\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.1116377436337643e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5274703502655029,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in   a  hieght-balanced   binary   seach  tree,  tje   heights  of   the left  and  right descendents of  any   node differ   by at  most   1.  which  of   the   following   are   true  of   such  a   tree?\ni.   worst-case search   time   is   logarithmic  in   the number   of   nodes.\nii.   average-case   search   time  is logarithmic in the  number  of   nodes.\niii.  best-case  search   time is   proportional  tothe  height   of the  tree.\niv. tghe   height  of   the   tree   is logarithmic  in  tjhe   number  of  nodes."
        },
        "references": [
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and IV only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and IV"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id47",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. Which of the following are true of such a tree?\nI. Worst-case search time is logarithmic in the number of nodes.\nII. Average-case search time is logarithmic in the number of nodes.\nIII. Best-case search time is proportional to the height of the tree.\nIV. The height of the tree is logarithmic in the number of nodes."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I and III only",
        "B": "II and III only",
        "C": "II and IV only",
        "D": "I, II, and IV"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in   a  hieght-balanced   binary   seach  tree,  tje   heights  of   the left  and  right descendents of  any   node differ   by at  most   1.  which  of   the   following   are   true  of   such  a   tree?\ni.   worst-case search   time   is   logarithmic  in   the number   of   nodes.\nii.   average-case   search   time  is logarithmic in the  number  of   nodes.\niii.  best-case  search   time is   proportional  tothe  height   of the  tree.\niv. tghe   height  of   the   tree   is logarithmic  in  tjhe   number  of  nodes.\nA. I and III only\nB. II and III only\nC. II and IV only\nD. I, II, and IV\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.4933624470359064e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5549278259277344,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In a height-balanced binary search tree, da heights of da left and rite descendents of any node differ by at most 1. Which of da following r true of such a tree?\nI. Worst-case search time is logarithmic in da number of nodes.\nII. Average-case search time is logarithmic in da number of nodes.\nIII. Best-case search time is proportional to da height of da tree.\nIV. Da height of da tree is logarithmic in da number of nodes."
        },
        "references": [
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and IV only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and IV"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id47",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. Which of the following are true of such a tree?\nI. Worst-case search time is logarithmic in the number of nodes.\nII. Average-case search time is logarithmic in the number of nodes.\nIII. Best-case search time is proportional to the height of the tree.\nIV. The height of the tree is logarithmic in the number of nodes."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I and III only",
        "B": "II and III only",
        "C": "II and IV only",
        "D": "I, II, and IV"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In a height-balanced binary search tree, da heights of da left and rite descendents of any node differ by at most 1. Which of da following r true of such a tree?\nI. Worst-case search time is logarithmic in da number of nodes.\nII. Average-case search time is logarithmic in da number of nodes.\nIII. Best-case search time is proportional to da height of da tree.\nIV. Da height of da tree is logarithmic in da number of nodes.\nA. I and III only\nB. II and III only\nC. II and IV only\nD. I, II, and IV\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.534605416964041e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5341417789459229,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is true of interrupts?"
        },
        "references": [
          {
            "output": {
              "text": "They are generated when memory cycles are \"stolen\"."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They are used in place of data channels."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They can indicate completion of an I/O operation."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "They cannot be generated by arithmetic operations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id46"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "They are generated when memory cycles are \"stolen\".",
        "B": "They are used in place of data channels.",
        "C": "They can indicate completion of an I/O operation.",
        "D": "They cannot be generated by arithmetic operations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is true of interrupts?\nA. They are generated when memory cycles are \"stolen\".\nB. They are used in place of data channels.\nC. They can indicate completion of an I/O operation.\nD. They cannot be generated by arithmetic operations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.665954238928908e-13
            }
          }
        ],
        "cached": false,
        "request_time": 0.5488557815551758,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of the  following  is  true of interrupts?"
        },
        "references": [
          {
            "output": {
              "text": "They are generated when memory cycles are \"stolen\"."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They are used in place of data channels."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They can indicate completion of an I/O operation."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "They cannot be generated by arithmetic operations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id46",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is true of interrupts?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "They are generated when memory cycles are \"stolen\".",
        "B": "They are used in place of data channels.",
        "C": "They can indicate completion of an I/O operation.",
        "D": "They cannot be generated by arithmetic operations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of the  following  is  true of interrupts?\nA. They are generated when memory cycles are \"stolen\".\nB. They are used in place of data channels.\nC. They can indicate completion of an I/O operation.\nD. They cannot be generated by arithmetic operations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.3228524178843237e-12
            }
          }
        ],
        "cached": false,
        "request_time": 0.530799150466919,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is tru of interrupts?"
        },
        "references": [
          {
            "output": {
              "text": "They r generated when memory cycles r \"stolen\"."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They r used in place of data channels."
            },
            "tags": []
          },
          {
            "output": {
              "text": "They can indicate completion of an I/O operation."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "They cannot b generated by arithmetic operations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id46",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is true of interrupts?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "They r generated when memory cycles r \"stolen\".",
        "B": "They r used in place of data channels.",
        "C": "They can indicate completion of an I/O operation.",
        "D": "They cannot b generated by arithmetic operations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is tru of interrupts?\nA. They r generated when memory cycles r \"stolen\".\nB. They r used in place of data channels.\nC. They can indicate completion of an I/O operation.\nD. They cannot b generated by arithmetic operations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 5.785433330324219e-12
            }
          }
        ],
        "cached": false,
        "request_time": 0.5252573490142822,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Church's thesis equates the concept of \"computable function\" with those functions computable by, for example, Turing machines. Which of the following is true of Church's thesis?"
        },
        "references": [
          {
            "output": {
              "text": "It was first proven by Alan Turing."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It has not yet been proven, but finding a proof is a subject of active research."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It can never be proven."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It is now in doubt because of the advent of parallel computers."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id9"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It was first proven by Alan Turing.",
        "B": "It has not yet been proven, but finding a proof is a subject of active research.",
        "C": "It can never be proven.",
        "D": "It is now in doubt because of the advent of parallel computers."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Church's thesis equates the concept of \"computable function\" with those functions computable by, for example, Turing machines. Which of the following is true of Church's thesis?\nA. It was first proven by Alan Turing.\nB. It has not yet been proven, but finding a proof is a subject of active research.\nC. It can never be proven.\nD. It is now in doubt because of the advent of parallel computers.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.2901810226017005e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.49832630157470703,
        "request_datetime": 1755797634
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "church's  thesis equates   the   concept   of \"computable  function\"   with  those   functions  computable by,  for   example,   turing machines.  which  of the  following   is true   of  church's thesis?"
        },
        "references": [
          {
            "output": {
              "text": "It was first proven by Alan Turing."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It has not yet been proven, but finding a proof is a subject of active research."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It can never be proven."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It is now in doubt because of the advent of parallel computers."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id9",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Church's thesis equates the concept of \"computable function\" with those functions computable by, for example, Turing machines. Which of the following is true of Church's thesis?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It was first proven by Alan Turing.",
        "B": "It has not yet been proven, but finding a proof is a subject of active research.",
        "C": "It can never be proven.",
        "D": "It is now in doubt because of the advent of parallel computers."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: church's  thesis equates   the   concept   of \"computable  function\"   with  those   functions  computable by,  for   example,   turing machines.  which  of the  following   is true   of  church's thesis?\nA. It was first proven by Alan Turing.\nB. It has not yet been proven, but finding a proof is a subject of active research.\nC. It can never be proven.\nD. It is now in doubt because of the advent of parallel computers.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.5665101216200128e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5300381183624268,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Church's thesis equates da concept of \"computable function\" wit those functions computable by, fa example, Turing machines. Which of da following is tru of Church's thesis?"
        },
        "references": [
          {
            "output": {
              "text": "It was first proven by Alan Turing."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It has not yet been proven, but finding a proof is a subject of active research."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It can never b proven."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It is now in doubt b/c of da advent of parallel computers."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id9",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Church's thesis equates the concept of \"computable function\" with those functions computable by, for example, Turing machines. Which of the following is true of Church's thesis?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It was first proven by Alan Turing.",
        "B": "It has not yet been proven, but finding a proof is a subject of active research.",
        "C": "It can never b proven.",
        "D": "It is now in doubt b/c of da advent of parallel computers."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Church's thesis equates da concept of \"computable function\" wit those functions computable by, fa example, Turing machines. Which of da following is tru of Church's thesis?\nA. It was first proven by Alan Turing.\nB. It has not yet been proven, but finding a proof is a subject of active research.\nC. It can never b proven.\nD. It is now in doubt b/c of da advent of parallel computers.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.321589403526559e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.48712849617004395,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Any set of Boolean operators that is sufficient to represent all Boolean expressions is said to be complete. Which of the following is NOT complete?"
        },
        "references": [
          {
            "output": {
              "text": "{AND, NOT}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{NOT, OR}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{AND, OR}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{NAND}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id20"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{AND, NOT}",
        "B": "{NOT, OR}",
        "C": "{AND, OR}",
        "D": "{NAND}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Any set of Boolean operators that is sufficient to represent all Boolean expressions is said to be complete. Which of the following is NOT complete?\nA. {AND, NOT}\nB. {NOT, OR}\nC. {AND, OR}\nD. {NAND}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.000514851592015475,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.000514851592015475
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0005148782511241734,
              "max_token_negative_log_likelihood": 0.0005148782511241734,
              "predictive_entropy": 0.0005146132316440344,
              "shannon_entropy": 0.00462169898673892
            }
          }
        ],
        "cached": false,
        "request_time": 0.5291001796722412,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "any set of   boolean   operators that's   sufficient to represent  all  boolean  expressions is  said  to be  complete.  which   of   the  following isn't complete?"
        },
        "references": [
          {
            "output": {
              "text": "{AND, NOT}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{NOT, OR}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{AND, OR}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{NAND}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id20",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Any set of Boolean operators that is sufficient to represent all Boolean expressions is said to be complete. Which of the following is NOT complete?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{AND, NOT}",
        "B": "{NOT, OR}",
        "C": "{AND, OR}",
        "D": "{NAND}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: any set of   boolean   operators that's   sufficient to represent  all  boolean  expressions is  said  to be  complete.  which   of   the  following isn't complete?\nA. {AND, NOT}\nB. {NOT, OR}\nC. {AND, OR}\nD. {NAND}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.2818203270435333,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.2818203270435333
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2818203568458557,
              "max_token_negative_log_likelihood": 0.2818203568458557,
              "predictive_entropy": 0.21260787546634674,
              "shannon_entropy": 0.5624692440032959
            }
          }
        ],
        "cached": false,
        "request_time": 0.4956653118133545,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Any set of Boolean operators dat is sufficient to represent alll Boolean expressions is said to b complete. Which of da following is NOT complete?"
        },
        "references": [
          {
            "output": {
              "text": "{AND, NOT}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{NOT, OR}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{AND, OR}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{NAND}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id20",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Any set of Boolean operators that is sufficient to represent all Boolean expressions is said to be complete. Which of the following is NOT complete?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{AND, NOT}",
        "B": "{NOT, OR}",
        "C": "{AND, OR}",
        "D": "{NAND}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Any set of Boolean operators dat is sufficient to represent alll Boolean expressions is said to b complete. Which of da following is NOT complete?\nA. {AND, NOT}\nB. {NOT, OR}\nC. {AND, OR}\nD. {NAND}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0033800634555518627,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0033800634555518627
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0033800441306084394,
              "max_token_negative_log_likelihood": 0.0033800441306084394,
              "predictive_entropy": 0.003368638688698411,
              "shannon_entropy": 0.024853529408574104
            }
          }
        ],
        "cached": false,
        "request_time": 0.5294582843780518,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Resolution theorem proving for showing that a formula of propositional logic is not satisfiable has which of the following properties?\nI. It is a sound proof system in the sense that there does not exist a proof of the unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in the sense that there is a proof of unsatisfiability for every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in the sense that whenever an unsatisfiable formula F of propositional logic has a resolution proof, F also has a proof whose length is polynomial in the length of F."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id22"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Resolution theorem proving for showing that a formula of propositional logic is not satisfiable has which of the following properties?\nI. It is a sound proof system in the sense that there does not exist a proof of the unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in the sense that there is a proof of unsatisfiability for every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in the sense that whenever an unsatisfiable formula F of propositional logic has a resolution proof, F also has a proof whose length is polynomial in the length of F.\nA. I only\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -3.3378546504536644e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -3.3378546504536644e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.337865791763761e-06,
              "max_token_negative_log_likelihood": 3.337865791763761e-06,
              "predictive_entropy": 3.3378546504536644e-06,
              "shannon_entropy": 4.4908734707860276e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5150368213653564,
        "request_datetime": 1755797635
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "resolution theorem  proving   for  showing  that  a formula   of  propositional  logic   isn't   satisfiable   has   which   of the  following properties?\ni.  it's  a   sound   proof  system   in   the  sense   that there  doesn't exist  a  proof of the  unsatisfiability   of a   satisfiable formula  of propositional logic.\nii. it's   a complete  proof   system in  the   sense tyhat there's  a   proof   of  unsatisfiability  for  every  unsa   tisfiable   formula  of propositional  logic.\niii. it's a succinct   proof system in   the   sense  that whenever  an  unsatisfiable formula   f of  propositional   logic   has  a resolution proof,  f   also  has  a   proof  whose   length  is polynomial   in the  length   of   f."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id22",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Resolution theorem proving for showing that a formula of propositional logic is not satisfiable has which of the following properties?\nI. It is a sound proof system in the sense that there does not exist a proof of the unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in the sense that there is a proof of unsatisfiability for every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in the sense that whenever an unsatisfiable formula F of propositional logic has a resolution proof, F also has a proof whose length is polynomial in the length of F."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: resolution theorem  proving   for  showing  that  a formula   of  propositional  logic   isn't   satisfiable   has   which   of the  following properties?\ni.  it's  a   sound   proof  system   in   the  sense   that there  doesn't exist  a  proof of the  unsatisfiability   of a   satisfiable formula  of propositional logic.\nii. it's   a complete  proof   system in  the   sense tyhat there's  a   proof   of  unsatisfiability  for  every  unsa   tisfiable   formula  of propositional  logic.\niii. it's a succinct   proof system in   the   sense  that whenever  an  unsatisfiable formula   f of  propositional   logic   has  a resolution proof,  f   also  has  a   proof  whose   length  is polynomial   in the  length   of   f.\nA. I only\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.03112046979367733,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.03112046979367733
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.031120454892516136,
              "max_token_negative_log_likelihood": 0.031120454892516136,
              "predictive_entropy": 0.030166886746883392,
              "shannon_entropy": 0.14255739748477936
            }
          }
        ],
        "cached": false,
        "request_time": 0.58180832862854,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Resolution theorem proving fa showing dat a formula of propositional logic is not satisfiable has which of da following properties?\nI. It is a sound proof system in da sense dat there does not exist a proof of da unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in da sense dat there is a proof of unsatisfiability fir every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in da sense dat whenever an unsatisfiable formula FUC of propositional logic has a resolution proof, FUC also has a proof whose length is polynomial in da length of FUC."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id22",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Resolution theorem proving for showing that a formula of propositional logic is not satisfiable has which of the following properties?\nI. It is a sound proof system in the sense that there does not exist a proof of the unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in the sense that there is a proof of unsatisfiability for every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in the sense that whenever an unsatisfiable formula F of propositional logic has a resolution proof, F also has a proof whose length is polynomial in the length of F."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "I and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Resolution theorem proving fa showing dat a formula of propositional logic is not satisfiable has which of da following properties?\nI. It is a sound proof system in da sense dat there does not exist a proof of da unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in da sense dat there is a proof of unsatisfiability fir every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in da sense dat whenever an unsatisfiable formula FUC of propositional logic has a resolution proof, FUC also has a proof whose length is polynomial in da length of FUC.\nA. I only\nB. III only\nC. I and II only\nD. I and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.541770613286644e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.541770613286644e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.541977250482887e-05,
              "max_token_negative_log_likelihood": 4.541977250482887e-05,
              "predictive_entropy": 4.541770977084525e-05,
              "shannon_entropy": 0.0004993932088837028
            }
          }
        ],
        "cached": false,
        "request_time": 0.5662024021148682,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is NOT a property of bitmap graphics?"
        },
        "references": [
          {
            "output": {
              "text": "Fast hardware exists to move blocks of pixels efficiently."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Realistic lighting and shading can be done."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All line segments can be displayed as straight."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Polygons can be filled with solid colors and textures."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id45"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Fast hardware exists to move blocks of pixels efficiently.",
        "B": "Realistic lighting and shading can be done.",
        "C": "All line segments can be displayed as straight.",
        "D": "Polygons can be filled with solid colors and textures."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is NOT a property of bitmap graphics?\nA. Fast hardware exists to move blocks of pixels efficiently.\nB. Realistic lighting and shading can be done.\nC. All line segments can be displayed as straight.\nD. Polygons can be filled with solid colors and textures.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.0127532113510824e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5760154724121094,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of the following isn't   a  property of   bitmap graphics?"
        },
        "references": [
          {
            "output": {
              "text": "Fast hardware exists to move blocks of pixels efficiently."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Realistic lighting and shading can be done."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All line segments can be displayed as straight."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Polygons can be filled with solid colors and textures."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id45",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is NOT a property of bitmap graphics?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Fast hardware exists to move blocks of pixels efficiently.",
        "B": "Realistic lighting and shading can be done.",
        "C": "All line segments can be displayed as straight.",
        "D": "Polygons can be filled with solid colors and textures."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of the following isn't   a  property of   bitmap graphics?\nA. Fast hardware exists to move blocks of pixels efficiently.\nB. Realistic lighting and shading can be done.\nC. All line segments can be displayed as straight.\nD. Polygons can be filled with solid colors and textures.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.103190371334108e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5530564785003662,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is NOT a property of bitmap graphics?"
        },
        "references": [
          {
            "output": {
              "text": "Fast hardware exists to move blocks of pixels efficiently."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Realistic lighting and shading can b done."
            },
            "tags": []
          },
          {
            "output": {
              "text": "All line segments can b displayed as str8."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Polygons can b filled wit solid colors and textures."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id45",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is NOT a property of bitmap graphics?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Fast hardware exists to move blocks of pixels efficiently.",
        "B": "Realistic lighting and shading can b done.",
        "C": "All line segments can b displayed as str8.",
        "D": "Polygons can b filled wit solid colors and textures."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is NOT a property of bitmap graphics?\nA. Fast hardware exists to move blocks of pixels efficiently.\nB. Realistic lighting and shading can b done.\nC. All line segments can b displayed as str8.\nD. Polygons can b filled wit solid colors and textures.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.00447842525318265,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.00447842525318265
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.004478454124182463,
              "max_token_negative_log_likelihood": 0.004478454124182463,
              "predictive_entropy": 0.004458442330360413,
              "shannon_entropy": 0.028635649010539055
            }
          }
        ],
        "cached": false,
        "request_time": 0.524648904800415,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following algorithms has running time \u0398(n^2) in the worst case but \u0398(n log n) on average?"
        },
        "references": [
          {
            "output": {
              "text": "Bubblesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Mergesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Heapsort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Quicksort"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id43"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Bubblesort",
        "B": "Mergesort",
        "C": "Heapsort",
        "D": "Quicksort"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following algorithms has running time \u0398(n^2) in the worst case but \u0398(n log n) on average?\nA. Bubblesort\nB. Mergesort\nC. Heapsort\nD. Quicksort\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.4305012882687151e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.4305012882687151e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.430521751899505e-05,
              "max_token_negative_log_likelihood": 1.430521751899505e-05,
              "predictive_entropy": 1.4305012882687151e-05,
              "shannon_entropy": 0.00018147809896618128
            }
          }
        ],
        "cached": false,
        "request_time": 0.5134766101837158,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of   the   following algorithms has   running  time   \u03b8(n^2) in  the  worst case  but  \u03b8(n   log   n) on  average?"
        },
        "references": [
          {
            "output": {
              "text": "Bubblesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Mergesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Heapsort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Quicksort"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id43",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following algorithms has running time \u0398(n^2) in the worst case but \u0398(n log n) on average?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Bubblesort",
        "B": "Mergesort",
        "C": "Heapsort",
        "D": "Quicksort"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of   the   following algorithms has   running  time   \u03b8(n^2) in  the  worst case  but  \u03b8(n   log   n) on  average?\nA. Bubblesort\nB. Mergesort\nC. Heapsort\nD. Quicksort\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -8.141662692651153e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -8.141662692651153e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 8.142326259985566e-05,
              "max_token_negative_log_likelihood": 8.142326259985566e-05,
              "predictive_entropy": 8.141663420246914e-05,
              "shannon_entropy": 0.000857289822306484
            }
          }
        ],
        "cached": false,
        "request_time": 0.5244688987731934,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following algorithms has runnin time \u0398(n^2) in da worst case but \u0398(n log n) on average?"
        },
        "references": [
          {
            "output": {
              "text": "Bubblesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Mergesort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Heapsort"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Quicksort"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id43",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following algorithms has running time \u0398(n^2) in the worst case but \u0398(n log n) on average?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Bubblesort",
        "B": "Mergesort",
        "C": "Heapsort",
        "D": "Quicksort"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following algorithms has runnin time \u0398(n^2) in da worst case but \u0398(n log n) on average?\nA. Bubblesort\nB. Mergesort\nC. Heapsort\nD. Quicksort\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.4305104514278355e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.4305104514278355e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.4305124977909145e-06,
              "max_token_negative_log_likelihood": 1.4305124977909145e-06,
              "predictive_entropy": 1.4305104514278355e-06,
              "shannon_entropy": 2.12121940421639e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5140349864959717,
        "request_datetime": 1755797636
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements is FALSE about memory reclamation based on reference counting?"
        },
        "references": [
          {
            "output": {
              "text": "Reference counting is well suited for reclaiming cyclic structures."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reference counting incurs additional space overhead for each memory cell."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference counting is an alternative to mark-and-sweep garbage collection."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference counting need not keep track of which cells point to other cells."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id10"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Reference counting is well suited for reclaiming cyclic structures.",
        "B": "Reference counting incurs additional space overhead for each memory cell.",
        "C": "Reference counting is an alternative to mark-and-sweep garbage collection.",
        "D": "Reference counting need not keep track of which cells point to other cells."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements is FALSE about memory reclamation based on reference counting?\nA. Reference counting is well suited for reclaiming cyclic structures.\nB. Reference counting incurs additional space overhead for each memory cell.\nC. Reference counting is an alternative to mark-and-sweep garbage collection.\nD. Reference counting need not keep track of which cells point to other cells.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.042999111115932465,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.042999111115932465
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.042999085038900375,
              "max_token_negative_log_likelihood": 0.042999085038900375,
              "predictive_entropy": 0.04118935018777847,
              "shannon_entropy": 0.1745232194662094
            }
          }
        ],
        "cached": false,
        "request_time": 0.5258548259735107,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of   the following  statements   is   false   about  memory  reclamation based  on  reference  counting?"
        },
        "references": [
          {
            "output": {
              "text": "Reference counting is well suited for reclaiming cyclic structures."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reference counting incurs additional space overhead for each memory cell."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference counting is an alternative to mark-and-sweep garbage collection."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference counting need not keep track of which cells point to other cells."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id10",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements is FALSE about memory reclamation based on reference counting?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Reference counting is well suited for reclaiming cyclic structures.",
        "B": "Reference counting incurs additional space overhead for each memory cell.",
        "C": "Reference counting is an alternative to mark-and-sweep garbage collection.",
        "D": "Reference counting need not keep track of which cells point to other cells."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of   the following  statements   is   false   about  memory  reclamation based  on  reference  counting?\nA. Reference counting is well suited for reclaiming cyclic structures.\nB. Reference counting incurs additional space overhead for each memory cell.\nC. Reference counting is an alternative to mark-and-sweep garbage collection.\nD. Reference counting need not keep track of which cells point to other cells.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.3132617473602295,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.3132617473602295
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3132617473602295,
              "max_token_negative_log_likelihood": 0.3132617473602295,
              "predictive_entropy": 0.22901266813278198,
              "shannon_entropy": 0.5822032690048218
            }
          }
        ],
        "cached": false,
        "request_time": 0.5139245986938477,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements is FALSE abt memory reclamation based on reference countin?"
        },
        "references": [
          {
            "output": {
              "text": "Reference countin is well suited fir reclaiming cyclic structures."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Reference countin incurs additional space overhead fa each memory cell."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference countin is an alternative to mark-and-sweep garbage collection."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Reference countin need not keep track of which cells point to other cells."
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id10",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements is FALSE about memory reclamation based on reference counting?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Reference countin is well suited fir reclaiming cyclic structures.",
        "B": "Reference countin incurs additional space overhead fa each memory cell.",
        "C": "Reference countin is an alternative to mark-and-sweep garbage collection.",
        "D": "Reference countin need not keep track of which cells point to other cells."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements is FALSE abt memory reclamation based on reference countin?\nA. Reference countin is well suited fir reclaiming cyclic structures.\nB. Reference countin incurs additional space overhead fa each memory cell.\nC. Reference countin is an alternative to mark-and-sweep garbage collection.\nD. Reference countin need not keep track of which cells point to other cells.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.00017951308109331876,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.00017951308109331876
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.00017948569438885897,
              "max_token_negative_log_likelihood": 0.00017948569438885897,
              "predictive_entropy": 0.00017945347644854337,
              "shannon_entropy": 0.0017279055900871754
            }
          }
        ],
        "cached": false,
        "request_time": 0.5311830043792725,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following conditions can be expressed by a Boolean formula in the Boolean variables p_1, p_2, p_3, p_4 and the connectives \u2227,\u2228 (without \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 are true.\nII. Exactly three of p_1, p_2, p_3, p_4 are true.\nIII. An even number of p_1, p_2, p_3, p_4 are true."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id58"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following conditions can be expressed by a Boolean formula in the Boolean variables p_1, p_2, p_3, p_4 and the connectives \u2227,\u2228 (without \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 are true.\nII. Exactly three of p_1, p_2, p_3, p_4 are true.\nIII. An even number of p_1, p_2, p_3, p_4 are true.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -3.576278118089249e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -3.576278118089249e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.576279254957626e-07,
              "max_token_negative_log_likelihood": 3.576279254957626e-07,
              "predictive_entropy": 3.5762778338721546e-07,
              "shannon_entropy": 5.226544544711942e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.4922797679901123,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of   the   following   conditions   can be expressed by  a   boolean   formula   in   the   boolean variables  p_1, p_2,  p_3,  p_4 and  the  connectives   \u2227,\u2228 (without   \u00ac)?\ni. at  least three   of  p_1,  p_2,  p_3, p_4 are true.\nii. exactly three  of p_1,  p_2,  p_3, p_4 are  true.\niii.   an even number   of   p_1,   p_2,  p_3,   p_4  are  true."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id58",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following conditions can be expressed by a Boolean formula in the Boolean variables p_1, p_2, p_3, p_4 and the connectives \u2227,\u2228 (without \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 are true.\nII. Exactly three of p_1, p_2, p_3, p_4 are true.\nIII. An even number of p_1, p_2, p_3, p_4 are true."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of   the   following   conditions   can be expressed by  a   boolean   formula   in   the   boolean variables  p_1, p_2,  p_3,  p_4 and  the  connectives   \u2227,\u2228 (without   \u00ac)?\ni. at  least three   of  p_1,  p_2,  p_3, p_4 are true.\nii. exactly three  of p_1,  p_2,  p_3, p_4 are  true.\niii.   an even number   of   p_1,   p_2,  p_3,   p_4  are  true.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -3.576278118089249e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -3.576278118089249e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.576279254957626e-07,
              "max_token_negative_log_likelihood": 3.576279254957626e-07,
              "predictive_entropy": 3.5762778338721546e-07,
              "shannon_entropy": 4.994747996533988e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5620508193969727,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following conditions can b expressed by a Boolean formula in da Boolean variables p_1, p_2, p_3, p_4 and da connectives \u2227,\u2228 (w/o \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 r true.\nII. Exactly three of p_1, p_2, p_3, p_4 r true.\nIII. An even number of p_1, p_2, p_3, p_4 r true."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id58",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following conditions can be expressed by a Boolean formula in the Boolean variables p_1, p_2, p_3, p_4 and the connectives \u2227,\u2228 (without \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 are true.\nII. Exactly three of p_1, p_2, p_3, p_4 are true.\nIII. An even number of p_1, p_2, p_3, p_4 are true."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following conditions can b expressed by a Boolean formula in da Boolean variables p_1, p_2, p_3, p_4 and da connectives \u2227,\u2228 (w/o \u00ac)?\nI. At least three of p_1, p_2, p_3, p_4 r true.\nII. Exactly three of p_1, p_2, p_3, p_4 r true.\nIII. An even number of p_1, p_2, p_3, p_4 r true.\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.172316494077677e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.172316494077677e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.172333774477011e-06,
              "max_token_negative_log_likelihood": 4.172333774477011e-06,
              "predictive_entropy": 4.172316494077677e-06,
              "shannon_entropy": 5.7285626098746434e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5273652076721191,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": []
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2048"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id106"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2048"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?\nA. 0\nB. 256\nC. 1024\nD. 2048\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.20905300974845886,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.20905300974845886
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.20905297994613647,
              "max_token_negative_log_likelihood": 0.20905297994613647,
              "predictive_entropy": 0.16961561143398285,
              "shannon_entropy": 0.6211902499198914
            }
          }
        ],
        "cached": false,
        "request_time": 0.6002249717712402,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "array  a   contains 256  elements   of   4 bytes each.   its first element is  stored  at   physical   address 4,096.\narray b  contains  512   elements of  4  bytes   each.   its  first element  is stored  at   physical   address   8,192.\nassume  that  only  arrays   a and  b  can be  cached   in   an initally   empty, physically addressed,   physically  tagged,   direct-mapped,  2k-byte   cache  with  an  8-byte block   size. the following   loop is then executed.\nfor   (i  =  0;  i < 256;   i++)\n   a[i]  =   a[i]  +  b[2*i];\ndurig  the   execution   of  the loop,   how   many   bytes   will   be written   to  memory   if  the   cache   has  a write-through   policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": []
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2048"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id106",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2048"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: array  a   contains 256  elements   of   4 bytes each.   its first element is  stored  at   physical   address 4,096.\narray b  contains  512   elements of  4  bytes   each.   its  first element  is stored  at   physical   address   8,192.\nassume  that  only  arrays   a and  b  can be  cached   in   an initally   empty, physically addressed,   physically  tagged,   direct-mapped,  2k-byte   cache  with  an  8-byte block   size. the following   loop is then executed.\nfor   (i  =  0;  i < 256;   i++)\n   a[i]  =   a[i]  +  b[2*i];\ndurig  the   execution   of  the loop,   how   many   bytes   will   be written   to  memory   if  the   cache   has  a write-through   policy?\nA. 0\nB. 256\nC. 1024\nD. 2048\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.129258930683136,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.129258930683136
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12925894558429718,
              "max_token_negative_log_likelihood": 0.12925894558429718,
              "predictive_entropy": 0.11358582973480225,
              "shannon_entropy": 0.45027956366539
            }
          }
        ],
        "cached": false,
        "request_time": 0.5519964694976807,
        "request_datetime": 1755797637
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume dat only arrays A and B can b cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache witt an 8-byte block size. Da following loop is then executed.\nfir (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDurin the execution of da loop, how many bytes gon be written to memory if da cache has a write-through policy?"
        },
        "references": [
          {
            "output": {
              "text": "0"
            },
            "tags": []
          },
          {
            "output": {
              "text": "256"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1024"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2048"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id106",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0",
        "B": "256",
        "C": "1024",
        "D": "2048"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume dat only arrays A and B can b cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache witt an 8-byte block size. Da following loop is then executed.\nfir (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDurin the execution of da loop, how many bytes gon be written to memory if da cache has a write-through policy?\nA. 0\nB. 256\nC. 1024\nD. 2048\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -1.176546335220337,
            "tokens": [
              {
                "text": "B",
                "logprob": -1.176546335220337
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.176546335220337,
              "max_token_negative_log_likelihood": 1.176546335220337,
              "predictive_entropy": 0.3627784550189972,
              "shannon_entropy": 0.7915087342262268
            }
          }
        ],
        "cached": false,
        "request_time": 0.5877821445465088,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?"
        },
        "references": [
          {
            "output": {
              "text": "Condition codes set by every instruction"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Variable-length encoding of instructions"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Instructions requiring widely varying numbers of cycles to execute"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Several different classes (sets) of registers"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id73"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Condition codes set by every instruction",
        "B": "Variable-length encoding of instructions",
        "C": "Instructions requiring widely varying numbers of cycles to execute",
        "D": "Several different classes (sets) of registers"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?\nA. Condition codes set by every instruction\nB. Variable-length encoding of instructions\nC. Instructions requiring widely varying numbers of cycles to execute\nD. Several different classes (sets) of registers\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.7881233361549675e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.7881233361549675e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.78815535036847e-05,
              "max_token_negative_log_likelihood": 1.78815535036847e-05,
              "predictive_entropy": 1.7881233361549675e-05,
              "shannon_entropy": 0.00022737322433385998
            }
          }
        ],
        "cached": false,
        "request_time": 0.5502021312713623,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of the   following instruction-set   features isn't  generally   considered   an obstacle to aggressive  pipelining  of   an  integer   unit?"
        },
        "references": [
          {
            "output": {
              "text": "Condition codes set by every instruction"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Variable-length encoding of instructions"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Instructions requiring widely varying numbers of cycles to execute"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Several different classes (sets) of registers"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id73",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Condition codes set by every instruction",
        "B": "Variable-length encoding of instructions",
        "C": "Instructions requiring widely varying numbers of cycles to execute",
        "D": "Several different classes (sets) of registers"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of the   following instruction-set   features isn't  generally   considered   an obstacle to aggressive  pipelining  of   an  integer   unit?\nA. Condition codes set by every instruction\nB. Variable-length encoding of instructions\nC. Instructions requiring widely varying numbers of cycles to execute\nD. Several different classes (sets) of registers\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0002416080387774855,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0002416080387774855
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0002416068164166063,
              "max_token_negative_log_likelihood": 0.0002416068164166063,
              "predictive_entropy": 0.00024154844868462533,
              "shannon_entropy": 0.0024886527098715305
            }
          }
        ],
        "cached": false,
        "request_time": 0.5441977977752686,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?"
        },
        "references": [
          {
            "output": {
              "text": "Condition codes set by every instruction"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Variable-length encoding of instructions"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Instructions requiring widely varying numbers of cycles to execute"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Several diff classes (sets) of registers"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id73",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Condition codes set by every instruction",
        "B": "Variable-length encoding of instructions",
        "C": "Instructions requiring widely varying numbers of cycles to execute",
        "D": "Several diff classes (sets) of registers"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?\nA. Condition codes set by every instruction\nB. Variable-length encoding of instructions\nC. Instructions requiring widely varying numbers of cycles to execute\nD. Several diff classes (sets) of registers\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -8.618460560683161e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -8.618460560683161e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 8.619203435955569e-05,
              "max_token_negative_log_likelihood": 8.619203435955569e-05,
              "predictive_entropy": 8.618460560683161e-05,
              "shannon_entropy": 0.000943908526096493
            }
          }
        ],
        "cached": false,
        "request_time": 0.5279040336608887,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Sometimes the object module produced by a compiler includes information (from the symbol table) mapping all source program names to their addresses. The most likely purpose of this information is"
        },
        "references": [
          {
            "output": {
              "text": "for use as input to a debugging aid"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "to increase the run-time efficiency of the program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "for the reduction of the symbol-table space needed by the compiler"
            },
            "tags": []
          },
          {
            "output": {
              "text": "to tell the loader where each variable belongs"
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id5"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "for use as input to a debugging aid",
        "B": "to increase the run-time efficiency of the program",
        "C": "for the reduction of the symbol-table space needed by the compiler",
        "D": "to tell the loader where each variable belongs"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Sometimes the object module produced by a compiler includes information (from the symbol table) mapping all source program names to their addresses. The most likely purpose of this information is\nA. for use as input to a debugging aid\nB. to increase the run-time efficiency of the program\nC. for the reduction of the symbol-table space needed by the compiler\nD. to tell the loader where each variable belongs\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.266192227602005,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.266192227602005
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2661922574043274,
              "max_token_negative_log_likelihood": 0.2661922574043274,
              "predictive_entropy": 0.2039809376001358,
              "shannon_entropy": 0.5437480211257935
            }
          }
        ],
        "cached": false,
        "request_time": 0.5284407138824463,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "sometimes  the  object module   produced   by a   compiler includes   information  (from the  symbol table) mapping   all  source program names  to their  addresses.   the most likely   purpose   of   this information  is"
        },
        "references": [
          {
            "output": {
              "text": "for use as input to a debugging aid"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "to increase the run-time efficiency of the program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "for the reduction of the symbol-table space needed by the compiler"
            },
            "tags": []
          },
          {
            "output": {
              "text": "to tell the loader where each variable belongs"
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id5",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Sometimes the object module produced by a compiler includes information (from the symbol table) mapping all source program names to their addresses. The most likely purpose of this information is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "for use as input to a debugging aid",
        "B": "to increase the run-time efficiency of the program",
        "C": "for the reduction of the symbol-table space needed by the compiler",
        "D": "to tell the loader where each variable belongs"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: sometimes  the  object module   produced   by a   compiler includes   information  (from the  symbol table) mapping   all  source program names  to their  addresses.   the most likely   purpose   of   this information  is\nA. for use as input to a debugging aid\nB. to increase the run-time efficiency of the program\nC. for the reduction of the symbol-table space needed by the compiler\nD. to tell the loader where each variable belongs\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.6326341032981873,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.6326341032981873
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6326341032981873,
              "max_token_negative_log_likelihood": 0.6326341032981873,
              "predictive_entropy": 0.3360493779182434,
              "shannon_entropy": 0.6915688514709473
            }
          }
        ],
        "cached": false,
        "request_time": 0.5143132209777832,
        "request_datetime": 1755797638
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Sometimes da object module produced by a compiler includes information (from da symbol table) mapping alll source program names to their addresses. Da most likely purpose of dis information is"
        },
        "references": [
          {
            "output": {
              "text": "for use as input to a debugging aid"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "to increase da run-time efficiency of da program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "for da reduction of da symbol-table space needed by da compiler"
            },
            "tags": []
          },
          {
            "output": {
              "text": "to tell da loader where each variable belongs"
            },
            "tags": []
          }
        ],
        "split": "valid",
        "id": "id5",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Sometimes the object module produced by a compiler includes information (from the symbol table) mapping all source program names to their addresses. The most likely purpose of this information is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "for use as input to a debugging aid",
        "B": "to increase da run-time efficiency of da program",
        "C": "for da reduction of da symbol-table space needed by da compiler",
        "D": "to tell da loader where each variable belongs"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Sometimes da object module produced by a compiler includes information (from da symbol table) mapping alll source program names to their addresses. Da most likely purpose of dis information is\nA. for use as input to a debugging aid\nB. to increase da run-time efficiency of da program\nC. for da reduction of da symbol-table space needed by da compiler\nD. to tell da loader where each variable belongs\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0031805664766579866,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0031805664766579866
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0031805497128516436,
              "max_token_negative_log_likelihood": 0.0031805497128516436,
              "predictive_entropy": 0.003170449985191226,
              "shannon_entropy": 0.021460305899381638
            }
          }
        ],
        "cached": false,
        "request_time": 0.5295157432556152,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of the following, which best approximates the ratio of the number of nonterminal nodes to the total number of nodes in a complete K-ary tree of depth N?"
        },
        "references": [
          {
            "output": {
              "text": "1/K"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "K-1/K"
            },
            "tags": []
          },
          {
            "output": {
              "text": "log_10 (1/N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "N-1/m"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id39"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/K",
        "B": "K-1/K",
        "C": "log_10 (1/N)",
        "D": "N-1/m"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of the following, which best approximates the ratio of the number of nonterminal nodes to the total number of nodes in a complete K-ary tree of depth N?\nA. 1/K\nB. K-1/K\nC. log_10 (1/N)\nD. N-1/m\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.001013480476103723,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.001013480476103723
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0010134943295270205,
              "max_token_negative_log_likelihood": 0.0010134943295270205,
              "predictive_entropy": 0.0010124676628038287,
              "shannon_entropy": 0.008723115548491478
            }
          }
        ],
        "cached": false,
        "request_time": 0.5168576240539551,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "of  the   following, which   best  approximates the   ratio of  the  number   of   nonterminal  nodes   to the total  number of   nodes in  a  complete   k-ary   tree of  depth n?"
        },
        "references": [
          {
            "output": {
              "text": "1/K"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "K-1/K"
            },
            "tags": []
          },
          {
            "output": {
              "text": "log_10 (1/N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "N-1/m"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id39",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which best approximates the ratio of the number of nonterminal nodes to the total number of nodes in a complete K-ary tree of depth N?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/K",
        "B": "K-1/K",
        "C": "log_10 (1/N)",
        "D": "N-1/m"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: of  the   following, which   best  approximates the   ratio of  the  number   of   nonterminal  nodes   to the total  number of   nodes in  a  complete   k-ary   tree of  depth n?\nA. 1/K\nB. K-1/K\nC. log_10 (1/N)\nD. N-1/m\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.0006731866160407662,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.0006731866160407662
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0006731629837304354,
              "max_token_negative_log_likelihood": 0.0006731629837304354,
              "predictive_entropy": 0.0006727100117132068,
              "shannon_entropy": 0.005628722719848156
            }
          }
        ],
        "cached": false,
        "request_time": 0.5276494026184082,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of da following, which best approximates da ratio of da number of nonterminal nodes to da total number of nodes in a complete K-ary tree of depth N?"
        },
        "references": [
          {
            "output": {
              "text": "1/K"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "K-1/K"
            },
            "tags": []
          },
          {
            "output": {
              "text": "log_10 (1/N)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "N-1/m"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id39",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which best approximates the ratio of the number of nonterminal nodes to the total number of nodes in a complete K-ary tree of depth N?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/K",
        "B": "K-1/K",
        "C": "log_10 (1/N)",
        "D": "N-1/m"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of da following, which best approximates da ratio of da number of nonterminal nodes to da total number of nodes in a complete K-ary tree of depth N?\nA. 1/K\nB. K-1/K\nC. log_10 (1/N)\nD. N-1/m\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.0006191005813889205,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.0006191005813889205
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0006191262509673834,
              "max_token_negative_log_likelihood": 0.0006191262509673834,
              "predictive_entropy": 0.00061874306993559,
              "shannon_entropy": 0.005804143380373716
            }
          }
        ],
        "cached": false,
        "request_time": 0.5155329704284668,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The language {ww | w in (0 + 1)*} is"
        },
        "references": [
          {
            "output": {
              "text": "not accepted by any Turing machine"
            },
            "tags": []
          },
          {
            "output": {
              "text": "accepted by some Turing machine, but by no pushdown automaton"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "accepted by some pushdown automaton, but not context-free"
            },
            "tags": []
          },
          {
            "output": {
              "text": "context-free, but not regular"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id33"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "not accepted by any Turing machine",
        "B": "accepted by some Turing machine, but by no pushdown automaton",
        "C": "accepted by some pushdown automaton, but not context-free",
        "D": "context-free, but not regular"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The language {ww | w in (0 + 1)*} is\nA. not accepted by any Turing machine\nB. accepted by some Turing machine, but by no pushdown automaton\nC. accepted by some pushdown automaton, but not context-free\nD. context-free, but not regular\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.011047743260860443,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.011047743260860443
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0110477264970541,
              "max_token_negative_log_likelihood": 0.0110477264970541,
              "predictive_entropy": 0.01092634629458189,
              "shannon_entropy": 0.06048908457159996
            }
          }
        ],
        "cached": false,
        "request_time": 0.5253844261169434,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "the language {ww  |   w  in   (0   +   1)*}   is"
        },
        "references": [
          {
            "output": {
              "text": "not accepted by any Turing machine"
            },
            "tags": []
          },
          {
            "output": {
              "text": "accepted by some Turing machine, but by no pushdown automaton"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "accepted by some pushdown automaton, but not context-free"
            },
            "tags": []
          },
          {
            "output": {
              "text": "context-free, but not regular"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id33",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "The language {ww | w in (0 + 1)*} is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "not accepted by any Turing machine",
        "B": "accepted by some Turing machine, but by no pushdown automaton",
        "C": "accepted by some pushdown automaton, but not context-free",
        "D": "context-free, but not regular"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: the language {ww  |   w  in   (0   +   1)*}   is\nA. not accepted by any Turing machine\nB. accepted by some Turing machine, but by no pushdown automaton\nC. accepted by some pushdown automaton, but not context-free\nD. context-free, but not regular\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0017021704697981477,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0017021704697981477
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0017021471867337823,
              "max_token_negative_log_likelihood": 0.0017021471867337823,
              "predictive_entropy": 0.0016992524033412337,
              "shannon_entropy": 0.012544260360300541
            }
          }
        ],
        "cached": false,
        "request_time": 0.4985201358795166,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The language {ww | wid in (0 + 1)*} is"
        },
        "references": [
          {
            "output": {
              "text": "not accepted by any Turing machine"
            },
            "tags": []
          },
          {
            "output": {
              "text": "accepted by sum Turing machine, but by no pushdown automaton"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "accepted by sum pushdown automaton, but not context-free"
            },
            "tags": []
          },
          {
            "output": {
              "text": "context-free, but not regular"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id33",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "The language {ww | w in (0 + 1)*} is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "not accepted by any Turing machine",
        "B": "accepted by sum Turing machine, but by no pushdown automaton",
        "C": "accepted by sum pushdown automaton, but not context-free",
        "D": "context-free, but not regular"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The language {ww | wid in (0 + 1)*} is\nA. not accepted by any Turing machine\nB. accepted by sum Turing machine, but by no pushdown automaton\nC. accepted by sum pushdown automaton, but not context-free\nD. context-free, but not regular\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.094851016998291,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.094851016998291
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.094851016998291,
              "max_token_negative_log_likelihood": 1.094851016998291,
              "predictive_entropy": 0.36632558703422546,
              "shannon_entropy": 0.6373813152313232
            }
          }
        ],
        "cached": false,
        "request_time": 0.5258595943450928,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "For a connected, undirected graph G = (V, E), which of the following must be true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex with degree 1."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id60"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: For a connected, undirected graph G = (V, E), which of the following must be true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex with degree 1.\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 4.898155658850101e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5090224742889404,
        "request_datetime": 1755797639
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "for a conected,   undirected   graph   g   =   (v,   e), which  of   the following  must  be   true?\ni.  \u03c3_{v\u2208v} degree(v) is   even.\nii.  |e|   \u2265   |v| \u2212  1\niii.   g has  at  least one vertex with  degree   1."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id60",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "For a connected, undirected graph G = (V, E), which of the following must be true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex with degree 1."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: for a conected,   undirected   graph   g   =   (v,   e), which  of   the following  must  be   true?\ni.  \u03c3_{v\u2208v} degree(v) is   even.\nii.  |e|   \u2265   |v| \u2212  1\niii.   g has  at  least one vertex with  degree   1.\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.00263569806702435,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.00263569806702435
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0026356710586696863,
              "max_token_negative_log_likelihood": 0.0026356710586696863,
              "predictive_entropy": 0.002628733403980732,
              "shannon_entropy": 0.01826893910765648
            }
          }
        ],
        "cached": false,
        "request_time": 0.5309610366821289,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "For a connected, undirected graph G = (V, E), which of da following must b true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex witt degree 1."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id60",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "For a connected, undirected graph G = (V, E), which of the following must be true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex with degree 1."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: For a connected, undirected graph G = (V, E), which of da following must b true?\nI. \u03a3_{v\u2208V} degree(v) is even.\nII. |E| \u2265 |V| \u2212 1\nIII. G has at least one vertex witt degree 1.\nA. I only\nB. II only\nC. III only\nD. I and II\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 5.598399077655358e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5063028335571289,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of the following, which best characterizes computers that use memory-mapped I/O?"
        },
        "references": [
          {
            "output": {
              "text": "The computer provides special instructions for manipulating I/O ports."
            },
            "tags": []
          },
          {
            "output": {
              "text": "I/O ports are placed at addresses on the bus and are accessed just like other memory locations."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id55"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The computer provides special instructions for manipulating I/O ports.",
        "B": "I/O ports are placed at addresses on the bus and are accessed just like other memory locations.",
        "C": "To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation.",
        "D": "Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of the following, which best characterizes computers that use memory-mapped I/O?\nA. The computer provides special instructions for manipulating I/O ports.\nB. I/O ports are placed at addresses on the bus and are accessed just like other memory locations.\nC. To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation.\nD. Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 7.981896810171918e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5379438400268555,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "of the following,  which  best   characterizes  computers  that use   memory-mapped i/o?"
        },
        "references": [
          {
            "output": {
              "text": "The computer provides special instructions for manipulating I/O ports."
            },
            "tags": []
          },
          {
            "output": {
              "text": "I/O ports are placed at addresses on the bus and are accessed just like other memory locations."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id55",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which best characterizes computers that use memory-mapped I/O?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The computer provides special instructions for manipulating I/O ports.",
        "B": "I/O ports are placed at addresses on the bus and are accessed just like other memory locations.",
        "C": "To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation.",
        "D": "Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: of the following,  which  best   characterizes  computers  that use   memory-mapped i/o?\nA. The computer provides special instructions for manipulating I/O ports.\nB. I/O ports are placed at addresses on the bus and are accessed just like other memory locations.\nC. To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation.\nD. Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 7.164364934642009e-11
            }
          }
        ],
        "cached": false,
        "request_time": 0.5203053951263428,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of da following, which best characterizes computers dat use memory-mapped I/O?"
        },
        "references": [
          {
            "output": {
              "text": "The computer provides special instructions fa manipulating I/O ports."
            },
            "tags": []
          },
          {
            "output": {
              "text": "I/O ports r placed at addresses on da bus and r accessed jus like other memory locations."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "To perform an I/O operation, it is sufficient to place da data in an address register and call da channel to perform da operation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ports r referenced only by memory-mapped instructions of da computer and r located at hardwired memory locations."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id55",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Of the following, which best characterizes computers that use memory-mapped I/O?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The computer provides special instructions fa manipulating I/O ports.",
        "B": "I/O ports r placed at addresses on da bus and r accessed jus like other memory locations.",
        "C": "To perform an I/O operation, it is sufficient to place da data in an address register and call da channel to perform da operation.",
        "D": "Ports r referenced only by memory-mapped instructions of da computer and r located at hardwired memory locations."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of da following, which best characterizes computers dat use memory-mapped I/O?\nA. The computer provides special instructions fa manipulating I/O ports.\nB. I/O ports r placed at addresses on da bus and r accessed jus like other memory locations.\nC. To perform an I/O operation, it is sufficient to place da data in an address register and call da channel to perform da operation.\nD. Ports r referenced only by memory-mapped instructions of da computer and r located at hardwired memory locations.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.119968828788842e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5359580516815186,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The access matrix approach to protection has the difficulty that"
        },
        "references": [
          {
            "output": {
              "text": "the matrix, if stored directly, is large and can be clumsy to manage"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "it is not capable of expressing complex protection requirements"
            },
            "tags": []
          },
          {
            "output": {
              "text": "deciding whether a process has access to a resource is undecidable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "there is no way to express who has rights to change the access matrix itself"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id16"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "the matrix, if stored directly, is large and can be clumsy to manage",
        "B": "it is not capable of expressing complex protection requirements",
        "C": "deciding whether a process has access to a resource is undecidable",
        "D": "there is no way to express who has rights to change the access matrix itself"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The access matrix approach to protection has the difficulty that\nA. the matrix, if stored directly, is large and can be clumsy to manage\nB. it is not capable of expressing complex protection requirements\nC. deciding whether a process has access to a resource is undecidable\nD. there is no way to express who has rights to change the access matrix itself\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0020528212189674377,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0020528212189674377
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0020528032910078764,
              "max_token_negative_log_likelihood": 0.0020528032910078764,
              "predictive_entropy": 0.0020485937129706144,
              "shannon_entropy": 0.014741780236363411
            }
          }
        ],
        "cached": false,
        "request_time": 0.5013420581817627,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "the   access  matrix   approach  to protection   has   the  difficulty that"
        },
        "references": [
          {
            "output": {
              "text": "the matrix, if stored directly, is large and can be clumsy to manage"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "it is not capable of expressing complex protection requirements"
            },
            "tags": []
          },
          {
            "output": {
              "text": "deciding whether a process has access to a resource is undecidable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "there is no way to express who has rights to change the access matrix itself"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id16",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "The access matrix approach to protection has the difficulty that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "the matrix, if stored directly, is large and can be clumsy to manage",
        "B": "it is not capable of expressing complex protection requirements",
        "C": "deciding whether a process has access to a resource is undecidable",
        "D": "there is no way to express who has rights to change the access matrix itself"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: the   access  matrix   approach  to protection   has   the  difficulty that\nA. the matrix, if stored directly, is large and can be clumsy to manage\nB. it is not capable of expressing complex protection requirements\nC. deciding whether a process has access to a resource is undecidable\nD. there is no way to express who has rights to change the access matrix itself\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -2.4318398573086597e-05,
            "tokens": [
              {
                "text": "A",
                "logprob": -2.4318398573086597e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.4318991563632153e-05,
              "max_token_negative_log_likelihood": 2.4318991563632153e-05,
              "predictive_entropy": 2.4318400392076e-05,
              "shannon_entropy": 0.00028250188915990293
            }
          }
        ],
        "cached": false,
        "request_time": 0.5298478603363037,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "The access matrix approach to protection has da difficulty that"
        },
        "references": [
          {
            "output": {
              "text": "the matrix, if stored directly, is bigass and can b clumsy to manage"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "it is not capable of expressing complex protection requirements"
            },
            "tags": []
          },
          {
            "output": {
              "text": "deciding whether a process has access to a resource is undecidable"
            },
            "tags": []
          },
          {
            "output": {
              "text": "there is no way to express who has rights to change da access matrix itself"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id16",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "The access matrix approach to protection has the difficulty that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "the matrix, if stored directly, is bigass and can b clumsy to manage",
        "B": "it is not capable of expressing complex protection requirements",
        "C": "deciding whether a process has access to a resource is undecidable",
        "D": "there is no way to express who has rights to change da access matrix itself"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: The access matrix approach to protection has da difficulty that\nA. the matrix, if stored directly, is bigass and can b clumsy to manage\nB. it is not capable of expressing complex protection requirements\nC. deciding whether a process has access to a resource is undecidable\nD. there is no way to express who has rights to change da access matrix itself\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.3672421872615814,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.3672421872615814
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3672422170639038,
              "max_token_negative_log_likelihood": 0.3672422170639038,
              "predictive_entropy": 0.25436732172966003,
              "shannon_entropy": 0.6169720888137817
            }
          }
        ],
        "cached": false,
        "request_time": 0.5144796371459961,
        "request_datetime": 1755797640
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about horizontal versus vertical microarchitecture is (are) true?\nI. Programs for horizontal architectures require more time steps than those for vertical architectures.\nII. Horizontal microinstructions are unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id67"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about horizontal versus vertical microarchitecture is (are) true?\nI. Programs for horizontal architectures require more time steps than those for vertical architectures.\nII. Horizontal microinstructions are unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.077303164100158e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5312154293060303,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of   the following   statements  about horizontal versus   vertical microarchitecture   is   (are)  true?\ni.   programs  for  horizontal   architechtures require  more time steps tahn  those  for vertical architectures.\nii. horizontal  microinstructions are  unencoded.\niii.  horizontal  microinstructions  ususally  have a  single  opcode   and  multiple   operand specifiers."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id67",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about horizontal versus vertical microarchitecture is (are) true?\nI. Programs for horizontal architectures require more time steps than those for vertical architectures.\nII. Horizontal microinstructions are unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of   the following   statements  about horizontal versus   vertical microarchitecture   is   (are)  true?\ni.   programs  for  horizontal   architechtures require  more time steps tahn  those  for vertical architectures.\nii. horizontal  microinstructions are  unencoded.\niii.  horizontal  microinstructions  ususally  have a  single  opcode   and  multiple   operand specifiers.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.4929169083188754e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5161170959472656,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements bou horizontal versus vertical microarchitecture is (r) tru?\nI. Programs fir horizontal architectures require more time steps den those fir vertical architectures.\nII. Horizontal microinstructions r unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id67",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about horizontal versus vertical microarchitecture is (are) true?\nI. Programs for horizontal architectures require more time steps than those for vertical architectures.\nII. Horizontal microinstructions are unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements bou horizontal versus vertical microarchitecture is (r) tru?\nI. Programs fir horizontal architectures require more time steps den those fir vertical architectures.\nII. Horizontal microinstructions r unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers.\nA. I only\nB. II only\nC. III only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -3.576278118089249e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -3.576278118089249e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.576279254957626e-07,
              "max_token_negative_log_likelihood": 3.576279254957626e-07,
              "predictive_entropy": 3.5762778338721546e-07,
              "shannon_entropy": 5.98895485381945e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5363016128540039,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, the process has exclusive use of that resource until it is released. If a process requests a resource that is already in use, the process enters a queue for that resource, waiting until the resource is available. Which of the following will NOT deal effectively with the problem of deadlock?"
        },
        "references": [
          {
            "output": {
              "text": "Giving priorities to processes and ordering the wait queues by priority"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Numbering the resources and requiring that processes request resources in order of increasing number"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Having processes time out and restart after a random interval of waiting"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id40"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Giving priorities to processes and ordering the wait queues by priority",
        "B": "Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all",
        "C": "Numbering the resources and requiring that processes request resources in order of increasing number",
        "D": "Having processes time out and restart after a random interval of waiting"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, the process has exclusive use of that resource until it is released. If a process requests a resource that is already in use, the process enters a queue for that resource, waiting until the resource is available. Which of the following will NOT deal effectively with the problem of deadlock?\nA. Giving priorities to processes and ordering the wait queues by priority\nB. Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all\nC. Numbering the resources and requiring that processes request resources in order of increasing number\nD. Having processes time out and restart after a random interval of waiting\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.264974000354414e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.264974000354414e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.2649790025752736e-06,
              "max_token_negative_log_likelihood": 2.2649790025752736e-06,
              "predictive_entropy": 2.2649737729807384e-06,
              "shannon_entropy": 3.334457869641483e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5243344306945801,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "consider  a   computer system  in which processes   can   request and  release  one   or more resources. once   a process  has been granted a   resource, the process  has exclusive  use  of   that resource   until   it's released.   if a  process  requests a  resource that's   allready  in  uise,   the   process   enters a  queue  for   that resource,  waiting until the   resource   is  available.  which of   the following won't  dael   effectively with   the   problem  of   deadlock?"
        },
        "references": [
          {
            "output": {
              "text": "Giving priorities to processes and ordering the wait queues by priority"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Numbering the resources and requiring that processes request resources in order of increasing number"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Having processes time out and restart after a random interval of waiting"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id40",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, the process has exclusive use of that resource until it is released. If a process requests a resource that is already in use, the process enters a queue for that resource, waiting until the resource is available. Which of the following will NOT deal effectively with the problem of deadlock?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Giving priorities to processes and ordering the wait queues by priority",
        "B": "Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all",
        "C": "Numbering the resources and requiring that processes request resources in order of increasing number",
        "D": "Having processes time out and restart after a random interval of waiting"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: consider  a   computer system  in which processes   can   request and  release  one   or more resources. once   a process  has been granted a   resource, the process  has exclusive  use  of   that resource   until   it's released.   if a  process  requests a  resource that's   allready  in  uise,   the   process   enters a  queue  for   that resource,  waiting until the   resource   is  available.  which of   the following won't  dael   effectively with   the   problem  of   deadlock?\nA. Giving priorities to processes and ordering the wait queues by priority\nB. Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all\nC. Numbering the resources and requiring that processes request resources in order of increasing number\nD. Having processes time out and restart after a random interval of waiting\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -6.9141146923357155e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -6.9141146923357155e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 6.9141628955549095e-06,
              "max_token_negative_log_likelihood": 6.9141628955549095e-06,
              "predictive_entropy": 6.914115147083066e-06,
              "shannon_entropy": 9.437430708203465e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5545213222503662,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, da process has exclusive use of dat resource untill it is released. If a process requests a resource dat is already in use, da process enters a queue fa that resource, waitin until da resource is available. Which of da following gon NOT deal effectively wit the problem of deadlock?"
        },
        "references": [
          {
            "output": {
              "text": "Giving priorities to processes and ordering da wait queues by priority"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Having a process request alll its required resources when it first begins, and restarting if it cannot obtain em all"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Numbering da resources and requiring dat processes request resources in order of increasing number"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Having processes time outt and restart after a random interval of waiting"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id40",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, the process has exclusive use of that resource until it is released. If a process requests a resource that is already in use, the process enters a queue for that resource, waiting until the resource is available. Which of the following will NOT deal effectively with the problem of deadlock?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Giving priorities to processes and ordering da wait queues by priority",
        "B": "Having a process request alll its required resources when it first begins, and restarting if it cannot obtain em all",
        "C": "Numbering da resources and requiring dat processes request resources in order of increasing number",
        "D": "Having processes time outt and restart after a random interval of waiting"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, da process has exclusive use of dat resource untill it is released. If a process requests a resource dat is already in use, da process enters a queue fa that resource, waitin until da resource is available. Which of da following gon NOT deal effectively wit the problem of deadlock?\nA. Giving priorities to processes and ordering da wait queues by priority\nB. Having a process request alll its required resources when it first begins, and restarting if it cannot obtain em all\nC. Numbering da resources and requiring dat processes request resources in order of increasing number\nD. Having processes time outt and restart after a random interval of waiting\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.145764938177308e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.145764938177308e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.145769485650817e-06,
              "max_token_negative_log_likelihood": 2.145769485650817e-06,
              "predictive_entropy": 2.145764938177308e-06,
              "shannon_entropy": 3.266069325036369e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.507652997970581,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys are integers, and the hash function h(i) = i mod 5 is used, with linear resolution of collisions (i.e., if bucket h(i) is filled, the buckets h(i) + 1, h(i) + 2, ... are tried successively with all bucket numbers computed modulo 5). If elements with keys 13, 8, 24, 10, and 3 are inserted, m that order, into an initially blank hash table, then the content of the bucket numbered 2 is"
        },
        "references": [
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "8"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "13"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id28"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "3",
        "B": "8",
        "C": "10",
        "D": "13"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys are integers, and the hash function h(i) = i mod 5 is used, with linear resolution of collisions (i.e., if bucket h(i) is filled, the buckets h(i) + 1, h(i) + 2, ... are tried successively with all bucket numbers computed modulo 5). If elements with keys 13, 8, 24, 10, and 3 are inserted, m that order, into an initially blank hash table, then the content of the bucket numbered 2 is\nA. 3\nB. 8\nC. 10\nD. 13\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.27707532048225403,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.27707532048225403
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.27707532048225403,
              "max_token_negative_log_likelihood": 0.27707532048225403,
              "predictive_entropy": 0.21002237498760223,
              "shannon_entropy": 0.7893198728561401
            }
          }
        ],
        "cached": false,
        "request_time": 0.5939507484436035,
        "request_datetime": 1755797641
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "an internal   hash table  has  5   buckets, numbered   0, 1,   2,   3,  4.  keys are integers,  and the  hash   funtion h(i)   =  i  mod   5 is  used,   with  linear   resolution   of collisions   (i.e.,   if   bucket  h(i)  is   filled, teh   buckets   h(i)   + 1,   h(i)  +  2, ... are tried successively  with  all   bucket   munbers  computed  modulo  5).   if elements with   keys  13, 8,  24, 10,   and   3 are   inserted, m  that order,  into an   initially   blank hash table, then the content  of  the bucket  numbered 2 is"
        },
        "references": [
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "8"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "13"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id28",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys are integers, and the hash function h(i) = i mod 5 is used, with linear resolution of collisions (i.e., if bucket h(i) is filled, the buckets h(i) + 1, h(i) + 2, ... are tried successively with all bucket numbers computed modulo 5). If elements with keys 13, 8, 24, 10, and 3 are inserted, m that order, into an initially blank hash table, then the content of the bucket numbered 2 is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "3",
        "B": "8",
        "C": "10",
        "D": "13"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: an internal   hash table  has  5   buckets, numbered   0, 1,   2,   3,  4.  keys are integers,  and the  hash   funtion h(i)   =  i  mod   5 is  used,   with  linear   resolution   of collisions   (i.e.,   if   bucket  h(i)  is   filled, teh   buckets   h(i)   + 1,   h(i)  +  2, ... are tried successively  with  all   bucket   munbers  computed  modulo  5).   if elements with   keys  13, 8,  24, 10,   and   3 are   inserted, m  that order,  into an   initially   blank hash table, then the content  of  the bucket  numbered 2 is\nA. 3\nB. 8\nC. 10\nD. 13\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.3038005828857422,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.3038005828857422
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3038005828857422,
              "max_token_negative_log_likelihood": 0.3038005828857422,
              "predictive_entropy": 0.22420726716518402,
              "shannon_entropy": 0.8416436314582825
            }
          }
        ],
        "cached": false,
        "request_time": 0.5575301647186279,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys r integers, and da hash function h(i) = i mod 5 is used, wid linear resolution of collisions (i.e., if bucket h(i) is filled, da buckets h(i) + 1, h(i) + 2, ... r tried successively w all bucket numbers computed modulo 5). If elements w/ keys 13, 8, 24, 10, and 3 r inserted, m dat order, into an initially blank hash table, then da content of da bucket numbered 2 is"
        },
        "references": [
          {
            "output": {
              "text": "3"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "8"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10"
            },
            "tags": []
          },
          {
            "output": {
              "text": "13"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id28",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys are integers, and the hash function h(i) = i mod 5 is used, with linear resolution of collisions (i.e., if bucket h(i) is filled, the buckets h(i) + 1, h(i) + 2, ... are tried successively with all bucket numbers computed modulo 5). If elements with keys 13, 8, 24, 10, and 3 are inserted, m that order, into an initially blank hash table, then the content of the bucket numbered 2 is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "3",
        "B": "8",
        "C": "10",
        "D": "13"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys r integers, and da hash function h(i) = i mod 5 is used, wid linear resolution of collisions (i.e., if bucket h(i) is filled, da buckets h(i) + 1, h(i) + 2, ... r tried successively w all bucket numbers computed modulo 5). If elements w/ keys 13, 8, 24, 10, and 3 r inserted, m dat order, into an initially blank hash table, then da content of da bucket numbered 2 is\nA. 3\nB. 8\nC. 10\nD. 13\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.2956867218017578,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.2956867218017578
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2956866025924683,
              "max_token_negative_log_likelihood": 1.2956866025924683,
              "predictive_entropy": 0.35464221239089966,
              "shannon_entropy": 1.288747787475586
            }
          }
        ],
        "cached": false,
        "request_time": 0.5978899002075195,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following comes closest to being a perfectly secure encryption scheme?"
        },
        "references": [
          {
            "output": {
              "text": "The Caesar Cipher, a substitution cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "DES (Data Encryption Standard), a symmetric-key algorithm"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Enigma, a transposition cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "One-time pad"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id36"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The Caesar Cipher, a substitution cipher",
        "B": "DES (Data Encryption Standard), a symmetric-key algorithm",
        "C": "Enigma, a transposition cipher",
        "D": "One-time pad"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following comes closest to being a perfectly secure encryption scheme?\nA. The Caesar Cipher, a substitution cipher\nB. DES (Data Encryption Standard), a symmetric-key algorithm\nC. Enigma, a transposition cipher\nD. One-time pad\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.837903351377463e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5775182247161865,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "whihc   of the   following  comes   closest to   being   a perfectly   secure   encryption scheme?"
        },
        "references": [
          {
            "output": {
              "text": "The Caesar Cipher, a substitution cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "DES (Data Encryption Standard), a symmetric-key algorithm"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Enigma, a transposition cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "One-time pad"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id36",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following comes closest to being a perfectly secure encryption scheme?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The Caesar Cipher, a substitution cipher",
        "B": "DES (Data Encryption Standard), a symmetric-key algorithm",
        "C": "Enigma, a transposition cipher",
        "D": "One-time pad"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: whihc   of the   following  comes   closest to   being   a perfectly   secure   encryption scheme?\nA. The Caesar Cipher, a substitution cipher\nB. DES (Data Encryption Standard), a symmetric-key algorithm\nC. Enigma, a transposition cipher\nD. One-time pad\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.3841855067985307e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.3841855067985307e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.3841860752327193e-07,
              "max_token_negative_log_likelihood": 2.3841860752327193e-07,
              "predictive_entropy": 2.3841855067985307e-07,
              "shannon_entropy": 4.195218934910372e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5510435104370117,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following comes closest to bein a perfectly secure encryption scheme?"
        },
        "references": [
          {
            "output": {
              "text": "The Caesar Cipher, a substitution cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "DES (Data Encryption Standard), a symmetric-key algorithm"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Enigma, a transposition cipher"
            },
            "tags": []
          },
          {
            "output": {
              "text": "One-time pad"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id36",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following comes closest to being a perfectly secure encryption scheme?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "The Caesar Cipher, a substitution cipher",
        "B": "DES (Data Encryption Standard), a symmetric-key algorithm",
        "C": "Enigma, a transposition cipher",
        "D": "One-time pad"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following comes closest to bein a perfectly secure encryption scheme?\nA. The Caesar Cipher, a substitution cipher\nB. DES (Data Encryption Standard), a symmetric-key algorithm\nC. Enigma, a transposition cipher\nD. One-time pad\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 2.2593308131035883e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.538527250289917,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let T be a depth-first search tree of a connected undirected graph G. For each vertex v of T, let pre(v) be the number of nodes visited up to and including v during a preorder traversal of T, and post(v) be the number of nodes visited up to and including v during a postorder traversal of T. The lowest common ancestor of vertices u and v in T is a vertex w of T such that w is an ancestor of both u and v, and no child of w is an ancestor of both u and v. Let (u, v) be an edge in G that is not in T, such that pre(u) < pre(v). Which of the following statements about u and v must be true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If w is the lowest common ancestor of u and v in T, then w = u."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id76"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let T be a depth-first search tree of a connected undirected graph G. For each vertex v of T, let pre(v) be the number of nodes visited up to and including v during a preorder traversal of T, and post(v) be the number of nodes visited up to and including v during a postorder traversal of T. The lowest common ancestor of vertices u and v in T is a vertex w of T such that w is an ancestor of both u and v, and no child of w is an ancestor of both u and v. Let (u, v) be an edge in G that is not in T, such that pre(u) < pre(v). Which of the following statements about u and v must be true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If w is the lowest common ancestor of u and v in T, then w = u.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.45578986406326294,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.45578986406326294
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.45578980445861816,
              "max_token_negative_log_likelihood": 0.45578980445861816,
              "predictive_entropy": 0.28894659876823425,
              "shannon_entropy": 0.6825751066207886
            }
          }
        ],
        "cached": false,
        "request_time": 0.5849056243896484,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let  t be  a depth-first  search  tree  of  a conected  undirected  graph  g.   for each  vertex  v   of   t,   let  pre(v)  be  the number of   nodes   visited   up  to anbd  including  v during a preorder  traversal   of   t,   and   post(v) be  the number  of  nodes  visited   up to and  including  v   during   a   postorder traversal of   t. the  lowest common ancestor   of   vertices   u  and v   in  t  is  a  vertex   w  of t  such   taht w is  an ancestor   of   both  u   and   v,  and  no   child  of w  is   an ancestor of   both u and  v.  let (u,  v) be  an edge  in  g   that's   not in  t, such  that pre(u)   < pre(v). which   of  the following   statements boaut   u   and   v must be true?\ni.   post(u) <  post(v)\nii.   u is  an   ancestor   of  v in   t.\niii.   if  w is   the lowest   common  ancestor  of  u   adn  v in   t,   then   w =   u."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id76",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let T be a depth-first search tree of a connected undirected graph G. For each vertex v of T, let pre(v) be the number of nodes visited up to and including v during a preorder traversal of T, and post(v) be the number of nodes visited up to and including v during a postorder traversal of T. The lowest common ancestor of vertices u and v in T is a vertex w of T such that w is an ancestor of both u and v, and no child of w is an ancestor of both u and v. Let (u, v) be an edge in G that is not in T, such that pre(u) < pre(v). Which of the following statements about u and v must be true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If w is the lowest common ancestor of u and v in T, then w = u."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let  t be  a depth-first  search  tree  of  a conected  undirected  graph  g.   for each  vertex  v   of   t,   let  pre(v)  be  the number of   nodes   visited   up  to anbd  including  v during a preorder  traversal   of   t,   and   post(v) be  the number  of  nodes  visited   up to and  including  v   during   a   postorder traversal of   t. the  lowest common ancestor   of   vertices   u  and v   in  t  is  a  vertex   w  of t  such   taht w is  an ancestor   of   both  u   and   v,  and  no   child  of w  is   an ancestor of   both u and  v.  let (u,  v) be  an edge  in  g   that's   not in  t, such  that pre(u)   < pre(v). which   of  the following   statements boaut   u   and   v must be true?\ni.   post(u) <  post(v)\nii.   u is  an   ancestor   of  v in   t.\niii.   if  w is   the lowest   common  ancestor  of  u   adn  v in   t,   then   w =   u.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.15664082765579224,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.15664082765579224
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15664082765579224,
              "max_token_negative_log_likelihood": 0.15664082765579224,
              "predictive_entropy": 0.13392964005470276,
              "shannon_entropy": 0.43702495098114014
            }
          }
        ],
        "cached": false,
        "request_time": 0.567051887512207,
        "request_datetime": 1755797642
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let T b a depth-first search tree of a connected undirected graph G. Fir each vertex v of T, let pre(v) b the number of nodes visited up to and including v durin a preorder traversal of T, and post(v) b the number of nodes visited up to and including v durin a postorder traversal of T. Da lowest common ancestor of vertices u and v in T is a vertex wit of T such dat w is an ancestor of both u and v, and no child of wid is an ancestor of both u and v. Let (u, v) b an edge in G dat is not in T, such dat pre(u) < pre(v). Which of da following statements bou u and v must b true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If wit is da lowest common ancestor of u and v in T, then wid = u."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id76",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let T be a depth-first search tree of a connected undirected graph G. For each vertex v of T, let pre(v) be the number of nodes visited up to and including v during a preorder traversal of T, and post(v) be the number of nodes visited up to and including v during a postorder traversal of T. The lowest common ancestor of vertices u and v in T is a vertex w of T such that w is an ancestor of both u and v, and no child of w is an ancestor of both u and v. Let (u, v) be an edge in G that is not in T, such that pre(u) < pre(v). Which of the following statements about u and v must be true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If w is the lowest common ancestor of u and v in T, then w = u."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let T b a depth-first search tree of a connected undirected graph G. Fir each vertex v of T, let pre(v) b the number of nodes visited up to and including v durin a preorder traversal of T, and post(v) b the number of nodes visited up to and including v durin a postorder traversal of T. Da lowest common ancestor of vertices u and v in T is a vertex wit of T such dat w is an ancestor of both u and v, and no child of wid is an ancestor of both u and v. Let (u, v) b an edge in G dat is not in T, such dat pre(u) < pre(v). Which of da following statements bou u and v must b true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If wit is da lowest common ancestor of u and v in T, then wid = u.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.005540846846997738,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.005540846846997738
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.005540851503610611,
              "max_token_negative_log_likelihood": 0.005540851503610611,
              "predictive_entropy": 0.005510235205292702,
              "shannon_entropy": 0.03618120402097702
            }
          }
        ],
        "cached": false,
        "request_time": 0.6037874221801758,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following decimal numbers has an exact representation in binary notation?"
        },
        "references": [
          {
            "output": {
              "text": "0.1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.5"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id62"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.1",
        "B": "0.2",
        "C": "0.3",
        "D": "0.5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following decimal numbers has an exact representation in binary notation?\nA. 0.1\nB. 0.2\nC. 0.3\nD. 0.5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.887208895823278e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5814762115478516,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of the following decimal   numbers   has an   exact   representation in   binary   notation?"
        },
        "references": [
          {
            "output": {
              "text": "0.1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.5"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id62",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following decimal numbers has an exact representation in binary notation?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.1",
        "B": "0.2",
        "C": "0.3",
        "D": "0.5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of the following decimal   numbers   has an   exact   representation in   binary   notation?\nA. 0.1\nB. 0.2\nC. 0.3\nD. 0.5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.8353952668803686e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5409190654754639,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following decimal numbers has an exact representation in binary notation?"
        },
        "references": [
          {
            "output": {
              "text": "0.1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0.5"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id62",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following decimal numbers has an exact representation in binary notation?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.1",
        "B": "0.2",
        "C": "0.3",
        "D": "0.5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following decimal numbers has an exact representation in binary notation?\nA. 0.1\nB. 0.2\nC. 0.3\nD. 0.5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 2.692526777536841e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.522233247756958,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two computers communicate with each other by sending data packets across a local area network. The size of these packets is 1,000 bytes. The network has the capacity to carry 1,000 packets per second. The CPU time required to execute the network protocol to send one packet is 10 milliseconds. The maximum rate at which one computer can send data to another is approximately"
        },
        "references": [
          {
            "output": {
              "text": "10,000 bytes/second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25,000 bytes/ second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100,000 bytes/ second"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "500,000 bytes/ second"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id89"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "10,000 bytes/second",
        "B": "25,000 bytes/ second",
        "C": "100,000 bytes/ second",
        "D": "500,000 bytes/ second"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two computers communicate with each other by sending data packets across a local area network. The size of these packets is 1,000 bytes. The network has the capacity to carry 1,000 packets per second. The CPU time required to execute the network protocol to send one packet is 10 milliseconds. The maximum rate at which one computer can send data to another is approximately\nA. 10,000 bytes/second\nB. 25,000 bytes/ second\nC. 100,000 bytes/ second\nD. 500,000 bytes/ second\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.5771779417991638,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.5771779417991638
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5771780014038086,
              "max_token_negative_log_likelihood": 0.5771780014038086,
              "predictive_entropy": 0.32407426834106445,
              "shannon_entropy": 0.9468857049942017
            }
          }
        ],
        "cached": false,
        "request_time": 0.5322732925415039,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "two computers   communicate with  each other by   sending  data  packets across a  local  area  network.   the   size   of these  packets  is   1,000 bytes. the  network  has  the capacity to   carry  1,000  packets  per second.  the  cpu  time required  to execute ther   network protocol to   send one  packet is  10  milliseconds.   the maximum   rate   at which one computer can  send  data   to another is  approximately"
        },
        "references": [
          {
            "output": {
              "text": "10,000 bytes/second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25,000 bytes/ second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100,000 bytes/ second"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "500,000 bytes/ second"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id89",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Two computers communicate with each other by sending data packets across a local area network. The size of these packets is 1,000 bytes. The network has the capacity to carry 1,000 packets per second. The CPU time required to execute the network protocol to send one packet is 10 milliseconds. The maximum rate at which one computer can send data to another is approximately"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "10,000 bytes/second",
        "B": "25,000 bytes/ second",
        "C": "100,000 bytes/ second",
        "D": "500,000 bytes/ second"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: two computers   communicate with  each other by   sending  data  packets across a  local  area  network.   the   size   of these  packets  is   1,000 bytes. the  network  has  the capacity to   carry  1,000  packets  per second.  the  cpu  time required  to execute ther   network protocol to   send one  packet is  10  milliseconds.   the maximum   rate   at which one computer can  send  data   to another is  approximately\nA. 10,000 bytes/second\nB. 25,000 bytes/ second\nC. 100,000 bytes/ second\nD. 500,000 bytes/ second\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.21918532252311707,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.21918532252311707
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.21918529272079468,
              "max_token_negative_log_likelihood": 0.21918529272079468,
              "predictive_entropy": 0.17604368925094604,
              "shannon_entropy": 0.5590110421180725
            }
          }
        ],
        "cached": false,
        "request_time": 0.5197570323944092,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two computers communicate wid each other by sendin data packets across a local area network. Da size of dese packets is 1,000 bytes. Da network has da capacity to carry 1,000 packets per second. Da CPU time required to execute da network protocol to send one packet is 10 milliseconds. Da maximum rate at which one computer can send data to anotha is approximately"
        },
        "references": [
          {
            "output": {
              "text": "10,000 bytes/second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "25,000 bytes/ second"
            },
            "tags": []
          },
          {
            "output": {
              "text": "100,000 bytes/ second"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "500,000 bytes/ second"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id89",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Two computers communicate with each other by sending data packets across a local area network. The size of these packets is 1,000 bytes. The network has the capacity to carry 1,000 packets per second. The CPU time required to execute the network protocol to send one packet is 10 milliseconds. The maximum rate at which one computer can send data to another is approximately"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "10,000 bytes/second",
        "B": "25,000 bytes/ second",
        "C": "100,000 bytes/ second",
        "D": "500,000 bytes/ second"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two computers communicate wid each other by sendin data packets across a local area network. Da size of dese packets is 1,000 bytes. Da network has da capacity to carry 1,000 packets per second. Da CPU time required to execute da network protocol to send one packet is 10 milliseconds. Da maximum rate at which one computer can send data to anotha is approximately\nA. 10,000 bytes/second\nB. 25,000 bytes/ second\nC. 100,000 bytes/ second\nD. 500,000 bytes/ second\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.8686195015907288,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.8686195015907288
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.868619441986084,
              "max_token_negative_log_likelihood": 0.868619441986084,
              "predictive_entropy": 0.36441218852996826,
              "shannon_entropy": 0.8319464921951294
            }
          }
        ],
        "cached": false,
        "request_time": 0.5390679836273193,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A starvation-free job-scheduling policy guarantees that no job waits indefinitely for service. Which of the following job-scheduling policies is starvation-free?"
        },
        "references": [
          {
            "output": {
              "text": "Round-robin"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Priority queuing"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Shortest job first"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Youngest job first"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id99"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Round-robin",
        "B": "Priority queuing",
        "C": "Shortest job first",
        "D": "Youngest job first"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A starvation-free job-scheduling policy guarantees that no job waits indefinitely for service. Which of the following job-scheduling policies is starvation-free?\nA. Round-robin\nB. Priority queuing\nC. Shortest job first\nD. Youngest job first\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 6.291123177959435e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5229723453521729,
        "request_datetime": 1755797643
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a  starvation-free   job-scheduling  policy  guarantees that  no   job   waits indefinitely for  service. which   of   teh  following job-scheduling  policies is   starvation-free?"
        },
        "references": [
          {
            "output": {
              "text": "Round-robin"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Priority queuing"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Shortest job first"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Youngest job first"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id99",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A starvation-free job-scheduling policy guarantees that no job waits indefinitely for service. Which of the following job-scheduling policies is starvation-free?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Round-robin",
        "B": "Priority queuing",
        "C": "Shortest job first",
        "D": "Youngest job first"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a  starvation-free   job-scheduling  policy  guarantees that  no   job   waits indefinitely for  service. which   of   teh  following job-scheduling  policies is   starvation-free?\nA. Round-robin\nB. Priority queuing\nC. Shortest job first\nD. Youngest job first\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 4.278961185377739e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5313596725463867,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A starvation-free job-scheduling policy guarantees dat no job waits indefinitely fir service. Which of da following job-scheduling policies is starvation-free?"
        },
        "references": [
          {
            "output": {
              "text": "Round-robin"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Priority queuing"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Shortest job first"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Youngest job first"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id99",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A starvation-free job-scheduling policy guarantees that no job waits indefinitely for service. Which of the following job-scheduling policies is starvation-free?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Round-robin",
        "B": "Priority queuing",
        "C": "Shortest job first",
        "D": "Youngest job first"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A starvation-free job-scheduling policy guarantees dat no job waits indefinitely fir service. Which of da following job-scheduling policies is starvation-free?\nA. Round-robin\nB. Priority queuing\nC. Shortest job first\nD. Youngest job first\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.6341790143314938e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5091378688812256,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?"
        },
        "references": [
          {
            "output": {
              "text": "Finding a longest simple cycle in G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a shortest cycle in G"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Finding ALL spanning trees of G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a largest clique in G"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id37"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Finding a longest simple cycle in G",
        "B": "Finding a shortest cycle in G",
        "C": "Finding ALL spanning trees of G",
        "D": "Finding a largest clique in G"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?\nA. Finding a longest simple cycle in G\nB. Finding a shortest cycle in G\nC. Finding ALL spanning trees of G\nD. Finding a largest clique in G\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.145533611359497e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5278224945068359,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "of   the following   problems conserning a  given undirected   graph  g,   which  is currently   known   to   be solvable   in  polynomial   tiem?"
        },
        "references": [
          {
            "output": {
              "text": "Finding a longest simple cycle in G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a shortest cycle in G"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Finding ALL spanning trees of G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a largest clique in G"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id37",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Finding a longest simple cycle in G",
        "B": "Finding a shortest cycle in G",
        "C": "Finding ALL spanning trees of G",
        "D": "Finding a largest clique in G"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: of   the following   problems conserning a  given undirected   graph  g,   which  is currently   known   to   be solvable   in  polynomial   tiem?\nA. Finding a longest simple cycle in G\nB. Finding a shortest cycle in G\nC. Finding ALL spanning trees of G\nD. Finding a largest clique in G\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.001599224517121911,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.001599224517121911
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0015992190456017852,
              "max_token_negative_log_likelihood": 0.0015992190456017852,
              "predictive_entropy": 0.0015966636128723621,
              "shannon_entropy": 0.01188639272004366
            }
          }
        ],
        "cached": false,
        "request_time": 0.517982006072998,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Of da following problems concerning a given undirected graph G, which is currently known to b solvable in polynomial time?"
        },
        "references": [
          {
            "output": {
              "text": "Finding a longest simple cycle in G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a shortest cycle in G"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Finding ALLL spanning trees of G"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Finding a largest clique in G"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id37",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Finding a longest simple cycle in G",
        "B": "Finding a shortest cycle in G",
        "C": "Finding ALLL spanning trees of G",
        "D": "Finding a largest clique in G"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Of da following problems concerning a given undirected graph G, which is currently known to b solvable in polynomial time?\nA. Finding a longest simple cycle in G\nB. Finding a shortest cycle in G\nC. Finding ALLL spanning trees of G\nD. Finding a largest clique in G\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "B",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 1.9710591914190445e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5293371677398682,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about datagrams sent by a node in a network using IPv4 protocol is (are) true?\nI. Datagrams at the source must be the size of the smallest maximum transmission unit (MTU) of all the links on a path to the destination.\nII. Datagrams may be fragmented during routing.\nIII. Datagrams are reassembled only at the destination."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id98"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about datagrams sent by a node in a network using IPv4 protocol is (are) true?\nI. Datagrams at the source must be the size of the smallest maximum transmission unit (MTU) of all the links on a path to the destination.\nII. Datagrams may be fragmented during routing.\nIII. Datagrams are reassembled only at the destination.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 6.425207033089464e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5135741233825684,
        "request_datetime": 1755797644
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of the  following   statements   about  datagrams  sent  by   a  node  in   a   network using  ipv4  protocol   is  (are) true?\ni.   datagrams at  the source   must   be teh size   of  the smallest maximum transmission   unit  (mtu) of   all  the  links   on   a  path   to   the  destination.\nii.   datagrams   may  be  fragmented  during  routing.\niii.   datagrams are   reassembled only   at the  destination."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id98",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about datagrams sent by a node in a network using IPv4 protocol is (are) true?\nI. Datagrams at the source must be the size of the smallest maximum transmission unit (MTU) of all the links on a path to the destination.\nII. Datagrams may be fragmented during routing.\nIII. Datagrams are reassembled only at the destination."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of the  following   statements   about  datagrams  sent  by   a  node  in   a   network using  ipv4  protocol   is  (are) true?\ni.   datagrams at  the source   must   be teh size   of  the smallest maximum transmission   unit  (mtu) of   all  the  links   on   a  path   to   the  destination.\nii.   datagrams   may  be  fragmented  during  routing.\niii.   datagrams are   reassembled only   at the  destination.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.859590838738995e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5369601249694824,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements abt datagrams sent by a node in a network usin IPv4 protocol is (r) tru?\nI. Datagrams at da source must b the size of da smallest maximum transmission unit (MTU) of alll the links on a path to da destination.\nII. Datagrams may b fragmented durin routing.\nIII. Datagrams r reassembled only at da destination."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id98",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about datagrams sent by a node in a network using IPv4 protocol is (are) true?\nI. Datagrams at the source must be the size of the smallest maximum transmission unit (MTU) of all the links on a path to the destination.\nII. Datagrams may be fragmented during routing.\nIII. Datagrams are reassembled only at the destination."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "II and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements abt datagrams sent by a node in a network usin IPv4 protocol is (r) tru?\nI. Datagrams at da source must b the size of da smallest maximum transmission unit (MTU) of alll the links on a path to da destination.\nII. Datagrams may b fragmented durin routing.\nIII. Datagrams r reassembled only at da destination.\nA. I only\nB. II only\nC. III only\nD. II and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.111723906850216e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5127863883972168,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "You want to cluster 7 points into 3 clusters using the k-Means Clustering algorithm. Suppose after the first iteration, clusters C1, C2 and C3 contain the following two-dimensional points: C1 contains the 2 points: {(0,6), (6,0)} C2 contains the 3 points: {(2,2), (4,4), (6,6)} C3 contains the 2 points: {(5,5), (7,7)} What are the cluster centers computed for these 3 clusters?"
        },
        "references": [
          {
            "output": {
              "text": "C1: (3,3), C2: (4,4), C3: (6,6)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "C1: (3,3), C2: (6,6), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (6,6), C2: (12,12), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (0,0), C2: (48,48), C3: (35,35)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id19"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "C1: (3,3), C2: (4,4), C3: (6,6)",
        "B": "C1: (3,3), C2: (6,6), C3: (12,12)",
        "C": "C1: (6,6), C2: (12,12), C3: (12,12)",
        "D": "C1: (0,0), C2: (48,48), C3: (35,35)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: You want to cluster 7 points into 3 clusters using the k-Means Clustering algorithm. Suppose after the first iteration, clusters C1, C2 and C3 contain the following two-dimensional points: C1 contains the 2 points: {(0,6), (6,0)} C2 contains the 3 points: {(2,2), (4,4), (6,6)} C3 contains the 2 points: {(5,5), (7,7)} What are the cluster centers computed for these 3 clusters?\nA. C1: (3,3), C2: (4,4), C3: (6,6)\nB. C1: (3,3), C2: (6,6), C3: (12,12)\nC. C1: (6,6), C2: (12,12), C3: (12,12)\nD. C1: (0,0), C2: (48,48), C3: (35,35)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.2000439316034317,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.2000439316034317
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2000439465045929,
              "max_token_negative_log_likelihood": 0.2000439465045929,
              "predictive_entropy": 0.16377493739128113,
              "shannon_entropy": 0.5715048313140869
            }
          }
        ],
        "cached": false,
        "request_time": 0.585151195526123,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "you   want to   cluster   7  points  into 3  clusters  using  the   k-means   clustering algorithm.   suppose   after   the first iteration,   clusters   c1, c2  and   c3   contain   the   following  two-dimensional points: c1  contains  the   2   points:   {(0,6),   (6,0)} c2 contains   the   3 points: {(2,2),  (4,4), (6,6)} c3 contians the   2  points:   {(5,5), (7,7)} what're the  cluster centers  computed  for these 3  clusters?"
        },
        "references": [
          {
            "output": {
              "text": "C1: (3,3), C2: (4,4), C3: (6,6)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "C1: (3,3), C2: (6,6), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (6,6), C2: (12,12), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (0,0), C2: (48,48), C3: (35,35)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id19",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "You want to cluster 7 points into 3 clusters using the k-Means Clustering algorithm. Suppose after the first iteration, clusters C1, C2 and C3 contain the following two-dimensional points: C1 contains the 2 points: {(0,6), (6,0)} C2 contains the 3 points: {(2,2), (4,4), (6,6)} C3 contains the 2 points: {(5,5), (7,7)} What are the cluster centers computed for these 3 clusters?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "C1: (3,3), C2: (4,4), C3: (6,6)",
        "B": "C1: (3,3), C2: (6,6), C3: (12,12)",
        "C": "C1: (6,6), C2: (12,12), C3: (12,12)",
        "D": "C1: (0,0), C2: (48,48), C3: (35,35)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: you   want to   cluster   7  points  into 3  clusters  using  the   k-means   clustering algorithm.   suppose   after   the first iteration,   clusters   c1, c2  and   c3   contain   the   following  two-dimensional points: c1  contains  the   2   points:   {(0,6),   (6,0)} c2 contains   the   3 points: {(2,2),  (4,4), (6,6)} c3 contians the   2  points:   {(5,5), (7,7)} what're the  cluster centers  computed  for these 3  clusters?\nA. C1: (3,3), C2: (4,4), C3: (6,6)\nB. C1: (3,3), C2: (6,6), C3: (12,12)\nC. C1: (6,6), C2: (12,12), C3: (12,12)\nD. C1: (0,0), C2: (48,48), C3: (35,35)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.07905960828065872,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.07905960828065872
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07905963063240051,
              "max_token_negative_log_likelihood": 0.07905963063240051,
              "predictive_entropy": 0.07304989546537399,
              "shannon_entropy": 0.27025023102760315
            }
          }
        ],
        "cached": false,
        "request_time": 0.5699243545532227,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "You want to cluster 7 points into 3 clusters usin the k-Means Clustering algorithm. Suppose after da first iteration, clusters C1, C2 and C3 contain da following two-dimensional points: C1 contains da 2 points: {(0,6), (6,0)} C2 contains da 3 points: {(2,2), (4,4), (6,6)} C3 contains da 2 points: {(5,5), (7,7)} Wat are da cluster centers computed fir these 3 clusters?"
        },
        "references": [
          {
            "output": {
              "text": "C1: (3,3), C2: (4,4), C3: (6,6)"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "C1: (3,3), C2: (6,6), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (6,6), C2: (12,12), C3: (12,12)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "C1: (0,0), C2: (48,48), C3: (35,35)"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id19",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "You want to cluster 7 points into 3 clusters using the k-Means Clustering algorithm. Suppose after the first iteration, clusters C1, C2 and C3 contain the following two-dimensional points: C1 contains the 2 points: {(0,6), (6,0)} C2 contains the 3 points: {(2,2), (4,4), (6,6)} C3 contains the 2 points: {(5,5), (7,7)} What are the cluster centers computed for these 3 clusters?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "C1: (3,3), C2: (4,4), C3: (6,6)",
        "B": "C1: (3,3), C2: (6,6), C3: (12,12)",
        "C": "C1: (6,6), C2: (12,12), C3: (12,12)",
        "D": "C1: (0,0), C2: (48,48), C3: (35,35)"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: You want to cluster 7 points into 3 clusters usin the k-Means Clustering algorithm. Suppose after da first iteration, clusters C1, C2 and C3 contain da following two-dimensional points: C1 contains da 2 points: {(0,6), (6,0)} C2 contains da 3 points: {(2,2), (4,4), (6,6)} C3 contains da 2 points: {(5,5), (7,7)} Wat are da cluster centers computed fir these 3 clusters?\nA. C1: (3,3), C2: (4,4), C3: (6,6)\nB. C1: (3,3), C2: (6,6), C3: (12,12)\nC. C1: (6,6), C2: (12,12), C3: (12,12)\nD. C1: (0,0), C2: (48,48), C3: (35,35)\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.9364838600158691,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.9364838600158691
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.9364838004112244,
              "max_token_negative_log_likelihood": 0.9364838004112244,
              "predictive_entropy": 0.3671051859855652,
              "shannon_entropy": 0.8160088062286377
            }
          }
        ],
        "cached": false,
        "request_time": 0.6024415493011475,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is not a sentence that is generated by the grammar A -> BC, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?"
        },
        "references": [
          {
            "output": {
              "text": "xyz"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "xy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxzy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxxxy"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id80"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "xyz",
        "B": "xy",
        "C": "xxzy",
        "D": "xxxxy"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is not a sentence that is generated by the grammar A -> BC, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?\nA. xyz\nB. xy\nC. xxzy\nD. xxxxy\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.1368712186813354,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.1368712186813354
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.136871099472046,
              "max_token_negative_log_likelihood": 1.136871099472046,
              "predictive_entropy": 0.36473241448402405,
              "shannon_entropy": 0.6274902820587158
            }
          }
        ],
        "cached": false,
        "request_time": 0.5711042881011963,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of  the  following isn't   a  sentence   that's generated by  the   grammar a  -> bc, b   ->   x|bx, c  -> b|d,  d  ->   y|ey,   e  ->   z?"
        },
        "references": [
          {
            "output": {
              "text": "xyz"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "xy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxzy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxxxy"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id80",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is not a sentence that is generated by the grammar A -> BC, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "xyz",
        "B": "xy",
        "C": "xxzy",
        "D": "xxxxy"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of  the  following isn't   a  sentence   that's generated by  the   grammar a  -> bc, b   ->   x|bx, c  -> b|d,  d  ->   y|ey,   e  ->   z?\nA. xyz\nB. xy\nC. xxzy\nD. xxxxy\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.053702473640442,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.053702473640442
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.053702473640442,
              "max_token_negative_log_likelihood": 1.053702473640442,
              "predictive_entropy": 0.36736759543418884,
              "shannon_entropy": 0.6466293334960938
            }
          }
        ],
        "cached": false,
        "request_time": 0.551469087600708,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is not a sentence dat is generated by da grammar A -> CUS, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?"
        },
        "references": [
          {
            "output": {
              "text": "xyz"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "xy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxzy"
            },
            "tags": []
          },
          {
            "output": {
              "text": "xxxxy"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id80",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is not a sentence that is generated by the grammar A -> BC, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "xyz",
        "B": "xy",
        "C": "xxzy",
        "D": "xxxxy"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is not a sentence dat is generated by da grammar A -> CUS, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?\nA. xyz\nB. xy\nC. xxzy\nD. xxxxy\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.6037852764129639,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.6037852764129639
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6037852764129639,
              "max_token_negative_log_likelihood": 0.6037852764129639,
              "predictive_entropy": 0.3301124572753906,
              "shannon_entropy": 0.688772439956665
            }
          }
        ],
        "cached": false,
        "request_time": 0.5338342189788818,
        "request_datetime": 1755797645
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about floating-point arithmetic is NOT true?"
        },
        "references": [
          {
            "output": {
              "text": "It is inherently nonassociative because some numbers have no exact representation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Associativity can be achieved with appropriate roundoff conventions."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Some rational numbers have no exact representation."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id24"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is inherently nonassociative because some numbers have no exact representation.",
        "B": "It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers.",
        "C": "Associativity can be achieved with appropriate roundoff conventions.",
        "D": "Some rational numbers have no exact representation."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about floating-point arithmetic is NOT true?\nA. It is inherently nonassociative because some numbers have no exact representation.\nB. It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers.\nC. Associativity can be achieved with appropriate roundoff conventions.\nD. Some rational numbers have no exact representation.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -9.536697689327411e-06,
            "tokens": [
              {
                "text": "B",
                "logprob": -9.536697689327411e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 9.536788638797589e-06,
              "max_token_negative_log_likelihood": 9.536788638797589e-06,
              "predictive_entropy": 9.536697689327411e-06,
              "shannon_entropy": 0.00011958813411183655
            }
          }
        ],
        "cached": false,
        "request_time": 0.5266644954681396,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of the   following   statements   about  floating-point arithmetic isn't  true?"
        },
        "references": [
          {
            "output": {
              "text": "It is inherently nonassociative because some numbers have no exact representation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Associativity can be achieved with appropriate roundoff conventions."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Some rational numbers have no exact representation."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id24",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about floating-point arithmetic is NOT true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is inherently nonassociative because some numbers have no exact representation.",
        "B": "It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers.",
        "C": "Associativity can be achieved with appropriate roundoff conventions.",
        "D": "Some rational numbers have no exact representation."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of the   following   statements   about  floating-point arithmetic isn't  true?\nA. It is inherently nonassociative because some numbers have no exact representation.\nB. It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers.\nC. Associativity can be achieved with appropriate roundoff conventions.\nD. Some rational numbers have no exact representation.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.015444792807102203,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.015444792807102203
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.015444801189005375,
              "max_token_negative_log_likelihood": 0.015444801189005375,
              "predictive_entropy": 0.015208091586828232,
              "shannon_entropy": 0.08100682497024536
            }
          }
        ],
        "cached": false,
        "request_time": 0.5111007690429688,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements abt floating-point arithmetic is NOT tru?"
        },
        "references": [
          {
            "output": {
              "text": "It is inherently nonassociative cause some numbers have no exact representation."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It is inherently nonassociative cuz there have to b upper and lower bounds on da size of numbers."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Associativity can b achieved witt appropriate roundoff conventions."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Some rational numbers have no exact representation."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id24",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about floating-point arithmetic is NOT true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is inherently nonassociative cause some numbers have no exact representation.",
        "B": "It is inherently nonassociative cuz there have to b upper and lower bounds on da size of numbers.",
        "C": "Associativity can b achieved witt appropriate roundoff conventions.",
        "D": "Some rational numbers have no exact representation."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements abt floating-point arithmetic is NOT tru?\nA. It is inherently nonassociative cause some numbers have no exact representation.\nB. It is inherently nonassociative cuz there have to b upper and lower bounds on da size of numbers.\nC. Associativity can b achieved witt appropriate roundoff conventions.\nD. Some rational numbers have no exact representation.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.0008594871615059674,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.0008594871615059674
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0008595106191933155,
              "max_token_negative_log_likelihood": 0.0008595106191933155,
              "predictive_entropy": 0.0008587721968069673,
              "shannon_entropy": 0.006945561617612839
            }
          }
        ],
        "cached": false,
        "request_time": 0.5286786556243896,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about Ethernets is typically FALSE?"
        },
        "references": [
          {
            "output": {
              "text": "Ethernets use circuit switching to send messages."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Ethernets use buses with multiple masters."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Networks connected by Ethernets are limited in length to a few hundred meters."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id34"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Ethernets use circuit switching to send messages.",
        "B": "Ethernets use buses with multiple masters.",
        "C": "Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly.",
        "D": "Networks connected by Ethernets are limited in length to a few hundred meters."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about Ethernets is typically FALSE?\nA. Ethernets use circuit switching to send messages.\nB. Ethernets use buses with multiple masters.\nC. Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly.\nD. Networks connected by Ethernets are limited in length to a few hundred meters.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.39947404168106e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.504288911819458,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of the  following   statements  about   ethernets is   typically false?"
        },
        "references": [
          {
            "output": {
              "text": "Ethernets use circuit switching to send messages."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Ethernets use buses with multiple masters."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Networks connected by Ethernets are limited in length to a few hundred meters."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id34",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about Ethernets is typically FALSE?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Ethernets use circuit switching to send messages.",
        "B": "Ethernets use buses with multiple masters.",
        "C": "Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly.",
        "D": "Networks connected by Ethernets are limited in length to a few hundred meters."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of the  following   statements  about   ethernets is   typically false?\nA. Ethernets use circuit switching to send messages.\nB. Ethernets use buses with multiple masters.\nC. Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly.\nD. Networks connected by Ethernets are limited in length to a few hundred meters.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.6689286894688848e-06,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.6689286894688848e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.6689314179529902e-06,
              "max_token_negative_log_likelihood": 1.6689314179529902e-06,
              "predictive_entropy": 1.6689285757820471e-06,
              "shannon_entropy": 2.368134300922975e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5288431644439697,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements abt Ethernets is typically FALSE?"
        },
        "references": [
          {
            "output": {
              "text": "Ethernets use circuit switchin to send messages."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Ethernets use buses wit multiple masters."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Ethernet protocols use a collision-detection method to ensure dat messages r transmitted properly."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Networks connected by Ethernets r limited in length to a few hunnit meters."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id34",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about Ethernets is typically FALSE?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Ethernets use circuit switchin to send messages.",
        "B": "Ethernets use buses wit multiple masters.",
        "C": "Ethernet protocols use a collision-detection method to ensure dat messages r transmitted properly.",
        "D": "Networks connected by Ethernets r limited in length to a few hunnit meters."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements abt Ethernets is typically FALSE?\nA. Ethernets use circuit switchin to send messages.\nB. Ethernets use buses wit multiple masters.\nC. Ethernet protocols use a collision-detection method to ensure dat messages r transmitted properly.\nD. Networks connected by Ethernets r limited in length to a few hunnit meters.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.7623526673560264e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5175211429595947,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider the representation of six-bit numbers by two's complement, one's complement, or by sign and magnitude. In which representation is there overflow from the addition of the integers 011000 and 011000?"
        },
        "references": [
          {
            "output": {
              "text": "Two's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Sign and magnitude and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two's complement and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All three representations"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id54"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two's complement only",
        "B": "Sign and magnitude and one's complement only",
        "C": "Two's complement and one's complement only",
        "D": "All three representations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider the representation of six-bit numbers by two's complement, one's complement, or by sign and magnitude. In which representation is there overflow from the addition of the integers 011000 and 011000?\nA. Two's complement only\nB. Sign and magnitude and one's complement only\nC. Two's complement and one's complement only\nD. All three representations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.7301536202430725,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.7301536202430725
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7301536202430725,
              "max_token_negative_log_likelihood": 0.7301536202430725,
              "predictive_entropy": 0.35181355476379395,
              "shannon_entropy": 0.7235636115074158
            }
          }
        ],
        "cached": false,
        "request_time": 0.5309662818908691,
        "request_datetime": 1755797646
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "consider  the  representation  of  six-bit   munbers   by   twpo's  complement,   one's   complement,   or  by   sign  and   magnitude. in  which  representation  is  there  overflow  from   the  addition  of the integers   011000   and  011000?"
        },
        "references": [
          {
            "output": {
              "text": "Two's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Sign and magnitude and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two's complement and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All three representations"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id54",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Consider the representation of six-bit numbers by two's complement, one's complement, or by sign and magnitude. In which representation is there overflow from the addition of the integers 011000 and 011000?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two's complement only",
        "B": "Sign and magnitude and one's complement only",
        "C": "Two's complement and one's complement only",
        "D": "All three representations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: consider  the  representation  of  six-bit   munbers   by   twpo's  complement,   one's   complement,   or  by   sign  and   magnitude. in  which  representation  is  there  overflow  from   the  addition  of the integers   011000   and  011000?\nA. Two's complement only\nB. Sign and magnitude and one's complement only\nC. Two's complement and one's complement only\nD. All three representations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.3172834813594818,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.3172834813594818
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3172834813594818,
              "max_token_negative_log_likelihood": 0.3172834813594818,
              "predictive_entropy": 0.23102182149887085,
              "shannon_entropy": 0.6087592244148254
            }
          }
        ],
        "cached": false,
        "request_time": 0.49419331550598145,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider da representation of six-bit numbers by 2's complement, one's complement, or by sign and magnitude. In which representation is dere overflow from da addition of da integers 011000 and 011000?"
        },
        "references": [
          {
            "output": {
              "text": "Two's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Sign and magnitude and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Two's complement and one's complement only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "All three representations"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id54",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Consider the representation of six-bit numbers by two's complement, one's complement, or by sign and magnitude. In which representation is there overflow from the addition of the integers 011000 and 011000?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Two's complement only",
        "B": "Sign and magnitude and one's complement only",
        "C": "Two's complement and one's complement only",
        "D": "All three representations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider da representation of six-bit numbers by 2's complement, one's complement, or by sign and magnitude. In which representation is dere overflow from da addition of da integers 011000 and 011000?\nA. Two's complement only\nB. Sign and magnitude and one's complement only\nC. Two's complement and one's complement only\nD. All three representations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.5544145703315735,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.5544145703315735
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5544146299362183,
              "max_token_negative_log_likelihood": 0.5544146299362183,
              "predictive_entropy": 0.3184604346752167,
              "shannon_entropy": 0.8119262456893921
            }
          }
        ],
        "cached": false,
        "request_time": 0.5315356254577637,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In a pipelined RISC computer where all arithmetic instructions have the same CPI (cycles per instruction), which of the following actions would improve the execution time of a typical program?\nI. Increasing the clock cycle rate\nII. Disallowing any forwarding in the pipeline\nIII. Doubling the sizes of the instruction cache and the data cache without changing the clock cycle time"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id113"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In a pipelined RISC computer where all arithmetic instructions have the same CPI (cycles per instruction), which of the following actions would improve the execution time of a typical program?\nI. Increasing the clock cycle rate\nII. Disallowing any forwarding in the pipeline\nIII. Doubling the sizes of the instruction cache and the data cache without changing the clock cycle time\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 2.5964336600736715e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5173423290252686,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in a  pipelined   risc   cmoputer   where   all   arithmetic instructions   have  the   same cpi  (cycles   per  instruction),   which   of   the  following actions would  improve  the  execution timne  of   a   typical   program?\ni. increasing  the clock cycle rate\nii.   disallowing   any  forwarding in  the pipeline\niii.   doubling  the sizes   of the   instuction   cache and  the data  cache   without  changing tghe  clock   cycle   time"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id113",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In a pipelined RISC computer where all arithmetic instructions have the same CPI (cycles per instruction), which of the following actions would improve the execution time of a typical program?\nI. Increasing the clock cycle rate\nII. Disallowing any forwarding in the pipeline\nIII. Doubling the sizes of the instruction cache and the data cache without changing the clock cycle time"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in a  pipelined   risc   cmoputer   where   all   arithmetic instructions   have  the   same cpi  (cycles   per  instruction),   which   of   the  following actions would  improve  the  execution timne  of   a   typical   program?\ni. increasing  the clock cycle rate\nii.   disallowing   any  forwarding in  the pipeline\niii.   doubling  the sizes   of the   instuction   cache and  the data  cache   without  changing tghe  clock   cycle   time\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "D",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 8.317552442349552e-07
            }
          }
        ],
        "cached": false,
        "request_time": 0.5355627536773682,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In a pipelined RISC computer where alll arithmetic instructions have da same CPI (cycles per instruction), which of da following actions would improve da execution time of a typical program?\nI. Increasing da clock cycle rate\nII. Disallowing any forwarding in da pipeline\nIII. Doubling da sizes of da instruction cache and da data cache w/o changing da clock cycle time"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id113",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In a pipelined RISC computer where all arithmetic instructions have the same CPI (cycles per instruction), which of the following actions would improve the execution time of a typical program?\nI. Increasing the clock cycle rate\nII. Disallowing any forwarding in the pipeline\nIII. Doubling the sizes of the instruction cache and the data cache without changing the clock cycle time"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In a pipelined RISC computer where alll arithmetic instructions have da same CPI (cycles per instruction), which of da following actions would improve da execution time of a typical program?\nI. Increasing da clock cycle rate\nII. Disallowing any forwarding in da pipeline\nIII. Doubling da sizes of da instruction cache and da data cache w/o changing da clock cycle time\nA. I only\nB. II only\nC. III only\nD. I and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.1457441107486375e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.1457441107486375e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.1457903130794875e-05,
              "max_token_negative_log_likelihood": 2.1457903130794875e-05,
              "predictive_entropy": 2.1457442926475778e-05,
              "shannon_entropy": 0.00025198128423653543
            }
          }
        ],
        "cached": false,
        "request_time": 0.5218534469604492,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A microcomputer used for data acquisition and control is required to digitize and process four analog input signals and to output their average continually; i.e., in real time. The time for an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including the triggering instruction, must be executed for each signal digitized. Ten CPU instructions are executed in order to average each set of four samples and output this value. The time to convert the output from digital to analog form is to be ignored. If it is assumed that suitable data buffering is employed, then the maximum average instruction execution time that allows the microcomputer to keep up with the input-output data rates, is"
        },
        "references": [
          {
            "output": {
              "text": "0.8 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.2 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.6 microseconds"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2.4 microseconds"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id114"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.8 microseconds",
        "B": "1.2 microseconds",
        "C": "1.6 microseconds",
        "D": "2.4 microseconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A microcomputer used for data acquisition and control is required to digitize and process four analog input signals and to output their average continually; i.e., in real time. The time for an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including the triggering instruction, must be executed for each signal digitized. Ten CPU instructions are executed in order to average each set of four samples and output this value. The time to convert the output from digital to analog form is to be ignored. If it is assumed that suitable data buffering is employed, then the maximum average instruction execution time that allows the microcomputer to keep up with the input-output data rates, is\nA. 0.8 microseconds\nB. 1.2 microseconds\nC. 1.6 microseconds\nD. 2.4 microseconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.4880391061306,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.4880391061306
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.48803913593292236,
              "max_token_negative_log_likelihood": 0.48803913593292236,
              "predictive_entropy": 0.29957249760627747,
              "shannon_entropy": 0.9681538343429565
            }
          }
        ],
        "cached": false,
        "request_time": 0.5791065692901611,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a  microcomputer  used  for  data acquisition   andd  control  is required to   digitize and proccess four  analog input  signals   and to output   their average   continually;   i.e.,   in  real  tiem. the   time   for  an   external analog-to-digital  converter  (which is  triggered  by a  cpu  instruction)   to   digitize   one input  is  12  microseconds, and  only one  digitization  occurs  at a  time.   five  cpu instructions,   including the triggering  instruction,  must   be  excecuted  for   each signal  digitized.   ten cpu instructions   are  executed in order to  average   each  set of  four  samples  and   output  this   value.   the time  to   convert   the   output   from digital to  analog  form   is  to be ignored. if it's  assumed  that   suitable  data buffering is  employed,  then the  maximum   average instruction   execution   time  that allows the  microcomputer  to keep   up  with   the   input-output   data  rates,  is"
        },
        "references": [
          {
            "output": {
              "text": "0.8 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.2 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.6 microseconds"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2.4 microseconds"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id114",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A microcomputer used for data acquisition and control is required to digitize and process four analog input signals and to output their average continually; i.e., in real time. The time for an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including the triggering instruction, must be executed for each signal digitized. Ten CPU instructions are executed in order to average each set of four samples and output this value. The time to convert the output from digital to analog form is to be ignored. If it is assumed that suitable data buffering is employed, then the maximum average instruction execution time that allows the microcomputer to keep up with the input-output data rates, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.8 microseconds",
        "B": "1.2 microseconds",
        "C": "1.6 microseconds",
        "D": "2.4 microseconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a  microcomputer  used  for  data acquisition   andd  control  is required to   digitize and proccess four  analog input  signals   and to output   their average   continually;   i.e.,   in  real  tiem. the   time   for  an   external analog-to-digital  converter  (which is  triggered  by a  cpu  instruction)   to   digitize   one input  is  12  microseconds, and  only one  digitization  occurs  at a  time.   five  cpu instructions,   including the triggering  instruction,  must   be  excecuted  for   each signal  digitized.   ten cpu instructions   are  executed in order to  average   each  set of  four  samples  and   output  this   value.   the time  to   convert   the   output   from digital to  analog  form   is  to be ignored. if it's  assumed  that   suitable  data buffering is  employed,  then the  maximum   average instruction   execution   time  that allows the  microcomputer  to keep   up  with   the   input-output   data  rates,  is\nA. 0.8 microseconds\nB. 1.2 microseconds\nC. 1.6 microseconds\nD. 2.4 microseconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.7452867031097412,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.7452867031097412
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7452866435050964,
              "max_token_negative_log_likelihood": 0.7452866435050964,
              "predictive_entropy": 0.35371172428131104,
              "shannon_entropy": 0.9609205722808838
            }
          }
        ],
        "cached": false,
        "request_time": 0.5624454021453857,
        "request_datetime": 1755797647
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A microcomputer used fa data acquisition and control is required to digitize and process 4 analog input signals and to output their average continually; i.e., in real time. Da time fa an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including da triggering instruction, must b executed fir each signal digitized. Ten CPU instructions r executed in order to average each set of 4 samples and output dis value. Da time to convert da output from digital to analog form is to b ignored. If it is assumed dat suitable data buffering is employed, then da maximum average instruction execution time dat allows da microcomputer to keep up witt the input-output data rates, is"
        },
        "references": [
          {
            "output": {
              "text": "0.8 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.2 microseconds"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1.6 microseconds"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "2.4 microseconds"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id114",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A microcomputer used for data acquisition and control is required to digitize and process four analog input signals and to output their average continually; i.e., in real time. The time for an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including the triggering instruction, must be executed for each signal digitized. Ten CPU instructions are executed in order to average each set of four samples and output this value. The time to convert the output from digital to analog form is to be ignored. If it is assumed that suitable data buffering is employed, then the maximum average instruction execution time that allows the microcomputer to keep up with the input-output data rates, is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0.8 microseconds",
        "B": "1.2 microseconds",
        "C": "1.6 microseconds",
        "D": "2.4 microseconds"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A microcomputer used fa data acquisition and control is required to digitize and process 4 analog input signals and to output their average continually; i.e., in real time. Da time fa an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including da triggering instruction, must b executed fir each signal digitized. Ten CPU instructions r executed in order to average each set of 4 samples and output dis value. Da time to convert da output from digital to analog form is to b ignored. If it is assumed dat suitable data buffering is employed, then da maximum average instruction execution time dat allows da microcomputer to keep up witt the input-output data rates, is\nA. 0.8 microseconds\nB. 1.2 microseconds\nC. 1.6 microseconds\nD. 2.4 microseconds\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.2980307340621948,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.2980307340621948
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2980307340621948,
              "max_token_negative_log_likelihood": 1.2980307340621948,
              "predictive_entropy": 0.354451984167099,
              "shannon_entropy": 0.9682391285896301
            }
          }
        ],
        "cached": false,
        "request_time": 0.607879638671875,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two single-user workstations are attached to the same local area network. On one of these workstations, file pages are accessed over the network from a file server; the average access time per page is 0.1 second. On the other of these workstations, file pages are accessed from a local disk; the average access time per page is 0.05 second. A particular compilation requires 30 seconds of computation and 200 file page accesses. What is the ratio of the total time required by this compilation if run on the diskless (file server) workstation to the total time required if run on the workstation with the local disk, if it is assumed that computation is not overlapped with file access?"
        },
        "references": [
          {
            "output": {
              "text": "1/1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5/4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "5/3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10/5"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id84"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/1",
        "B": "5/4",
        "C": "5/3",
        "D": "10/5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two single-user workstations are attached to the same local area network. On one of these workstations, file pages are accessed over the network from a file server; the average access time per page is 0.1 second. On the other of these workstations, file pages are accessed from a local disk; the average access time per page is 0.05 second. A particular compilation requires 30 seconds of computation and 200 file page accesses. What is the ratio of the total time required by this compilation if run on the diskless (file server) workstation to the total time required if run on the workstation with the local disk, if it is assumed that computation is not overlapped with file access?\nA. 1/1\nB. 5/4\nC. 5/3\nD. 10/5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.7913083434104919,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.7913083434104919
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7913082838058472,
              "max_token_negative_log_likelihood": 0.7913082838058472,
              "predictive_entropy": 0.35866159200668335,
              "shannon_entropy": 0.6890329122543335
            }
          }
        ],
        "cached": false,
        "request_time": 0.5579121112823486,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "two   single-user workstations   are   attached   to   the  same   local  area network.   on  one of these workstations, file   pages  are  accessed over  the  network   from   a fiel  server; the  average   access   time   per  page   is   0.1 second.   on  the olther  of   these   workstations,   file   pages   are   accessed  from a local disk;  the   average  access   time   per  page  is 0.05 second. a  particular  compilation requires   30 seconds  of   computation  anbd 200   file page   accesses.  what's   the   ratio of  the  total   time   required   by   this  compilation  if run  on  the  diskless  (file server)  workstation to  the   total  time  required  if  run   on the   workstation   with   the  local   disk,   if   it's   assumed that   computation isnt   overlapped with  file  access?"
        },
        "references": [
          {
            "output": {
              "text": "1/1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5/4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "5/3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10/5"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id84",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Two single-user workstations are attached to the same local area network. On one of these workstations, file pages are accessed over the network from a file server; the average access time per page is 0.1 second. On the other of these workstations, file pages are accessed from a local disk; the average access time per page is 0.05 second. A particular compilation requires 30 seconds of computation and 200 file page accesses. What is the ratio of the total time required by this compilation if run on the diskless (file server) workstation to the total time required if run on the workstation with the local disk, if it is assumed that computation is not overlapped with file access?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/1",
        "B": "5/4",
        "C": "5/3",
        "D": "10/5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: two   single-user workstations   are   attached   to   the  same   local  area network.   on  one of these workstations, file   pages  are  accessed over  the  network   from   a fiel  server; the  average   access   time   per  page   is   0.1 second.   on  the olther  of   these   workstations,   file   pages   are   accessed  from a local disk;  the   average  access   time   per  page  is 0.05 second. a  particular  compilation requires   30 seconds  of   computation  anbd 200   file page   accesses.  what's   the   ratio of  the  total   time   required   by   this  compilation  if run  on  the  diskless  (file server)  workstation to  the   total  time  required  if  run   on the   workstation   with   the  local   disk,   if   it's   assumed that   computation isnt   overlapped with  file  access?\nA. 1/1\nB. 5/4\nC. 5/3\nD. 10/5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.251938134431839,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.251938134431839
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2519381046295166,
              "max_token_negative_log_likelihood": 0.2519381046295166,
              "predictive_entropy": 0.19582968950271606,
              "shannon_entropy": 0.5304158926010132
            }
          }
        ],
        "cached": false,
        "request_time": 0.6060702800750732,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Two single-user workstations r attached to da same local area network. On one of dese workstations, file pages r accessed ova the network from a file server; da average access time per page is 0.1 second. On da other of dem workstations, file pages r accessed from a local disk; da average access time per page is 0.05 second. A particular compilation requires 30 secs of computation and 200 file page accesses. Wat is da ratio of da total time required by dis compilation if run on da diskless (file server) workstation to da total time required if run on da workstation w the local disk, if it is assumed dat computation is not overlapped w file access?"
        },
        "references": [
          {
            "output": {
              "text": "1/1"
            },
            "tags": []
          },
          {
            "output": {
              "text": "5/4"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "5/3"
            },
            "tags": []
          },
          {
            "output": {
              "text": "10/5"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id84",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Two single-user workstations are attached to the same local area network. On one of these workstations, file pages are accessed over the network from a file server; the average access time per page is 0.1 second. On the other of these workstations, file pages are accessed from a local disk; the average access time per page is 0.05 second. A particular compilation requires 30 seconds of computation and 200 file page accesses. What is the ratio of the total time required by this compilation if run on the diskless (file server) workstation to the total time required if run on the workstation with the local disk, if it is assumed that computation is not overlapped with file access?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "1/1",
        "B": "5/4",
        "C": "5/3",
        "D": "10/5"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Two single-user workstations r attached to da same local area network. On one of dese workstations, file pages r accessed ova the network from a file server; da average access time per page is 0.1 second. On da other of dem workstations, file pages r accessed from a local disk; da average access time per page is 0.05 second. A particular compilation requires 30 secs of computation and 200 file page accesses. Wat is da ratio of da total time required by dis compilation if run on da diskless (file server) workstation to da total time required if run on da workstation w the local disk, if it is assumed dat computation is not overlapped w file access?\nA. 1/1\nB. 5/4\nC. 5/3\nD. 10/5\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.4073624610900879,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.4073624610900879
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.4073624908924103,
              "max_token_negative_log_likelihood": 0.4073624908924103,
              "predictive_entropy": 0.27106019854545593,
              "shannon_entropy": 0.6375188827514648
            }
          }
        ],
        "cached": false,
        "request_time": 0.551567792892456,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let k >= 2. Let L be the set of strings in {0, 1}^* such that x \\in L if and only if the number of 0's in x is divisible by k and the number of 1's in x is odd. The minimum number of states in a deterministic finite automaton (DFA) that recognizes L is"
        },
        "references": [
          {
            "output": {
              "text": "k + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2k"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "k log k"
            },
            "tags": []
          },
          {
            "output": {
              "text": "k^2"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id74"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "k + 2",
        "B": "2k",
        "C": "k log k",
        "D": "k^2"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let k >= 2. Let L be the set of strings in {0, 1}^* such that x \\in L if and only if the number of 0's in x is divisible by k and the number of 1's in x is odd. The minimum number of states in a deterministic finite automaton (DFA) that recognizes L is\nA. k + 2\nB. 2k\nC. k log k\nD. k^2\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.21002371609210968,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.21002371609210968
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2100236713886261,
              "max_token_negative_log_likelihood": 0.2100236713886261,
              "predictive_entropy": 0.17023785412311554,
              "shannon_entropy": 0.5259336233139038
            }
          }
        ],
        "cached": false,
        "request_time": 0.5750961303710938,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let   k  >= 2.  let   l be the  set of   strings  in   {0, 1}^*  such that x \\in   l if   and  only  if   the   number   of  0's   in   x is  divisible by k   and  the  number of   1's in x   is  odd.   the minimum  number of  states   in  a   deterministic  finite   automaton  (dfa)  that  recognizes   l  is"
        },
        "references": [
          {
            "output": {
              "text": "k + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2k"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "k log k"
            },
            "tags": []
          },
          {
            "output": {
              "text": "k^2"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id74",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let k >= 2. Let L be the set of strings in {0, 1}^* such that x \\in L if and only if the number of 0's in x is divisible by k and the number of 1's in x is odd. The minimum number of states in a deterministic finite automaton (DFA) that recognizes L is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "k + 2",
        "B": "2k",
        "C": "k log k",
        "D": "k^2"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let   k  >= 2.  let   l be the  set of   strings  in   {0, 1}^*  such that x \\in   l if   and  only  if   the   number   of  0's   in   x is  divisible by k   and  the  number of   1's in x   is  odd.   the minimum  number of  states   in  a   deterministic  finite   automaton  (dfa)  that  recognizes   l  is\nA. k + 2\nB. 2k\nC. k log k\nD. k^2\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.18706993758678436,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.18706993758678436
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18706990778446198,
              "max_token_negative_log_likelihood": 0.18706990778446198,
              "predictive_entropy": 0.15515311062335968,
              "shannon_entropy": 0.5683822631835938
            }
          }
        ],
        "cached": false,
        "request_time": 0.5459246635437012,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let k >= 2. Let L b the set of strings in {0, 1}^* such dat x \\in L if and only if da number of 0's in x is divisible by k and da number of 1's in x is odd. Da minimum number of states in a deterministic finite automaton (DFA) dat recognizes L is"
        },
        "references": [
          {
            "output": {
              "text": "k + 2"
            },
            "tags": []
          },
          {
            "output": {
              "text": "2k"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "k log k"
            },
            "tags": []
          },
          {
            "output": {
              "text": "k^2"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id74",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let k >= 2. Let L be the set of strings in {0, 1}^* such that x \\in L if and only if the number of 0's in x is divisible by k and the number of 1's in x is odd. The minimum number of states in a deterministic finite automaton (DFA) that recognizes L is"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "k + 2",
        "B": "2k",
        "C": "k log k",
        "D": "k^2"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let k >= 2. Let L b the set of strings in {0, 1}^* such dat x \\in L if and only if da number of 0's in x is divisible by k and da number of 1's in x is odd. Da minimum number of states in a deterministic finite automaton (DFA) dat recognizes L is\nA. k + 2\nB. 2k\nC. k log k\nD. k^2\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.27728989720344543,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.27728989720344543
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.27728986740112305,
              "max_token_negative_log_likelihood": 0.27728986740112305,
              "predictive_entropy": 0.2101399153470993,
              "shannon_entropy": 0.7461185455322266
            }
          }
        ],
        "cached": false,
        "request_time": 0.5510869026184082,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Assume that a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If the text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if the debugger has mapped this same text segment at 0x01000000 in its virtual address space, which of the following is the virtual address used by the debugger in its WRITE operation, along with a description of how the debugger has mapped the virtual memory page containing this address?"
        },
        "references": [
          {
            "output": {
              "text": "0x01001234; page mapped with READ/WRITE access"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "0x01001234; page mapped with COPY-ON-WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped with READ/WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped with COPY-ON-WRITE access"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id85"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0x01001234; page mapped with READ/WRITE access",
        "B": "0x01001234; page mapped with COPY-ON-WRITE access",
        "C": "0x76E81234; page mapped with READ/WRITE access",
        "D": "0x76E81234; page mapped with COPY-ON-WRITE access"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Assume that a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If the text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if the debugger has mapped this same text segment at 0x01000000 in its virtual address space, which of the following is the virtual address used by the debugger in its WRITE operation, along with a description of how the debugger has mapped the virtual memory page containing this address?\nA. 0x01001234; page mapped with READ/WRITE access\nB. 0x01001234; page mapped with COPY-ON-WRITE access\nC. 0x76E81234; page mapped with READ/WRITE access\nD. 0x76E81234; page mapped with COPY-ON-WRITE access\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.04335281625390053,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.04335281625390053
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.04335282742977142,
              "max_token_negative_log_likelihood": 0.04335282742977142,
              "predictive_entropy": 0.04151351749897003,
              "shannon_entropy": 0.17767702043056488
            }
          }
        ],
        "cached": false,
        "request_time": 0.5261440277099609,
        "request_datetime": 1755797648
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "assume   that   a  debugger   places   a   breakpoint   at   a load   instuction   at virtual address   0x77e81234  (hexadecimal notation) in  a  debugged  process   p.   if  the  text segment  of p begins at  0x77e80000   in  p\u2019s virtual   address  space and   if   the  debugger   has mapped   this  same   text   segment  at 0x01000000  in its   virtual   address  space, which  of  tje  following   is the  virtual address  used  by  the debugger in   its write   operation,   along  with   a  description of  how   the   debugger  has  mapped the  virtual  memory   page  containing  this address?"
        },
        "references": [
          {
            "output": {
              "text": "0x01001234; page mapped with READ/WRITE access"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "0x01001234; page mapped with COPY-ON-WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped with READ/WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped with COPY-ON-WRITE access"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id85",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Assume that a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If the text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if the debugger has mapped this same text segment at 0x01000000 in its virtual address space, which of the following is the virtual address used by the debugger in its WRITE operation, along with a description of how the debugger has mapped the virtual memory page containing this address?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0x01001234; page mapped with READ/WRITE access",
        "B": "0x01001234; page mapped with COPY-ON-WRITE access",
        "C": "0x76E81234; page mapped with READ/WRITE access",
        "D": "0x76E81234; page mapped with COPY-ON-WRITE access"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: assume   that   a  debugger   places   a   breakpoint   at   a load   instuction   at virtual address   0x77e81234  (hexadecimal notation) in  a  debugged  process   p.   if  the  text segment  of p begins at  0x77e80000   in  p\u2019s virtual   address  space and   if   the  debugger   has mapped   this  same   text   segment  at 0x01000000  in its   virtual   address  space, which  of  tje  following   is the  virtual address  used  by  the debugger in   its write   operation,   along  with   a  description of  how   the   debugger  has  mapped the  virtual  memory   page  containing  this address?\nA. 0x01001234; page mapped with READ/WRITE access\nB. 0x01001234; page mapped with COPY-ON-WRITE access\nC. 0x76E81234; page mapped with READ/WRITE access\nD. 0x76E81234; page mapped with COPY-ON-WRITE access\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.9159916639328003,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.9159916639328003
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.9159915447235107,
              "max_token_negative_log_likelihood": 1.9159915447235107,
              "predictive_entropy": 0.28202587366104126,
              "shannon_entropy": 0.4562702476978302
            }
          }
        ],
        "cached": false,
        "request_time": 0.5910804271697998,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Assume dat a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If da text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if da debugger has mapped dis same txt segment at 0x01000000 in its virtual address space, which of da following is da virtual address used by da debugger in its WRITE operation, along witt a description of how da debugger has mapped da virtual memory page containing dis address?"
        },
        "references": [
          {
            "output": {
              "text": "0x01001234; page mapped w/ READ/WRITE access"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "0x01001234; page mapped wid COPY-ON-WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped wit READ/WRITE access"
            },
            "tags": []
          },
          {
            "output": {
              "text": "0x76E81234; page mapped wit COPY-ON-WRITE access"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id85",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Assume that a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If the text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if the debugger has mapped this same text segment at 0x01000000 in its virtual address space, which of the following is the virtual address used by the debugger in its WRITE operation, along with a description of how the debugger has mapped the virtual memory page containing this address?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "0x01001234; page mapped w/ READ/WRITE access",
        "B": "0x01001234; page mapped wid COPY-ON-WRITE access",
        "C": "0x76E81234; page mapped wit READ/WRITE access",
        "D": "0x76E81234; page mapped wit COPY-ON-WRITE access"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Assume dat a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If da text segment of P begins at 0x77E80000 in P\u2019s virtual address space and if da debugger has mapped dis same txt segment at 0x01000000 in its virtual address space, which of da following is da virtual address used by da debugger in its WRITE operation, along witt a description of how da debugger has mapped da virtual memory page containing dis address?\nA. 0x01001234; page mapped w/ READ/WRITE access\nB. 0x01001234; page mapped wid COPY-ON-WRITE access\nC. 0x76E81234; page mapped wit READ/WRITE access\nD. 0x76E81234; page mapped wit COPY-ON-WRITE access\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.306361585855484,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.306361585855484
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.306361585855484,
              "max_token_negative_log_likelihood": 0.306361585855484,
              "predictive_entropy": 0.22551901638507843,
              "shannon_entropy": 0.6243367791175842
            }
          }
        ],
        "cached": false,
        "request_time": 0.5504622459411621,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose sharing of tiles in a multilevel directory structure is achieved with directory entries that are links pointing to a node containing information about a shared file. Information in this node includes (1) the owner of the file, (2) a count of the number of links to the tile, and (3) the disk block numbers of the file. What is a primary drawback to this approach to sharing?"
        },
        "references": [
          {
            "output": {
              "text": "If the owner modifies the file, another user who does not share will see the changes."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If the owner renames the file, other users will not be able to access it."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If the owner is allowed to delete a file, dangling links may result."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id25"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "If the owner modifies the file, another user who does not share will see the changes.",
        "B": "If the owner renames the file, other users will not be able to access it.",
        "C": "If the owner is allowed to delete a file, dangling links may result.",
        "D": "If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose sharing of tiles in a multilevel directory structure is achieved with directory entries that are links pointing to a node containing information about a shared file. Information in this node includes (1) the owner of the file, (2) a count of the number of links to the tile, and (3) the disk block numbers of the file. What is a primary drawback to this approach to sharing?\nA. If the owner modifies the file, another user who does not share will see the changes.\nB. If the owner renames the file, other users will not be able to access it.\nC. If the owner is allowed to delete a file, dangling links may result.\nD. If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.053707242012024,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.053707242012024
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.053707242012024,
              "max_token_negative_log_likelihood": 1.053707242012024,
              "predictive_entropy": 0.3673675060272217,
              "shannon_entropy": 0.6466854810714722
            }
          }
        ],
        "cached": false,
        "request_time": 0.6178867816925049,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "suppose sharing  of  tiles   in   a   multilevel  directory   structure   is  achieved with   directory  entries   that   are links  pointing  to  a   node  containing   information   about  a shared file.  information   in  this  node  includes   (1)  tghe  owner   of the  file,   (2) a  count of  the   number   of links  tothe tile,   and   (3) the  disk  block  numbers  of  the  file.  what's   a   primary drawback   to this   approach   to  sharing?"
        },
        "references": [
          {
            "output": {
              "text": "If the owner modifies the file, another user who does not share will see the changes."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If the owner renames the file, other users will not be able to access it."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If the owner is allowed to delete a file, dangling links may result."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id25",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Suppose sharing of tiles in a multilevel directory structure is achieved with directory entries that are links pointing to a node containing information about a shared file. Information in this node includes (1) the owner of the file, (2) a count of the number of links to the tile, and (3) the disk block numbers of the file. What is a primary drawback to this approach to sharing?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "If the owner modifies the file, another user who does not share will see the changes.",
        "B": "If the owner renames the file, other users will not be able to access it.",
        "C": "If the owner is allowed to delete a file, dangling links may result.",
        "D": "If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: suppose sharing  of  tiles   in   a   multilevel  directory   structure   is  achieved with   directory  entries   that   are links  pointing  to  a   node  containing   information   about  a shared file.  information   in  this  node  includes   (1)  tghe  owner   of the  file,   (2) a  count of  the   number   of links  tothe tile,   and   (3) the  disk  block  numbers  of  the  file.  what's   a   primary drawback   to this   approach   to  sharing?\nA. If the owner modifies the file, another user who does not share will see the changes.\nB. If the owner renames the file, other users will not be able to access it.\nC. If the owner is allowed to delete a file, dangling links may result.\nD. If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.08894763886928558,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.08894763886928558
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0889476016163826,
              "max_token_negative_log_likelihood": 0.0889476016163826,
              "predictive_entropy": 0.08137758076190948,
              "shannon_entropy": 0.2911514937877655
            }
          }
        ],
        "cached": false,
        "request_time": 0.5692543983459473,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Suppose sharing of tiles in a multilevel directory structure is achieved w/ directory entries dat are links pointing to a node containing information bou a shared file. Information in dis node includes (1) da owner of da file, (2) a count of da number of links to da tile, and (3) da disk block numbers of da file. Wat is a primary drawback to dis approach to sharing?"
        },
        "references": [
          {
            "output": {
              "text": "If da owner modifies da file, anotha user who does not share gon see da changes."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If da owner renames da file, other users gon not b able to access it."
            },
            "tags": []
          },
          {
            "output": {
              "text": "If da owner is allowed to delete a file, dangling links may result."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "If any user who shares da file appends to it, others who share it gon not b able to access da new disk blocks."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id25",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Suppose sharing of tiles in a multilevel directory structure is achieved with directory entries that are links pointing to a node containing information about a shared file. Information in this node includes (1) the owner of the file, (2) a count of the number of links to the tile, and (3) the disk block numbers of the file. What is a primary drawback to this approach to sharing?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "If da owner modifies da file, anotha user who does not share gon see da changes.",
        "B": "If da owner renames da file, other users gon not b able to access it.",
        "C": "If da owner is allowed to delete a file, dangling links may result.",
        "D": "If any user who shares da file appends to it, others who share it gon not b able to access da new disk blocks."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Suppose sharing of tiles in a multilevel directory structure is achieved w/ directory entries dat are links pointing to a node containing information bou a shared file. Information in dis node includes (1) da owner of da file, (2) a count of da number of links to da tile, and (3) da disk block numbers of da file. Wat is a primary drawback to dis approach to sharing?\nA. If da owner modifies da file, anotha user who does not share gon see da changes.\nB. If da owner renames da file, other users gon not b able to access it.\nC. If da owner is allowed to delete a file, dangling links may result.\nD. If any user who shares da file appends to it, others who share it gon not b able to access da new disk blocks.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.03910352289676666,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.03910352289676666
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.03910352662205696,
              "max_token_negative_log_likelihood": 0.03910352662205696,
              "predictive_entropy": 0.0376039519906044,
              "shannon_entropy": 0.16754107177257538
            }
          }
        ],
        "cached": false,
        "request_time": 0.5908372402191162,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A major advantage of direct mapping of a cache is its simplicity. The main disadvantage of this organization is that"
        },
        "references": [
          {
            "output": {
              "text": "it does not allow simultaneous access to the intended data and its tag"
            },
            "tags": []
          },
          {
            "output": {
              "text": "it is more expensive than other types of cache organizations"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "its access time is greater than that of other cache organizations"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id109"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "it does not allow simultaneous access to the intended data and its tag",
        "B": "it is more expensive than other types of cache organizations",
        "C": "the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache",
        "D": "its access time is greater than that of other cache organizations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A major advantage of direct mapping of a cache is its simplicity. The main disadvantage of this organization is that\nA. it does not allow simultaneous access to the intended data and its tag\nB. it is more expensive than other types of cache organizations\nC. the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache\nD. its access time is greater than that of other cache organizations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.9850955868558913e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.527503252029419,
        "request_datetime": 1755797649
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a major  advantage of direct mapping of   a  cache is  its simplicity. the  main   disadvantage   of  this   organiztion  is   that"
        },
        "references": [
          {
            "output": {
              "text": "it does not allow simultaneous access to the intended data and its tag"
            },
            "tags": []
          },
          {
            "output": {
              "text": "it is more expensive than other types of cache organizations"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "its access time is greater than that of other cache organizations"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id109",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A major advantage of direct mapping of a cache is its simplicity. The main disadvantage of this organization is that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "it does not allow simultaneous access to the intended data and its tag",
        "B": "it is more expensive than other types of cache organizations",
        "C": "the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache",
        "D": "its access time is greater than that of other cache organizations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a major  advantage of direct mapping of   a  cache is  its simplicity. the  main   disadvantage   of  this   organiztion  is   that\nA. it does not allow simultaneous access to the intended data and its tag\nB. it is more expensive than other types of cache organizations\nC. the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache\nD. its access time is greater than that of other cache organizations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 9.665848677009592e-11
            }
          }
        ],
        "cached": false,
        "request_time": 0.548443078994751,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A major advantage of direct mapping of a cache is its simplicity. Da main disadvantage of dis organization is that"
        },
        "references": [
          {
            "output": {
              "text": "it does not allow simultaneous access to da intended data and its tag"
            },
            "tags": []
          },
          {
            "output": {
              "text": "it is more expensive den other types of cache organizations"
            },
            "tags": []
          },
          {
            "output": {
              "text": "the cache hit ratio is degraded if 2 or more blocks used alternately map onto da same block frame in da cache"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "its access time is greater den that of other cache organizations"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id109",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A major advantage of direct mapping of a cache is its simplicity. The main disadvantage of this organization is that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "it does not allow simultaneous access to da intended data and its tag",
        "B": "it is more expensive den other types of cache organizations",
        "C": "the cache hit ratio is degraded if 2 or more blocks used alternately map onto da same block frame in da cache",
        "D": "its access time is greater den that of other cache organizations"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A major advantage of direct mapping of a cache is its simplicity. Da main disadvantage of dis organization is that\nA. it does not allow simultaneous access to da intended data and its tag\nB. it is more expensive den other types of cache organizations\nC. the cache hit ratio is degraded if 2 or more blocks used alternately map onto da same block frame in da cache\nD. its access time is greater den that of other cache organizations\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 3.119208502599946e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5302343368530273,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In systems with support for automatic memory management, a garbage collector typically has the responsibility for reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects are identified by determining that they cannot be reached from a root set. Which of the following is NOT part of the root set in a typical garbage collector?"
        },
        "references": [
          {
            "output": {
              "text": "Actual parameters of the active procedures"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamically allocated objects on the heap"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Global variables of the program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Local variables on the call stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id77"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Actual parameters of the active procedures",
        "B": "Dynamically allocated objects on the heap",
        "C": "Global variables of the program",
        "D": "Local variables on the call stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In systems with support for automatic memory management, a garbage collector typically has the responsibility for reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects are identified by determining that they cannot be reached from a root set. Which of the following is NOT part of the root set in a typical garbage collector?\nA. Actual parameters of the active procedures\nB. Dynamically allocated objects on the heap\nC. Global variables of the program\nD. Local variables on the call stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.2521354556083679,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.2521354556083679
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2521355152130127,
              "max_token_negative_log_likelihood": 0.2521355152130127,
              "predictive_entropy": 0.19594444334506989,
              "shannon_entropy": 0.5321688055992126
            }
          }
        ],
        "cached": false,
        "request_time": 0.5371267795562744,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "in   systems  witn   support for  automatic  memory   management,   a garbage   collector typically  has   the   responsibility for  reclaiming allocated memory   objects   whose contents can't   affect  any future  legal computation. such  objects  are identified  by determining   that  they can't   be  reached  from  a   root  set.   which of   the  following isn't part  of  the  root  set in a   typical   garbage  collector?"
        },
        "references": [
          {
            "output": {
              "text": "Actual parameters of the active procedures"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamically allocated objects on the heap"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Global variables of the program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Local variables on the call stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id77",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "In systems with support for automatic memory management, a garbage collector typically has the responsibility for reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects are identified by determining that they cannot be reached from a root set. Which of the following is NOT part of the root set in a typical garbage collector?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Actual parameters of the active procedures",
        "B": "Dynamically allocated objects on the heap",
        "C": "Global variables of the program",
        "D": "Local variables on the call stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: in   systems  witn   support for  automatic  memory   management,   a garbage   collector typically  has   the   responsibility for  reclaiming allocated memory   objects   whose contents can't   affect  any future  legal computation. such  objects  are identified  by determining   that  they can't   be  reached  from  a   root  set.   which of   the  following isn't part  of  the  root  set in a   typical   garbage  collector?\nA. Actual parameters of the active procedures\nB. Dynamically allocated objects on the heap\nC. Global variables of the program\nD. Local variables on the call stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.1602426916360855,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.1602426916360855
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1602427065372467,
              "max_token_negative_log_likelihood": 0.1602427065372467,
              "predictive_entropy": 0.13651669025421143,
              "shannon_entropy": 0.4195217788219452
            }
          }
        ],
        "cached": false,
        "request_time": 0.520240068435669,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "In systems w/ support fir automatic memory management, a garbage collector typically has da responsibility fir reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects r identified by determining dat they cannot b reached from a root set. Which of da following is NOT part of da root set in a typical garbage collector?"
        },
        "references": [
          {
            "output": {
              "text": "Actual parameters of da active procedures"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Dynamically allocated objects on da heap"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Global variables of da program"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Local variables on da call stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id77",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "In systems with support for automatic memory management, a garbage collector typically has the responsibility for reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects are identified by determining that they cannot be reached from a root set. Which of the following is NOT part of the root set in a typical garbage collector?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Actual parameters of da active procedures",
        "B": "Dynamically allocated objects on da heap",
        "C": "Global variables of da program",
        "D": "Local variables on da call stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: In systems w/ support fir automatic memory management, a garbage collector typically has da responsibility fir reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects r identified by determining dat they cannot b reached from a root set. Which of da following is NOT part of da root set in a typical garbage collector?\nA. Actual parameters of da active procedures\nB. Dynamically allocated objects on da heap\nC. Global variables of da program\nD. Local variables on da call stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.03581018000841141,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.03581018000841141
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.03581017255783081,
              "max_token_negative_log_likelihood": 0.03581017255783081,
              "predictive_entropy": 0.034550491720438004,
              "shannon_entropy": 0.15256600081920624
            }
          }
        ],
        "cached": false,
        "request_time": 0.5391080379486084,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following problems is (are) decidable?\nI. Given a (finite) string w, is w a prefix of the decimal expansion of \u03c0?\nII. Given a program and an input, is the program\u2019s output the decimal expansion of \u03c0?\nIII. Given a program that takes as input a prefix of the decimal expansion of \u03c0, is the program\u2019s output always the same for every prefix?"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id82"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following problems is (are) decidable?\nI. Given a (finite) string w, is w a prefix of the decimal expansion of \u03c0?\nII. Given a program and an input, is the program\u2019s output the decimal expansion of \u03c0?\nIII. Given a program that takes as input a prefix of the decimal expansion of \u03c0, is the program\u2019s output always the same for every prefix?\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.002552348654717207,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.002552348654717207
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0025523663498461246,
              "max_token_negative_log_likelihood": 0.0025523663498461246,
              "predictive_entropy": 0.002545860130339861,
              "shannon_entropy": 0.01954776607453823
            }
          }
        ],
        "cached": false,
        "request_time": 0.5294184684753418,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of   the following problems is (are)   decideable?\ni.  given   a (finite) string w,  is   w  a   prefix   of the decimal  expansion  of  \u03c0?\nii.  given a  program   and   an   input,   is  the  program\u2019s  output   the  decimal   expansion   of  \u03c0?\niii.   given   a   program   that takes  as input  a  prefix of   the decimal expansion of   \u03c0, is ther  program\u2019s  output always   the   same  for every prefix?"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id82",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following problems is (are) decidable?\nI. Given a (finite) string w, is w a prefix of the decimal expansion of \u03c0?\nII. Given a program and an input, is the program\u2019s output the decimal expansion of \u03c0?\nIII. Given a program that takes as input a prefix of the decimal expansion of \u03c0, is the program\u2019s output always the same for every prefix?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of   the following problems is (are)   decideable?\ni.  given   a (finite) string w,  is   w  a   prefix   of the decimal  expansion  of  \u03c0?\nii.  given a  program   and   an   input,   is  the  program\u2019s  output   the  decimal   expansion   of  \u03c0?\niii.   given   a   program   that takes  as input  a  prefix of   the decimal expansion of   \u03c0, is ther  program\u2019s  output always   the   same  for every prefix?\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.49359679222106934,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.49359679222106934
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.4935968220233917,
              "max_token_negative_log_likelihood": 0.4935968220233917,
              "predictive_entropy": 0.30130475759506226,
              "shannon_entropy": 0.8511240482330322
            }
          }
        ],
        "cached": false,
        "request_time": 0.5394148826599121,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following problems is (r) decidable?\nI. Given a (finite) string wid, is wit a prefix of da decimal expansion of \u03c0?\nII. Given a program and an input, is da program\u2019s output da decimal expansion of \u03c0?\nIII. Given a program dat takes as input a prefix of da decimal expansion of \u03c0, is da program\u2019s output always da same fa every prefix?"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id82",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following problems is (are) decidable?\nI. Given a (finite) string w, is w a prefix of the decimal expansion of \u03c0?\nII. Given a program and an input, is the program\u2019s output the decimal expansion of \u03c0?\nIII. Given a program that takes as input a prefix of the decimal expansion of \u03c0, is the program\u2019s output always the same for every prefix?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following problems is (r) decidable?\nI. Given a (finite) string wid, is wit a prefix of da decimal expansion of \u03c0?\nII. Given a program and an input, is da program\u2019s output da decimal expansion of \u03c0?\nIII. Given a program dat takes as input a prefix of da decimal expansion of \u03c0, is da program\u2019s output always da same fa every prefix?\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.22641007602214813,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.22641007602214813
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.22641006112098694,
              "max_token_negative_log_likelihood": 0.22641006112098694,
              "predictive_entropy": 0.1805373579263687,
              "shannon_entropy": 0.5107536315917969
            }
          }
        ],
        "cached": false,
        "request_time": 0.49458837509155273,
        "request_datetime": 1755797650
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let A and B be two sets of words (strings) from \u03a3*, for some alphabet of symbols \u03a3. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id30"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let A and B be two sets of words (strings) from \u03a3*, for some alphabet of symbols \u03a3. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -2.0265558760002023e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -2.0265558760002023e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 2.0265599687263602e-06,
              "max_token_negative_log_likelihood": 2.0265599687263602e-06,
              "predictive_entropy": 2.0265558760002023e-06,
              "shannon_entropy": 2.9085731512168422e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5418674945831299,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let  a and b  be   two sets  of  words   (strings)  from \u03c3*,  for  some alphabet   of  symbols  \u03c3.   supose  that b   is   a  subset of a.  which   of the  following   statements must  always   be   true   of   a and   b   ?\ni.  if a   is finite,  then   b  is finite.\nii.  if  a   is regular, then   b   is regular.\niii.  if  a is   context-free,  then  b is context-free."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id30",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let A and B be two sets of words (strings) from \u03a3*, for some alphabet of symbols \u03a3. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let  a and b  be   two sets  of  words   (strings)  from \u03c3*,  for  some alphabet   of  symbols  \u03c3.   supose  that b   is   a  subset of a.  which   of the  following   statements must  always   be   true   of   a and   b   ?\ni.  if a   is finite,  then   b  is finite.\nii.  if  a   is regular, then   b   is regular.\niii.  if  a is   context-free,  then  b is context-free.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.002331279218196869,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.002331279218196869
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.002331289928406477,
              "max_token_negative_log_likelihood": 0.002331289928406477,
              "predictive_entropy": 0.0023258612491190434,
              "shannon_entropy": 0.01648533344268799
            }
          }
        ],
        "cached": false,
        "request_time": 0.5068984031677246,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let A and B b two sets of words (strings) from \u03a3*, fir some alphabet of symbols \u03a3. Suppose dat B is a subset of A. Which of da following statements must always b true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id30",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let A and B be two sets of words (strings) from \u03a3*, for some alphabet of symbols \u03a3. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let A and B b two sets of words (strings) from \u03a3*, fir some alphabet of symbols \u03a3. Suppose dat B is a subset of A. Which of da following statements must always b true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -4.434487345861271e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -4.434487345861271e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 4.434683796716854e-05,
              "max_token_negative_log_likelihood": 4.434683796716854e-05,
              "predictive_entropy": 4.43448698206339e-05,
              "shannon_entropy": 0.0004974840558134019
            }
          }
        ],
        "cached": false,
        "request_time": 0.5358591079711914,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following is the name of the data structure in a compiler that is responsible for managing information about variables and their attributes?"
        },
        "references": [
          {
            "output": {
              "text": "Abstract Syntax Tree (AST)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Attribute Grammar"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Symbol Table"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Semantic Stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id42"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Abstract Syntax Tree (AST)",
        "B": "Attribute Grammar",
        "C": "Symbol Table",
        "D": "Semantic Stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following is the name of the data structure in a compiler that is responsible for managing information about variables and their attributes?\nA. Abstract Syntax Tree (AST)\nB. Attribute Grammar\nC. Symbol Table\nD. Semantic Stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 4.825596519597575e-12
            }
          }
        ],
        "cached": false,
        "request_time": 0.49535346031188965,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which   of the  following  is   the   name of  the  data   structure  in  a compiler that's   responsible  for   managing   information about variables   and their attributes?"
        },
        "references": [
          {
            "output": {
              "text": "Abstract Syntax Tree (AST)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Attribute Grammar"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Symbol Table"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Semantic Stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id42",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is the name of the data structure in a compiler that is responsible for managing information about variables and their attributes?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Abstract Syntax Tree (AST)",
        "B": "Attribute Grammar",
        "C": "Symbol Table",
        "D": "Semantic Stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which   of the  following  is   the   name of  the  data   structure  in  a compiler that's   responsible  for   managing   information about variables   and their attributes?\nA. Abstract Syntax Tree (AST)\nB. Attribute Grammar\nC. Symbol Table\nD. Semantic Stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 9.625715502448173e-11
            }
          }
        ],
        "cached": false,
        "request_time": 0.5268867015838623,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following is da name of da data structure in a compiler dat is responsible fir managing information bou variables and their attributes?"
        },
        "references": [
          {
            "output": {
              "text": "Abstract Syntax Tree (AST)"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Attribute Grammar"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Symbol Table"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Semantic Stack"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id42",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following is the name of the data structure in a compiler that is responsible for managing information about variables and their attributes?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Abstract Syntax Tree (AST)",
        "B": "Attribute Grammar",
        "C": "Symbol Table",
        "D": "Semantic Stack"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following is da name of da data structure in a compiler dat is responsible fir managing information bou variables and their attributes?\nA. Abstract Syntax Tree (AST)\nB. Attribute Grammar\nC. Symbol Table\nD. Semantic Stack\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 5.115265988564488e-10
            }
          }
        ],
        "cached": false,
        "request_time": 0.5109903812408447,
        "request_datetime": 1755797651
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following considerations applies (apply) to choosing the page size in a paging system?\nI. An advantage of larger pages is that they lead to smaller page tables.\nII. An advantage of smaller pages is that they lead to less waste due to internal fragmentation.\nIII. Normally, the dominant factor in disk access time is not dependent on page length, so longer pages can be used advantageously."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id86"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following considerations applies (apply) to choosing the page size in a paging system?\nI. An advantage of larger pages is that they lead to smaller page tables.\nII. An advantage of smaller pages is that they lead to less waste due to internal fragmentation.\nIII. Normally, the dominant factor in disk access time is not dependent on page length, so longer pages can be used advantageously.\nA. I only\nB. II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.03804141283035278,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.03804141283035278
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.03804141655564308,
              "max_token_negative_log_likelihood": 0.03804141655564308,
              "predictive_entropy": 0.036621447652578354,
              "shannon_entropy": 0.15935377776622772
            }
          }
        ],
        "cached": false,
        "request_time": 0.5341618061065674,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of   the  following  considerations   applies  (apply)  to   choosing   the page  size in   a   paging   system?\ni. an advantage of  larger  pages  is  that   they   lead   to   smaller   page   tables.\nii.  an  advantage  of smaller   pages  is   that they   lead   to   less   waste  due   to   internal   fragmentation.\niii.  normally,   the   dominent  factor  in disk  access timne  isnt  dependent on   page   length, so longer  pages   can   be unsed   advantageously."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id86",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following considerations applies (apply) to choosing the page size in a paging system?\nI. An advantage of larger pages is that they lead to smaller page tables.\nII. An advantage of smaller pages is that they lead to less waste due to internal fragmentation.\nIII. Normally, the dominant factor in disk access time is not dependent on page length, so longer pages can be used advantageously."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of   the  following  considerations   applies  (apply)  to   choosing   the page  size in   a   paging   system?\ni. an advantage of  larger  pages  is  that   they   lead   to   smaller   page   tables.\nii.  an  advantage  of smaller   pages  is   that they   lead   to   less   waste  due   to   internal   fragmentation.\niii.  normally,   the   dominent  factor  in disk  access timne  isnt  dependent on   page   length, so longer  pages   can   be unsed   advantageously.\nA. I only\nB. II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.005233753472566605,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.005233753472566605
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.005233727861195803,
              "max_token_negative_log_likelihood": 0.005233727861195803,
              "predictive_entropy": 0.005206407513469458,
              "shannon_entropy": 0.03263938054442406
            }
          }
        ],
        "cached": false,
        "request_time": 0.5200362205505371,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following considerations applies (apply) to choosing da page size in a paging system?\nI. An advantage of larger pages is dat they lead to smaller page tables.\nII. An advantage of smaller pages is dat they lead to less waste due to internal fragmentation.\nIII. Normally, da dominant factor in disk access time is not dependent on page length, soo longer pages can b used advantageously."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I, II, and III"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id86",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following considerations applies (apply) to choosing the page size in a paging system?\nI. An advantage of larger pages is that they lead to smaller page tables.\nII. An advantage of smaller pages is that they lead to less waste due to internal fragmentation.\nIII. Normally, the dominant factor in disk access time is not dependent on page length, so longer pages can be used advantageously."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and III only",
        "D": "I, II, and III"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following considerations applies (apply) to choosing da page size in a paging system?\nI. An advantage of larger pages is dat they lead to smaller page tables.\nII. An advantage of smaller pages is dat they lead to less waste due to internal fragmentation.\nIII. Normally, da dominant factor in disk access time is not dependent on page length, soo longer pages can b used advantageously.\nA. I only\nB. II only\nC. I and III only\nD. I, II, and III\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.5231232643127441,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.5231232643127441
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5231232047080994,
              "max_token_negative_log_likelihood": 0.5231232047080994,
              "predictive_entropy": 0.31003767251968384,
              "shannon_entropy": 0.6758732795715332
            }
          }
        ],
        "cached": false,
        "request_time": 0.5394365787506104,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following problems can be solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph with positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph with positive-integer edge capacities"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id102"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following problems can be solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph with positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph with positive-integer edge capacities\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -3.576278118089249e-07,
            "tokens": [
              {
                "text": "A",
                "logprob": -3.576278118089249e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 3.576279254957626e-07,
              "max_token_negative_log_likelihood": 3.576279254957626e-07,
              "predictive_entropy": 3.5762778338721546e-07,
              "shannon_entropy": 6.168133495521033e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5142519474029541,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which  of   the   following  problems  can   be   solved by  a   standard  greedy algoritm?\ni.   finding   a minimum spanning  tree  in an   undirected   graph  with   positive-integer   edge  weights\nii.  finding a  maximum clique  in   an undirected   graph\niii.   finding a   maximum  flow frome a source  node to a sink  node   in  a   directed graph with  positive-integer   edge   capacities"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id102",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following problems can be solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph with positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph with positive-integer edge capacities"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which  of   the   following  problems  can   be   solved by  a   standard  greedy algoritm?\ni.   finding   a minimum spanning  tree  in an   undirected   graph  with   positive-integer   edge  weights\nii.  finding a  maximum clique  in   an undirected   graph\niii.   finding a   maximum  flow frome a source  node to a sink  node   in  a   directed graph with  positive-integer   edge   capacities\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -7.033100700937212e-05,
            "tokens": [
              {
                "text": "A",
                "logprob": -7.033100700937212e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 7.033595466054976e-05,
              "max_token_negative_log_likelihood": 7.033595466054976e-05,
              "predictive_entropy": 7.033100700937212e-05,
              "shannon_entropy": 0.0007427273085340858
            }
          }
        ],
        "cached": false,
        "request_time": 0.5363883972167969,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following problems can b solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph wid positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph witt positive-integer edge capacities"
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id102",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following problems can be solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph with positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph with positive-integer edge capacities"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following problems can b solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph wid positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph witt positive-integer edge capacities\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.7719569314067485e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5113809108734131,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of the following statements about a remote procedure call is true?"
        },
        "references": [
          {
            "output": {
              "text": "It is used to call procedures with addresses that are farther than 2^16 bytes away."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot return a value."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot pass parameters by reference."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It cannot call procedures implemented in a different language."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id51"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is used to call procedures with addresses that are farther than 2^16 bytes away.",
        "B": "It cannot return a value.",
        "C": "It cannot pass parameters by reference.",
        "D": "It cannot call procedures implemented in a different language."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of the following statements about a remote procedure call is true?\nA. It is used to call procedures with addresses that are farther than 2^16 bytes away.\nB. It cannot return a value.\nC. It cannot pass parameters by reference.\nD. It cannot call procedures implemented in a different language.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.07482528686523438,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.07482528686523438
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07482525706291199,
              "max_token_negative_log_likelihood": 0.07482525706291199,
              "predictive_entropy": 0.06943077594041824,
              "shannon_entropy": 0.31446248292922974
            }
          }
        ],
        "cached": false,
        "request_time": 0.5306601524353027,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "which of  the  following statements about   a   remote   procedure  call   is   true?"
        },
        "references": [
          {
            "output": {
              "text": "It is used to call procedures with addresses that are farther than 2^16 bytes away."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot return a value."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot pass parameters by reference."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It cannot call procedures implemented in a different language."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id51",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about a remote procedure call is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is used to call procedures with addresses that are farther than 2^16 bytes away.",
        "B": "It cannot return a value.",
        "C": "It cannot pass parameters by reference.",
        "D": "It cannot call procedures implemented in a different language."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: which of  the  following statements about   a   remote   procedure  call   is   true?\nA. It is used to call procedures with addresses that are farther than 2^16 bytes away.\nB. It cannot return a value.\nC. It cannot pass parameters by reference.\nD. It cannot call procedures implemented in a different language.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -1.2388252019882202,
            "tokens": [
              {
                "text": "B",
                "logprob": -1.2388252019882202
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2388250827789307,
              "max_token_negative_log_likelihood": 1.2388250827789307,
              "predictive_entropy": 0.35891786217689514,
              "shannon_entropy": 0.8032525777816772
            }
          }
        ],
        "cached": false,
        "request_time": 0.5197210311889648,
        "request_datetime": 1755797652
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Which of da following statements bou a remote procedure call is tru?"
        },
        "references": [
          {
            "output": {
              "text": "It is used to call procedures wid addresses dat are farther den 2^16 bytes away."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot return a value."
            },
            "tags": []
          },
          {
            "output": {
              "text": "It cannot pass parameters by reference."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "It cannot call procedures implemented in a diff language."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id51",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Which of the following statements about a remote procedure call is true?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "It is used to call procedures wid addresses dat are farther den 2^16 bytes away.",
        "B": "It cannot return a value.",
        "C": "It cannot pass parameters by reference.",
        "D": "It cannot call procedures implemented in a diff language."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Which of da following statements bou a remote procedure call is tru?\nA. It is used to call procedures wid addresses dat are farther den 2^16 bytes away.\nB. It cannot return a value.\nC. It cannot pass parameters by reference.\nD. It cannot call procedures implemented in a diff language.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.5490633249282837,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.5490633249282837
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5490633845329285,
              "max_token_negative_log_likelihood": 0.5490633845329285,
              "predictive_entropy": 0.3170788586139679,
              "shannon_entropy": 0.6811953186988831
            }
          }
        ],
        "cached": false,
        "request_time": 0.524777889251709,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Local caching of files is common in distributed file systems, but it has the disadvantage that"
        },
        "references": [
          {
            "output": {
              "text": "Temporary inconsistencies among views of a file by different machines can result"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The file system is likely to be corrupted when a computer crashes"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A much higher amount of network traffic results"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Caching makes file migration impossible"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id105"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Temporary inconsistencies among views of a file by different machines can result",
        "B": "The file system is likely to be corrupted when a computer crashes",
        "C": "A much higher amount of network traffic results",
        "D": "Caching makes file migration impossible"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Local caching of files is common in distributed file systems, but it has the disadvantage that\nA. Temporary inconsistencies among views of a file by different machines can result\nB. The file system is likely to be corrupted when a computer crashes\nC. A much higher amount of network traffic results\nD. Caching makes file migration impossible\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 9.110071808038356e-09
            }
          }
        ],
        "cached": false,
        "request_time": 0.5141763687133789,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "local  caching of  files  is   common in   distributed  file  systems,  but it has   the disadvantage that"
        },
        "references": [
          {
            "output": {
              "text": "Temporary inconsistencies among views of a file by different machines can result"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The file system is likely to be corrupted when a computer crashes"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A much higher amount of network traffic results"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Caching makes file migration impossible"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id105",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Local caching of files is common in distributed file systems, but it has the disadvantage that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Temporary inconsistencies among views of a file by different machines can result",
        "B": "The file system is likely to be corrupted when a computer crashes",
        "C": "A much higher amount of network traffic results",
        "D": "Caching makes file migration impossible"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: local  caching of  files  is   common in   distributed  file  systems,  but it has   the disadvantage that\nA. Temporary inconsistencies among views of a file by different machines can result\nB. The file system is likely to be corrupted when a computer crashes\nC. A much higher amount of network traffic results\nD. Caching makes file migration impossible\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 9.491667896099898e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5274224281311035,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Local caching of files is common in distributed file systems, but it has da disadvantage that"
        },
        "references": [
          {
            "output": {
              "text": "Temporary inconsistencies among views of a file by diffrent machines can result"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "The file system is likely to b corrupted when a computer crashes"
            },
            "tags": []
          },
          {
            "output": {
              "text": "A much higher amount of network traffic results"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Caching makes file migration impossible"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id105",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Local caching of files is common in distributed file systems, but it has the disadvantage that"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Temporary inconsistencies among views of a file by diffrent machines can result",
        "B": "The file system is likely to b corrupted when a computer crashes",
        "C": "A much higher amount of network traffic results",
        "D": "Caching makes file migration impossible"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Local caching of files is common in distributed file systems, but it has da disadvantage that\nA. Temporary inconsistencies among views of a file by diffrent machines can result\nB. The file system is likely to b corrupted when a computer crashes\nC. A much higher amount of network traffic results\nD. Caching makes file migration impossible\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "A",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 4.9776101462839506e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5046124458312988,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Languages with a structure that implements abstract data types (e.g., a C++ class) can prevent access to components of this structure by all operations except those that are part of this structure. However, definitions of such a structure often contain declarations of components of the structure (e.g., the header file for a C++ class may contain declarations of its private components). For such a language, an object's name could be bound at run time to stack storage for its component values (direct representation) or to a stack pointer referencing heap storage for its component values (indirect representation). Which of the following statements about comparisons between direct and indirect representations is (are) true?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases the time needed to access components of a variable.\nIII. When the storage size of some private component of a variable changes, indirect representation minimizes the number of recompilations of source modules that must be performed."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id44"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Languages with a structure that implements abstract data types (e.g., a C++ class) can prevent access to components of this structure by all operations except those that are part of this structure. However, definitions of such a structure often contain declarations of components of the structure (e.g., the header file for a C++ class may contain declarations of its private components). For such a language, an object's name could be bound at run time to stack storage for its component values (direct representation) or to a stack pointer referencing heap storage for its component values (indirect representation). Which of the following statements about comparisons between direct and indirect representations is (are) true?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases the time needed to access components of a variable.\nIII. When the storage size of some private component of a variable changes, indirect representation minimizes the number of recompilations of source modules that must be performed.\nA. I only\nB. III only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.02067887969315052,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.02067887969315052
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.02067890763282776,
              "max_token_negative_log_likelihood": 0.02067890763282776,
              "predictive_entropy": 0.0202556811273098,
              "shannon_entropy": 0.1006716713309288
            }
          }
        ],
        "cached": false,
        "request_time": 0.5870552062988281,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "languages with a   structure   that implements abstract   data  types (e.g.,  a  c++   class)  can  prevent  access to  components of  this  structure  by  all  operations except  those   that   are  part   of   this  structure.  however, definitions   of  such  a structure often contain declarations  of   components  of  tghe   sturcture   (e.g.,  the header   file   for   a  c++ class  may   contian  declarations  of   its   private  components).   for  such a language,  an  object's   name   could  be  bound  at  run  time   to  stack storage  for  its component  values  (direct representation)  or  to   a stack  pointer  referencing heap storage   for   its   component values  (indirect representation). which   of the   following  statements abotu  comparisons  between direct   and   indirect representations is  (are) true?\ni. indirect   representation   noticeably increases   compilation time.\nii. direct representation  decreases  the  time needed  to access  components   of   a   variable.\niii.  when  the  storage size  of some private  component   of a  variable  changes,  indirect representation minimizes the   number   of   recompilations   of  source modules  that   must   be   performed."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id44",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Languages with a structure that implements abstract data types (e.g., a C++ class) can prevent access to components of this structure by all operations except those that are part of this structure. However, definitions of such a structure often contain declarations of components of the structure (e.g., the header file for a C++ class may contain declarations of its private components). For such a language, an object's name could be bound at run time to stack storage for its component values (direct representation) or to a stack pointer referencing heap storage for its component values (indirect representation). Which of the following statements about comparisons between direct and indirect representations is (are) true?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases the time needed to access components of a variable.\nIII. When the storage size of some private component of a variable changes, indirect representation minimizes the number of recompilations of source modules that must be performed."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: languages with a   structure   that implements abstract   data  types (e.g.,  a  c++   class)  can  prevent  access to  components of  this  structure  by  all  operations except  those   that   are  part   of   this  structure.  however, definitions   of  such  a structure often contain declarations  of   components  of  tghe   sturcture   (e.g.,  the header   file   for   a  c++ class  may   contian  declarations  of   its   private  components).   for  such a language,  an  object's   name   could  be  bound  at  run  time   to  stack storage  for  its component  values  (direct representation)  or  to   a stack  pointer  referencing heap storage   for   its   component values  (indirect representation). which   of the   following  statements abotu  comparisons  between direct   and   indirect representations is  (are) true?\ni. indirect   representation   noticeably increases   compilation time.\nii. direct representation  decreases  the  time needed  to access  components   of   a   variable.\niii.  when  the  storage size  of some private  component   of a  variable  changes,  indirect representation minimizes the   number   of   recompilations   of  source modules  that   must   be   performed.\nA. I only\nB. III only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.01850062794983387,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.01850062794983387
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.01850060001015663,
              "max_token_negative_log_likelihood": 0.01850060001015663,
              "predictive_entropy": 0.0181614737957716,
              "shannon_entropy": 0.09320273995399475
            }
          }
        ],
        "cached": false,
        "request_time": 0.5687191486358643,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Languages w/ a structure dat implements abstract data types (e.g., a C++ class) can prevent access to components of dis structure by alll operations except those dat are part of dis structure. However, definitions of such a structure often contain declarations of components of da structure (e.g., da header file fa a C++ class may contain declarations of its private components). Fa such a language, an object's name could b bound at run time to stack storage fa its component values (direct representation) or to a stack pointer referencing heap storage fir its component values (indirect representation). Which of da following statements bou comparisons between direct and indirect representations is (r) tru?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases da time needed to access components of a variable.\nIII. When da storage size of sum private component of a variable changes, indirect representation minimizes da number of recompilations of source modules dat must b performed."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id44",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Languages with a structure that implements abstract data types (e.g., a C++ class) can prevent access to components of this structure by all operations except those that are part of this structure. However, definitions of such a structure often contain declarations of components of the structure (e.g., the header file for a C++ class may contain declarations of its private components). For such a language, an object's name could be bound at run time to stack storage for its component values (direct representation) or to a stack pointer referencing heap storage for its component values (indirect representation). Which of the following statements about comparisons between direct and indirect representations is (are) true?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases the time needed to access components of a variable.\nIII. When the storage size of some private component of a variable changes, indirect representation minimizes the number of recompilations of source modules that must be performed."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "III only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Languages w/ a structure dat implements abstract data types (e.g., a C++ class) can prevent access to components of dis structure by alll operations except those dat are part of dis structure. However, definitions of such a structure often contain declarations of components of da structure (e.g., da header file fa a C++ class may contain declarations of its private components). Fa such a language, an object's name could b bound at run time to stack storage fa its component values (direct representation) or to a stack pointer referencing heap storage fir its component values (indirect representation). Which of da following statements bou comparisons between direct and indirect representations is (r) tru?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases da time needed to access components of a variable.\nIII. When da storage size of sum private component of a variable changes, indirect representation minimizes da number of recompilations of source modules dat must b performed.\nA. I only\nB. III only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.038815855979919434,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.038815855979919434
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.038815852254629135,
              "max_token_negative_log_likelihood": 0.038815852254629135,
              "predictive_entropy": 0.037338048219680786,
              "shannon_entropy": 0.16554978489875793
            }
          }
        ],
        "cached": false,
        "request_time": 0.6061649322509766,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider the following equations concerning a stack module that has the operations Push, Pop, Top, and IsEmpty. Which of the equations does NOT represent the conventional semantics of a stack?"
        },
        "references": [
          {
            "output": {
              "text": "IsEmpty(Push(Stack,Elem)) = true"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Pop(Push(Stack,Elem)) = Stack"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Top(Push(Stack,Elem)) = Elem"
            },
            "tags": []
          },
          {
            "output": {
              "text": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id70"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "IsEmpty(Push(Stack,Elem)) = true",
        "B": "Pop(Push(Stack,Elem)) = Stack",
        "C": "Top(Push(Stack,Elem)) = Elem",
        "D": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider the following equations concerning a stack module that has the operations Push, Pop, Top, and IsEmpty. Which of the equations does NOT represent the conventional semantics of a stack?\nA. IsEmpty(Push(Stack,Elem)) = true\nB. Pop(Push(Stack,Elem)) = Stack\nC. Top(Push(Stack,Elem)) = Elem\nD. IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.002099335426464677,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.002099335426464677
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.002099331934005022,
              "max_token_negative_log_likelihood": 0.002099331934005022,
              "predictive_entropy": 0.002094929339364171,
              "shannon_entropy": 0.015265189111232758
            }
          }
        ],
        "cached": false,
        "request_time": 0.5539066791534424,
        "request_datetime": 1755797653
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "consider the   following  equations  concerning   a stack module  that has  the  operations  push,  pop, top,   and isempty.   whlch   of  the   equations dosen't represent   the conventional   semantics of  a   stack?"
        },
        "references": [
          {
            "output": {
              "text": "IsEmpty(Push(Stack,Elem)) = true"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Pop(Push(Stack,Elem)) = Stack"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Top(Push(Stack,Elem)) = Elem"
            },
            "tags": []
          },
          {
            "output": {
              "text": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id70",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Consider the following equations concerning a stack module that has the operations Push, Pop, Top, and IsEmpty. Which of the equations does NOT represent the conventional semantics of a stack?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "IsEmpty(Push(Stack,Elem)) = true",
        "B": "Pop(Push(Stack,Elem)) = Stack",
        "C": "Top(Push(Stack,Elem)) = Elem",
        "D": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: consider the   following  equations  concerning   a stack module  that has  the  operations  push,  pop, top,   and isempty.   whlch   of  the   equations dosen't represent   the conventional   semantics of  a   stack?\nA. IsEmpty(Push(Stack,Elem)) = true\nB. Pop(Push(Stack,Elem)) = Stack\nC. Top(Push(Stack,Elem)) = Elem\nD. IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0005539313424378633,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0005539313424378633
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0005539401317946613,
              "max_token_negative_log_likelihood": 0.0005539401317946613,
              "predictive_entropy": 0.0005536333774216473,
              "shannon_entropy": 0.004713165573775768
            }
          }
        ],
        "cached": false,
        "request_time": 0.5526871681213379,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Consider da following equations concerning a stack module dat has da operations Push, Pop, Top, and IsEmpty. Which of da equations does NOT represent da conventional semantics of a stack?"
        },
        "references": [
          {
            "output": {
              "text": "IsEmpty(Push(Stack,Elem)) = true"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Pop(Push(Stack,Elem)) = Stack"
            },
            "tags": []
          },
          {
            "output": {
              "text": "Top(Push(Stack,Elem)) = Elem"
            },
            "tags": []
          },
          {
            "output": {
              "text": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id70",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Consider the following equations concerning a stack module that has the operations Push, Pop, Top, and IsEmpty. Which of the equations does NOT represent the conventional semantics of a stack?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "IsEmpty(Push(Stack,Elem)) = true",
        "B": "Pop(Push(Stack,Elem)) = Stack",
        "C": "Top(Push(Stack,Elem)) = Elem",
        "D": "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Consider da following equations concerning a stack module dat has da operations Push, Pop, Top, and IsEmpty. Which of da equations does NOT represent da conventional semantics of a stack?\nA. IsEmpty(Push(Stack,Elem)) = true\nB. Pop(Push(Stack,Elem)) = Stack\nC. Top(Push(Stack,Elem)) = Elem\nD. IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -0.0023335388395935297,
            "tokens": [
              {
                "text": "A",
                "logprob": -0.0023335388395935297
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.002333560260012746,
              "max_token_negative_log_likelihood": 0.002333560260012746,
              "predictive_entropy": 0.002328121103346348,
              "shannon_entropy": 0.016511021181941032
            }
          }
        ],
        "cached": false,
        "request_time": 0.5406033992767334,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Function signatures describe the types of the arguments to a function as well as the return value of the function. For instance, the addition function on reals has a signature of\nadd : real x real -> real\nsince it takes two real numbers and returns a real number. But, for a language that allows functions as return values, addition could be considered to have the signature\nadd : real -> (real -> real)\nwhich means that add takes a single real (the first operand) and returns a new function that itself takes a single real (the second operand) and returns a real (the result). This process of reducing a function with multiple arguments to a function with fewer arguments is called currying. Which of the following is correct?"
        },
        "references": [
          {
            "output": {
              "text": "Currying can be applied to any function to the point where it has exactly one input argument."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Currying cannot be applied to functions of more than two arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot be applied to functions that return functions as arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot be applied w functions that haw arguments that are functions."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id63"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Currying can be applied to any function to the point where it has exactly one input argument.",
        "B": "Currying cannot be applied to functions of more than two arguments.",
        "C": "Currying cannot be applied to functions that return functions as arguments.",
        "D": "Currying cannot be applied w functions that haw arguments that are functions."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Function signatures describe the types of the arguments to a function as well as the return value of the function. For instance, the addition function on reals has a signature of\nadd : real x real -> real\nsince it takes two real numbers and returns a real number. But, for a language that allows functions as return values, addition could be considered to have the signature\nadd : real -> (real -> real)\nwhich means that add takes a single real (the first operand) and returns a new function that itself takes a single real (the second operand) and returns a real (the result). This process of reducing a function with multiple arguments to a function with fewer arguments is called currying. Which of the following is correct?\nA. Currying can be applied to any function to the point where it has exactly one input argument.\nB. Currying cannot be applied to functions of more than two arguments.\nC. Currying cannot be applied to functions that return functions as arguments.\nD. Currying cannot be applied w functions that haw arguments that are functions.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "A",
            "logprob": -1.8048162460327148,
            "tokens": [
              {
                "text": "A",
                "logprob": -1.8048162460327148
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.8048162460327148,
              "max_token_negative_log_likelihood": 1.8048162460327148,
              "predictive_entropy": 0.2969007194042206,
              "shannon_entropy": 0.44781094789505005
            }
          }
        ],
        "cached": false,
        "request_time": 0.5786547660827637,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "function signatures  describe  ther types  of   the  arguments  to   a  function  as  well  as the return value   of   the   function.  for  instance,   the  addition   function on reals  has  a   signature   of\nadd   :  real x real  ->  real\nsince it  takes  twpo   real munbers and returns a  rela number.  but,   for a language   that   allows  functions as return  values,   addition  could be   concidered to  have the   signature\nadd :  real  ->   (rela ->   real)\nwhich  means   that  add   takes a  single  real (the  first   operand)  and  returns a   new   function   that  itself   takes  a single   real (the second  operand)   and  returns   a real  (the result).  this   process of reducing   a function   with multiple  arguments   to a   function   wih   fewer   arguments  is   called  currying.   which   of   the following is   correct?"
        },
        "references": [
          {
            "output": {
              "text": "Currying can be applied to any function to the point where it has exactly one input argument."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Currying cannot be applied to functions of more than two arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot be applied to functions that return functions as arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot be applied w functions that haw arguments that are functions."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id63",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Function signatures describe the types of the arguments to a function as well as the return value of the function. For instance, the addition function on reals has a signature of\nadd : real x real -> real\nsince it takes two real numbers and returns a real number. But, for a language that allows functions as return values, addition could be considered to have the signature\nadd : real -> (real -> real)\nwhich means that add takes a single real (the first operand) and returns a new function that itself takes a single real (the second operand) and returns a real (the result). This process of reducing a function with multiple arguments to a function with fewer arguments is called currying. Which of the following is correct?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Currying can be applied to any function to the point where it has exactly one input argument.",
        "B": "Currying cannot be applied to functions of more than two arguments.",
        "C": "Currying cannot be applied to functions that return functions as arguments.",
        "D": "Currying cannot be applied w functions that haw arguments that are functions."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: function signatures  describe  ther types  of   the  arguments  to   a  function  as  well  as the return value   of   the   function.  for  instance,   the  addition   function on reals  has  a   signature   of\nadd   :  real x real  ->  real\nsince it  takes  twpo   real munbers and returns a  rela number.  but,   for a language   that   allows  functions as return  values,   addition  could be   concidered to  have the   signature\nadd :  real  ->   (rela ->   real)\nwhich  means   that  add   takes a  single  real (the  first   operand)  and  returns a   new   function   that  itself   takes  a single   real (the second  operand)   and  returns   a real  (the result).  this   process of reducing   a function   with multiple  arguments   to a   function   wih   fewer   arguments  is   called  currying.   which   of   the following is   correct?\nA. Currying can be applied to any function to the point where it has exactly one input argument.\nB. Currying cannot be applied to functions of more than two arguments.\nC. Currying cannot be applied to functions that return functions as arguments.\nD. Currying cannot be applied w functions that haw arguments that are functions.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.2662906050682068,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.2662906050682068
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2662905752658844,
              "max_token_negative_log_likelihood": 0.2662905752658844,
              "predictive_entropy": 0.20403622090816498,
              "shannon_entropy": 0.5446903705596924
            }
          }
        ],
        "cached": false,
        "request_time": 0.5597290992736816,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Function signatures describe da types of da arguments to a function as well as da return value of da function. Fir instance, da addition function on reals has a signature of\nadd : real x real -> real\nsince it takes 2 real numbers and returns a real number. But, fir a language dat allows functions as return values, addition could b considered to have da signature\nadd : real -> (real -> real)\nwhich means dat add takes a single real (da first operand) and returns a new function dat itself takes a single real (da second operand) and returns a real (da result). Dis process of reducing a function witt multiple arguments to a function w fewer arguments is called currying. Which of da following is correct?"
        },
        "references": [
          {
            "output": {
              "text": "Currying can b applied to any function to da point where it has exactly one input argument."
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "Currying cannot b applied to functions of more den two arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot b applied to functions dat return functions as arguments."
            },
            "tags": []
          },
          {
            "output": {
              "text": "Currying cannot b applied wit functions dat haw arguments dat are functions."
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id63",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Function signatures describe the types of the arguments to a function as well as the return value of the function. For instance, the addition function on reals has a signature of\nadd : real x real -> real\nsince it takes two real numbers and returns a real number. But, for a language that allows functions as return values, addition could be considered to have the signature\nadd : real -> (real -> real)\nwhich means that add takes a single real (the first operand) and returns a new function that itself takes a single real (the second operand) and returns a real (the result). This process of reducing a function with multiple arguments to a function with fewer arguments is called currying. Which of the following is correct?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "Currying can b applied to any function to da point where it has exactly one input argument.",
        "B": "Currying cannot b applied to functions of more den two arguments.",
        "C": "Currying cannot b applied to functions dat return functions as arguments.",
        "D": "Currying cannot b applied wit functions dat haw arguments dat are functions."
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Function signatures describe da types of da arguments to a function as well as da return value of da function. Fir instance, da addition function on reals has a signature of\nadd : real x real -> real\nsince it takes 2 real numbers and returns a real number. But, fir a language dat allows functions as return values, addition could b considered to have da signature\nadd : real -> (real -> real)\nwhich means dat add takes a single real (da first operand) and returns a new function dat itself takes a single real (da second operand) and returns a real (da result). Dis process of reducing a function witt multiple arguments to a function w fewer arguments is called currying. Which of da following is correct?\nA. Currying can b applied to any function to da point where it has exactly one input argument.\nB. Currying cannot b applied to functions of more den two arguments.\nC. Currying cannot b applied to functions dat return functions as arguments.\nD. Currying cannot b applied wit functions dat haw arguments dat are functions.\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0448615625500679,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0448615625500679
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.044861551374197006,
              "max_token_negative_log_likelihood": 0.044861551374197006,
              "predictive_entropy": 0.04289346933364868,
              "shannon_entropy": 0.1878429353237152
            }
          }
        ],
        "cached": false,
        "request_time": 0.5966055393218994,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An integer c is a common divisor of two integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of the following sets of integers could possibly be the set of all common divisors of two integers?"
        },
        "references": [
          {
            "output": {
              "text": "{-6,-2, -1, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -2, -1, 0, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 1, 2, 3, 6}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id17"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{-6,-2, -1, 1, 2, 6}",
        "B": "{-6, -2, -1, 0, 1, 2, 6}",
        "C": "{-6, -3, -2, -1, 1, 2, 3, 6}",
        "D": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An integer c is a common divisor of two integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of the following sets of integers could possibly be the set of all common divisors of two integers?\nA. {-6,-2, -1, 1, 2, 6}\nB. {-6, -2, -1, 0, 1, 2, 6}\nC. {-6, -3, -2, -1, 1, 2, 3, 6}\nD. {-6, -3, -2, -1, 0, 1, 2, 3, 6}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -7.390948667307384e-06,
            "tokens": [
              {
                "text": "D",
                "logprob": -7.390948667307384e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 7.391003236989491e-06,
              "max_token_negative_log_likelihood": 7.391003236989491e-06,
              "predictive_entropy": 7.390948667307384e-06,
              "shannon_entropy": 9.727732685860246e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5475900173187256,
        "request_datetime": 1755797654
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "an integer  c is  a  common  divisor of two  integers  x  and  y if   and  only  if   c is a   divisor   of  x   and c  is   a divisor of   y.  which   of   the   following  sets of  integers   could  possibly  be   the set  of   all   common  divisors   of two   integers?"
        },
        "references": [
          {
            "output": {
              "text": "{-6,-2, -1, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -2, -1, 0, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 1, 2, 3, 6}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id17",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "An integer c is a common divisor of two integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of the following sets of integers could possibly be the set of all common divisors of two integers?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{-6,-2, -1, 1, 2, 6}",
        "B": "{-6, -2, -1, 0, 1, 2, 6}",
        "C": "{-6, -3, -2, -1, 1, 2, 3, 6}",
        "D": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: an integer  c is  a  common  divisor of two  integers  x  and  y if   and  only  if   c is a   divisor   of  x   and c  is   a divisor of   y.  which   of   the   following  sets of  integers   could  possibly  be   the set  of   all   common  divisors   of two   integers?\nA. {-6,-2, -1, 1, 2, 6}\nB. {-6, -2, -1, 0, 1, 2, 6}\nC. {-6, -3, -2, -1, 1, 2, 3, 6}\nD. {-6, -3, -2, -1, 0, 1, 2, 3, 6}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.0004409771354403347,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.0004409771354403347
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0004409927933011204,
              "max_token_negative_log_likelihood": 0.0004409927933011204,
              "predictive_entropy": 0.00044079835060983896,
              "shannon_entropy": 0.0038971337489783764
            }
          }
        ],
        "cached": false,
        "request_time": 0.5732250213623047,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "An integer c is a common divisor of 2 integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of da following sets of integers could possibly b the set of alll common divisors of 2 integers?"
        },
        "references": [
          {
            "output": {
              "text": "{-6,-2, -1, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -2, -1, 0, 1, 2, 6}"
            },
            "tags": []
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 1, 2, 3, 6}"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id17",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "An integer c is a common divisor of two integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of the following sets of integers could possibly be the set of all common divisors of two integers?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "{-6,-2, -1, 1, 2, 6}",
        "B": "{-6, -2, -1, 0, 1, 2, 6}",
        "C": "{-6, -3, -2, -1, 1, 2, 3, 6}",
        "D": "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: An integer c is a common divisor of 2 integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of da following sets of integers could possibly b the set of alll common divisors of 2 integers?\nA. {-6,-2, -1, 1, 2, 6}\nB. {-6, -2, -1, 0, 1, 2, 6}\nC. {-6, -3, -2, -1, 1, 2, 3, 6}\nD. {-6, -3, -2, -1, 0, 1, 2, 3, 6}\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -9.16677454370074e-05,
            "tokens": [
              {
                "text": "D",
                "logprob": -9.16677454370074e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 9.167614916805178e-05,
              "max_token_negative_log_likelihood": 9.167614916805178e-05,
              "predictive_entropy": 9.16677454370074e-05,
              "shannon_entropy": 0.0009511357638984919
            }
          }
        ],
        "cached": false,
        "request_time": 0.555208683013916,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A program that checks spelling works in the following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in the dictionary, and the appropriate entry in the hash table has been set to true. To check the spelling in a document, the hash function is applied to every word in the document, and the appropriate entry in the hash table is examined. Which of the following is (are) correct?\nI. true means the word was in the dictionary.\nII. false means the word was not in the dictionary.\nIII. Hash table size should increase with document size."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id103"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A program that checks spelling works in the following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in the dictionary, and the appropriate entry in the hash table has been set to true. To check the spelling in a document, the hash function is applied to every word in the document, and the appropriate entry in the hash table is examined. Which of the following is (are) correct?\nI. true means the word was in the dictionary.\nII. false means the word was not in the dictionary.\nIII. Hash table size should increase with document size.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -1.1920928244535389e-07,
            "tokens": [
              {
                "text": "C",
                "logprob": -1.1920928244535389e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1920930376163597e-07,
              "max_token_negative_log_likelihood": 1.1920930376163597e-07,
              "predictive_entropy": 1.1920928955078125e-07,
              "shannon_entropy": 1.1724669093382545e-06
            }
          }
        ],
        "cached": false,
        "request_time": 0.5801956653594971,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "a  program   that  checks   spelling  works in   the  following way.  a   hash table  has  been defined   in   which   each  entry  is  a boolean  variable initialized   to   false.   a   hash function has been  applied to each   word   in   the dictionary,  and   the appropriate   entry  in   the  hash table   has been set   to true.  to   check   ther   spelling  in  a   document,  hten   hash  function   is  applied  to   every  word in the   document, and the appropriate entry  in the  hash table is  examined.   which   of the  following is (are) correct?\ni.  true   means   the word   was   in  the  dictionary.\nii.  false  means   the  word wasn't in the  dictionary.\niii. hash   table  size should increase with  document  size."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id103",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "A program that checks spelling works in the following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in the dictionary, and the appropriate entry in the hash table has been set to true. To check the spelling in a document, the hash function is applied to every word in the document, and the appropriate entry in the hash table is examined. Which of the following is (are) correct?\nI. true means the word was in the dictionary.\nII. false means the word was not in the dictionary.\nIII. Hash table size should increase with document size."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: a  program   that  checks   spelling  works in   the  following way.  a   hash table  has  been defined   in   which   each  entry  is  a boolean  variable initialized   to   false.   a   hash function has been  applied to each   word   in   the dictionary,  and   the appropriate   entry  in   the  hash table   has been set   to true.  to   check   ther   spelling  in  a   document,  hten   hash  function   is  applied  to   every  word in the   document, and the appropriate entry  in the  hash table is  examined.   which   of the  following is (are) correct?\ni.  true   means   the word   was   in  the  dictionary.\nii.  false  means   the  word wasn't in the  dictionary.\niii. hash   table  size should increase with  document  size.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -9.536738616588991e-07,
            "tokens": [
              {
                "text": "C",
                "logprob": -9.536738616588991e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 9.536747711536009e-07,
              "max_token_negative_log_likelihood": 9.536747711536009e-07,
              "predictive_entropy": 9.536738616588991e-07,
              "shannon_entropy": 1.4073822057980578e-05
            }
          }
        ],
        "cached": false,
        "request_time": 0.5580649375915527,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "A program dat checks spelling works in da following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in da dictionary, and da appropriate entry in da hash table has been set to tru. To check da spelling in a document, da hash function is applied to every word in da document, and da appropriate entry in da hash table is examined. Which of da following is (r) correct?\nI. tru means da word was in da dictionary.\nII. false means da word was not in da dictionary.\nIII. Hash table size should increase wid document size."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II and III only"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id103",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "A program that checks spelling works in the following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in the dictionary, and the appropriate entry in the hash table has been set to true. To check the spelling in a document, the hash function is applied to every word in the document, and the appropriate entry in the hash table is examined. Which of the following is (are) correct?\nI. true means the word was in the dictionary.\nII. false means the word was not in the dictionary.\nIII. Hash table size should increase with document size."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "I and II only",
        "D": "II and III only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: A program dat checks spelling works in da following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in da dictionary, and da appropriate entry in da hash table has been set to tru. To check da spelling in a document, da hash function is applied to every word in da document, and da appropriate entry in da hash table is examined. Which of da following is (r) correct?\nI. tru means da word was in da dictionary.\nII. false means da word was not in da dictionary.\nIII. Hash table size should increase wid document size.\nA. I only\nB. II only\nC. I and II only\nD. II and III only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": 0.0,
            "tokens": [
              {
                "text": "C",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.0,
              "max_token_negative_log_likelihood": 0,
              "predictive_entropy": 0.0,
              "shannon_entropy": 2.981975200100351e-08
            }
          }
        ],
        "cached": false,
        "request_time": 0.5809526443481445,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "To compute the matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and the result is a matrix of p rows and r columns. Consider the product of three matrices N_1N_2N_3 that have, respectively, w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (N_1N_2)N_3 (i.e., multiply the first two matrices first) than to compute it as N_1(N_2 N_3)?"
        },
        "references": [
          {
            "output": {
              "text": "There is no such condition; i.e., they will always take the same time."
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/x + 1/z < 1/w + 1/y"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "x > y"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/w + 1/x < 1/y + 1/z"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id93"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "There is no such condition; i.e., they will always take the same time.",
        "B": "1/x + 1/z < 1/w + 1/y",
        "C": "x > y",
        "D": "1/w + 1/x < 1/y + 1/z"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: To compute the matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and the result is a matrix of p rows and r columns. Consider the product of three matrices N_1N_2N_3 that have, respectively, w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (N_1N_2)N_3 (i.e., multiply the first two matrices first) than to compute it as N_1(N_2 N_3)?\nA. There is no such condition; i.e., they will always take the same time.\nB. 1/x + 1/z < 1/w + 1/y\nC. x > y\nD. 1/w + 1/x < 1/y + 1/z\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -1.752800703048706,
            "tokens": [
              {
                "text": "D",
                "logprob": -1.752800703048706
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.7528005838394165,
              "max_token_negative_log_likelihood": 1.7528005838394165,
              "predictive_entropy": 0.3037392199039459,
              "shannon_entropy": 0.46108320355415344
            }
          }
        ],
        "cached": false,
        "request_time": 0.5502512454986572,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "to   compute  the  matrix  product  m_1m_2, where  m_1   has p   rows and   q columns   and  where  m_2  has  q   rows  and  r   columns, takes  time  proportional to pqr,  and  the  result is  a matrix of   p rows   and   r   columns.  consider  the   product of three matrices  n_1n_2n_3 that have, respectively,   w rows  and   x columns,  x rows and y  columns, anbd y  rows   and  z columns.   under whta   condition   will  it  take   less time to   compute the  product   as  (n_1n_2)n_3  (i.e., multiply  the first   two matrices   first)  than to compute it  as   n_1(n_2  n_3)?"
        },
        "references": [
          {
            "output": {
              "text": "There is no such condition; i.e., they will always take the same time."
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/x + 1/z < 1/w + 1/y"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "x > y"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/w + 1/x < 1/y + 1/z"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id93",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "To compute the matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and the result is a matrix of p rows and r columns. Consider the product of three matrices N_1N_2N_3 that have, respectively, w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (N_1N_2)N_3 (i.e., multiply the first two matrices first) than to compute it as N_1(N_2 N_3)?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "There is no such condition; i.e., they will always take the same time.",
        "B": "1/x + 1/z < 1/w + 1/y",
        "C": "x > y",
        "D": "1/w + 1/x < 1/y + 1/z"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: to   compute  the  matrix  product  m_1m_2, where  m_1   has p   rows and   q columns   and  where  m_2  has  q   rows  and  r   columns, takes  time  proportional to pqr,  and  the  result is  a matrix of   p rows   and   r   columns.  consider  the   product of three matrices  n_1n_2n_3 that have, respectively,   w rows  and   x columns,  x rows and y  columns, anbd y  rows   and  z columns.   under whta   condition   will  it  take   less time to   compute the  product   as  (n_1n_2)n_3  (i.e., multiply  the first   two matrices   first)  than to compute it  as   n_1(n_2  n_3)?\nA. There is no such condition; i.e., they will always take the same time.\nB. 1/x + 1/z < 1/w + 1/y\nC. x > y\nD. 1/w + 1/x < 1/y + 1/z\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.34844523668289185,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.34844523668289185
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.34844523668289185,
              "max_token_negative_log_likelihood": 0.34844523668289185,
              "predictive_entropy": 0.24592727422714233,
              "shannon_entropy": 0.6058928370475769
            }
          }
        ],
        "cached": false,
        "request_time": 0.5949501991271973,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "To compute da matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and da result is a matrix of p rows and r columns. Consider da product of three matrices N_1N_2N_3 dat have, respectively, wid rows and x columns, x rows and y columns, and y rows and z columns. Under wht condition gon it take less time to compute da product as (N_1N_2)N_3 (i.e., multiply da first 2 matrices first) den to compute it as N_1(N_2 N_3)?"
        },
        "references": [
          {
            "output": {
              "text": "There is no such condition; i.e., they gon always take da same time."
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/x + 1/z < 1/wit + 1/y"
            },
            "tags": [
              "correct"
            ]
          },
          {
            "output": {
              "text": "x > y"
            },
            "tags": []
          },
          {
            "output": {
              "text": "1/wid + 1/x < 1/y + 1/z"
            },
            "tags": []
          }
        ],
        "split": "test",
        "id": "id93",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "To compute the matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and the result is a matrix of p rows and r columns. Consider the product of three matrices N_1N_2N_3 that have, respectively, w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (N_1N_2)N_3 (i.e., multiply the first two matrices first) than to compute it as N_1(N_2 N_3)?"
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "There is no such condition; i.e., they gon always take da same time.",
        "B": "1/x + 1/z < 1/wit + 1/y",
        "C": "x > y",
        "D": "1/wid + 1/x < 1/y + 1/z"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: To compute da matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and da result is a matrix of p rows and r columns. Consider da product of three matrices N_1N_2N_3 dat have, respectively, wid rows and x columns, x rows and y columns, and y rows and z columns. Under wht condition gon it take less time to compute da product as (N_1N_2)N_3 (i.e., multiply da first 2 matrices first) den to compute it as N_1(N_2 N_3)?\nA. There is no such condition; i.e., they gon always take da same time.\nB. 1/x + 1/z < 1/wit + 1/y\nC. x > y\nD. 1/wid + 1/x < 1/y + 1/z\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "B",
            "logprob": -0.17974615097045898,
            "tokens": [
              {
                "text": "B",
                "logprob": -0.17974615097045898
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1797461211681366,
              "max_token_negative_log_likelihood": 0.1797461211681366,
              "predictive_entropy": 0.15017470717430115,
              "shannon_entropy": 0.44710594415664673
            }
          }
        ],
        "cached": false,
        "request_time": 0.5743997097015381,
        "request_datetime": 1755797655
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?\nI. G has a vertex with no incoming edge.\nII. G has a vertex with no outgoing edge.\nIII. G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id75"
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?\nI. G has a vertex with no incoming edge.\nII. G has a vertex with no outgoing edge.\nIII. G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.19179485738277435,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.19179485738277435
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.19179488718509674,
              "max_token_negative_log_likelihood": 0.19179488718509674,
              "predictive_entropy": 0.15832211077213287,
              "shannon_entropy": 0.5849965214729309
            }
          }
        ],
        "cached": false,
        "request_time": 0.5755031108856201,
        "request_datetime": 1755797656
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "let  g   =  (v,   e)  be a  finite directed   acyclic   graph with  |e|  >   0.   which of   the  following must  be true?\ni.  g  has a   vertex   with  no  incoming edge.\nii. g has   a   vertex   with no   outgoing edge.\niii.   g has  an  isolated  vertex, that is,  one  with neither  an incoming   edge   nor  an   outgoing  edge."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id75",
        "perturbation": {
          "name": "mild_mix",
          "robustness": true,
          "fairness": false,
          "computed_on": "perturbed"
        },
        "contrast_inputs": [
          {
            "text": "Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?\nI. G has a vertex with no incoming edge.\nII. G has a vertex with no outgoing edge.\nIII. G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: let  g   =  (v,   e)  be a  finite directed   acyclic   graph with  |e|  >   0.   which of   the  following must  be true?\ni.  g  has a   vertex   with  no  incoming edge.\nii. g has   a   vertex   with no   outgoing edge.\niii.   g has  an  isolated  vertex, that is,  one  with neither  an incoming   edge   nor  an   outgoing  edge.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "D",
            "logprob": -0.03710557147860527,
            "tokens": [
              {
                "text": "D",
                "logprob": -0.03710557147860527
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.03710556402802467,
              "max_token_negative_log_likelihood": 0.03710556402802467,
              "predictive_entropy": 0.035753972828388214,
              "shannon_entropy": 0.18062227964401245
            }
          }
        ],
        "cached": false,
        "request_time": 0.5534999370574951,
        "request_datetime": 1755797656
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "Let G = (V, E) b a finite directed acyclic graph w/ |E| > 0. Which of da following must b true?\nI. G has a vertex w/ no incoming edge.\nII. G has a vertex wit no outgoing edge.\nIII. G has an isolated vertex, dat is, one wit neither an incoming edge nor an outgoing edge."
        },
        "references": [
          {
            "output": {
              "text": "I only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "II only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "III only"
            },
            "tags": []
          },
          {
            "output": {
              "text": "I and II only"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id75",
        "perturbation": {
          "name": "dialect",
          "robustness": false,
          "fairness": true,
          "computed_on": "perturbed",
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": "src/data/helm/perturbations/dialect/SAE_to_AAVE_mapping.json"
        },
        "contrast_inputs": [
          {
            "text": "Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?\nI. G has a vertex with no incoming edge.\nII. G has a vertex with no outgoing edge.\nIII. G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge."
          }
        ]
      },
      "train_trial_index": 0,
      "output_mapping": {
        "A": "I only",
        "B": "II only",
        "C": "III only",
        "D": "I and II only"
      },
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "The following are multiple choice questions (with answers) about college computer science.\n\nQuestion: A certain pipelined RISC machine has 8 general-purpose registers R0, R1, . . . , R7 and supports the following operations.\nADD Rs1, Rs2, Rd Add Rs1 to Rs2 and put the sum in Rd\nMUL Rs1, Rs2, Rd Multiply Rs1 by Rs2 and put the product in Rd\nAn operation normally takes one cycle; however, an operation takes two cycles if it produces a result required by the immediately following operation in an operation sequence. Consider the expression AB + ABC + BC, where variables A, B, C are located in registers R0, R1, R2. If the contents of these three registers must not be modified, what is the minimum number of clock cycles required for an operation sequence that computes the value of AB + ABC + BC?\nA. 5\nB. 6\nC. 7\nD. 8\nAnswer: B\n\nQuestion: Consider a computer design in which multiple processors, each with a private cache memory, share global memory using a single bus. This bus is the critical system resource. Each processor can execute one instruction every 500 nanoseconds as long as memory references are satisfied by its local cache. When a cache miss occurs, the processor is delayed for an additional 2,000 nanoseconds. During half of this additional delay, the bus is dedicated to serving the cache miss. During the other half, the processor cannot continue, but the bus is free to service requests from other processors. On average, each instruction requires 2 memory references. On average, cache misses occur on 1 percent of references. What proportion of the capacity of the bus would a single processor consume, ignoring delays due to competition from other processors?\nA. 1/50\nB. 1/27\nC. 1/25\nD. 2/27\nAnswer: B\n\nQuestion: Which of the following regular expressions is equivalent to (describes the same set of strings as) (a* + b)*(c + d)?\nA. a*(c + d)+ b(c + d)\nB. a*(c + d)* + b(c + d)*\nC. a*(c + d)+ b*(c + d)\nD. (a + b)*c +(a + b)*d\nAnswer: D\n\nQuestion: The Singleton design pattern is used to guarantee that only a single instance of a class may be instantiated. Which of the following is (are) true of this design pattern?\nI. The Singleton class has a static factory method to provide its instance.\nII. The Singleton class can be a subclass of another class.\nIII. The Singleton class has a private constructor.\nA. I only\nB. II only\nC. III only\nD. I, II, and III\nAnswer: D\n\nQuestion: A compiler generates code for the following assignment statement.\nG := (A + B) * C - (D + E) * F\nThe target machine has a single accumulator and a single-address instruction set consisting of instructions load, store, add, subtract, and multiply. For the arithmetic operations, the left operand is taken from the accumulator and the result appears in the accumulator. The smallest possible number of instructions in the resulting code is\nA. 5\nB. 6\nC. 7\nD. 9\nAnswer: D\n\nQuestion: Let G = (V, E) b a finite directed acyclic graph w/ |E| > 0. Which of da following must b true?\nI. G has a vertex w/ no incoming edge.\nII. G has a vertex wit no outgoing edge.\nIII. G has an isolated vertex, dat is, one wit neither an incoming edge nor an outgoing edge.\nA. I only\nB. II only\nC. III only\nD. I and II only\nAnswer:",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 5,
        "max_tokens": 1,
        "stop_sequences": [],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "C",
            "logprob": -0.2196691930294037,
            "tokens": [
              {
                "text": "C",
                "logprob": -0.2196691930294037
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2196691930294037,
              "max_token_negative_log_likelihood": 0.2196691930294037,
              "predictive_entropy": 0.17634698748588562,
              "shannon_entropy": 0.5253218412399292
            }
          }
        ],
        "cached": false,
        "request_time": 0.39895009994506836,
        "request_datetime": 1755797656
      },
      "num_train_instances": 5,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    }
  ]
}