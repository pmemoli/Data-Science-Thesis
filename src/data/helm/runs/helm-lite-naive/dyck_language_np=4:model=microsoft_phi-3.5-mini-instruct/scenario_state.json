{
  "adapter_spec": {
    "method": "generation",
    "global_prefix": "",
    "global_suffix": "",
    "instructions": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n",
    "input_prefix": "Input: ",
    "input_suffix": "",
    "reference_prefix": "A. ",
    "reference_suffix": "\n",
    "chain_of_thought_prefix": "",
    "chain_of_thought_suffix": "\n",
    "output_prefix": "",
    "output_suffix": "",
    "instance_prefix": "\n",
    "substitutions": [],
    "max_train_instances": 3,
    "max_eval_instances": 100,
    "num_outputs": 1,
    "num_train_trials": 1,
    "num_trials": 1,
    "sample_train": true,
    "model_deployment": "huggingface/phi-3.5-mini-instruct",
    "model": "microsoft/phi-3.5-mini-instruct",
    "temperature": 0.0,
    "max_tokens": 5,
    "stop_sequences": [
      "\n"
    ],
    "multi_label": false
  },
  "request_states": [
    {
      "instance": {
        "input": {
          "text": "< < ( { { } } ) [ < { ( ( < [ ] ( < [ ] > ) { < > } > [ ( ) { ( ) } ] ) ) } > ] ( { } < < > > ) [ ] > > { { ( < [ { ( { < > } ) } ] { < { < [ ] > < > } < > > } > )"
        },
        "references": [
          {
            "output": {
              "text": " } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id93"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < < ( { { } } ) [ < { ( ( < [ ] ( < [ ] > ) { < > } > [ ( ) { ( ) } ] ) ) } > ] ( { } < < > > ) [ ] > > { { ( < [ { ( { < > } ) } ] { < { < [ ] > < > } < > > } > )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < < (",
            "logprob": -1.9266046861375798,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.4713830947875977
              },
              {
                "text": ":",
                "logprob": -0.002731166547164321
              },
              {
                "text": "<",
                "logprob": -0.4522136449813843
              },
              {
                "text": "<",
                "logprob": -0.0002090712368953973
              },
              {
                "text": "(",
                "logprob": -6.770858453819528e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.38532090688677273,
              "max_token_negative_log_likelihood": 1.471382975578308,
              "predictive_entropy": 0.1257095710534486,
              "shannon_entropy": 0.39466280760243533
            }
          }
        ],
        "cached": false,
        "request_time": 0.5158703327178955,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ { < > } [ ( { [ [ ( ) ] ] } ) ] ] < ( [ ( ( { ( < ( [ ] ) > { } ) } ) ( ) < ( [ < ( { < > } ) > ] ) > [ ] ) { } ] ( { [ ] }"
        },
        "references": [
          {
            "output": {
              "text": " ) ) >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id257"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ { < > } [ ( { [ [ ( ) ] ] } ) ] ] < ( [ ( ( { ( < ( [ ] ) > { } ) } ) ( ) < ( [ < ( { < > } ) > ] ) > [ ] ) { } ] ( { [ ] }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.9784155196894062,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.9293189644813538
              },
              {
                "text": "are",
                "logprob": -0.001794158248230815
              },
              {
                "text": "the",
                "logprob": -4.0531076592742465e-06
              },
              {
                "text": "completed",
                "logprob": -0.041962966322898865
              },
              {
                "text": "Dy",
                "logprob": -0.005335377529263496
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.19568310131016914,
              "max_token_negative_log_likelihood": 0.9293189644813538,
              "predictive_entropy": 0.08285130222629959,
              "shannon_entropy": 0.32146464376710354
            }
          }
        ],
        "cached": false,
        "request_time": 0.5768716335296631,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { ( ( < < > > ) [ ] ( < [ { } ( ) [ { { < ( [ < < > > [ ( ) ] ] ) > } } ] { [ ] } ] > ) ( < < < > > > ( ) ) ) } > [ { { ( )"
        },
        "references": [
          {
            "output": {
              "text": " } } ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id286"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { ( ( < < > > ) [ ] ( < [ { } ( ) [ { { < ( [ < < > > [ ( ) ] ] ) > } } ] { [ ] } ] > ) ( < < < > > > ( ) ) ) } > [ { { ( )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -2.3013585875742137,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.7977021932601929
              },
              {
                "text": ":",
                "logprob": -0.0036516194231808186
              },
              {
                "text": "(",
                "logprob": -0.974636435508728
              },
              {
                "text": "{",
                "logprob": -0.0017563169822096825
              },
              {
                "text": "[",
                "logprob": -0.5236120223999023
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.460271711088717,
              "max_token_negative_log_likelihood": 0.974636435508728,
              "predictive_entropy": 0.20851631246041508,
              "shannon_entropy": 0.5363233029842377
            }
          }
        ],
        "cached": false,
        "request_time": 0.5776693820953369,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ [ { [ ] ( { [ ] } ) [ ( < { < > } > ) ] { { } } } ] ] ( [ < ( < < < < [ < > ] > > > > ) > ] ) { } < ( )"
        },
        "references": [
          {
            "output": {
              "text": " > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id448"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ [ { [ ] ( { [ ] } ) [ ( < { < > } > ) ] { { } } } ] ] ( [ < ( < < < < [ < > ] > > > > ) > ] ) { } < ( )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8020879399177829,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7403728365898132
              },
              {
                "text": "are",
                "logprob": -0.0012904420727863908
              },
              {
                "text": "the",
                "logprob": -4.172316494077677e-06
              },
              {
                "text": "completed",
                "logprob": -0.054374270141124725
              },
              {
                "text": "Dy",
                "logprob": -0.0060462187975645065
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.16041759189856747,
              "max_token_negative_log_likelihood": 0.7403728365898132,
              "predictive_entropy": 0.08238198295994152,
              "shannon_entropy": 0.36509584987725247
            }
          }
        ],
        "cached": false,
        "request_time": 0.5049822330474854,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< < < < > > > < ( [ ( < { < { } > } > ) ] < [ < > < [ < > ] > ] > ) { } > [ { < > } ] { } < > < [ ] > [ { } ] < { } > < < > >"
        },
        "references": [
          {
            "output": {
              "text": " >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id464"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < < < < > > > < ( [ ( < { < { } > } > ) ] < [ < > < [ < > ] > ] > ) { } > [ { < > } ] { } < > < [ ] > [ { } ] < { } > < < > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8229066738804249,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7458779811859131
              },
              {
                "text": "are",
                "logprob": -0.0021030232310295105
              },
              {
                "text": "the",
                "logprob": -3.3378546504536644e-06
              },
              {
                "text": "completed",
                "logprob": -0.07050763815641403
              },
              {
                "text": "Dy",
                "logprob": -0.0044146934524178505
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.16458133100645683,
              "max_token_negative_log_likelihood": 0.7458779811859131,
              "predictive_entropy": 0.08519755978959438,
              "shannon_entropy": 0.3840506081971398
            }
          }
        ],
        "cached": false,
        "request_time": 0.4814591407775879,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( ) { [ [ ] ] } { { ( < [ < [ ] [ < { ( ) [ { [ ( [ ( ( [ [ ( { < ( ) > [ [ { < ( ( ) ) > } ] ] < ( ) > } ) < [ < ( ) > ] > ] ] ) ) ] ) ] } ] } > ] < > { [ ] } [ ] > ] < ( { } ) > > ) }"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id18"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( ) { [ [ ] ] } { { ( < [ < [ ] [ < { ( ) [ { [ ( [ ( ( [ [ ( { < ( ) > [ [ { < ( ( ) ) > } ] ] < ( ) > } ) < [ < ( ) > ] > ] ] ) ) ] ) ] } ] } > ] < > { [ ] } [ ] > ] < ( { } ) > > ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6243711722769376,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5517396926879883
              },
              {
                "text": "are",
                "logprob": -0.0017669078661128879
              },
              {
                "text": "the",
                "logprob": -1.5497195136049413e-06
              },
              {
                "text": "completed",
                "logprob": -0.06784918904304504
              },
              {
                "text": "Dy",
                "logprob": -0.003013832960277796
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.124874240695749,
              "max_token_negative_log_likelihood": 0.5517396926879883,
              "predictive_entropy": 0.07718826292525591,
              "shannon_entropy": 0.3755072743853816
            }
          }
        ],
        "cached": false,
        "request_time": 0.46952295303344727,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { < < [ ] > > [ { ( < ( ( { [ ] } ) ) > ) } [ ( ) ( ) ( < > ) ( < ( [ { } ] ) [ ( [ ( ) ] ( { < > < [ ( [ < ( [ { } ] ) > [ ] ] ) ] > } ) ) ] > ) < [ ] > { < > } { { } } ]"
        },
        "references": [
          {
            "output": {
              "text": " ] } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id319"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { < < [ ] > > [ { ( < ( ( { [ ] } ) ) > ) } [ ( ) ( ) ( < > ) ( < ( [ { } ] ) [ ( [ ( ) ] ( { < > < [ ( [ < ( [ { } ] ) > [ ] ] ) ] > } ) ) ] > ) < [ ] > { < > } { { } } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { <",
            "logprob": -2.739198559174838,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.8054814338684082
              },
              {
                "text": ":",
                "logprob": -0.003415229730308056
              },
              {
                "text": "(",
                "logprob": -0.08023100346326828
              },
              {
                "text": "{",
                "logprob": -5.745722592109814e-05
              },
              {
                "text": "<",
                "logprob": -0.8500134348869324
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5478396982929553,
              "max_token_negative_log_likelihood": 1.8054813146591187,
              "predictive_entropy": 0.14752453984256136,
              "shannon_entropy": 0.5080058124149218
            }
          }
        ],
        "cached": false,
        "request_time": 0.5080897808074951,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ ( ) { ( [ < ( ( ( { } [ ] ) ) ) ( ( { } ) ) > ] ) } ] [ [ { { { ( ) } [ ( ) { } ] } } ] ] [ ( [ ]"
        },
        "references": [
          {
            "output": {
              "text": " ) ] }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id492"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ ( ) { ( [ < ( ( ( { } [ ] ) ) ) ( ( { } ) ) > ] ) } ] [ [ { { { ( ) } [ ( ) { } ] } } ] ] [ ( [ ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.9439520604682912,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.8802516460418701
              },
              {
                "text": "are",
                "logprob": -0.00533122755587101
              },
              {
                "text": "the",
                "logprob": -5.829164365422912e-05
              },
              {
                "text": "completed",
                "logprob": -0.04364500194787979
              },
              {
                "text": "Dy",
                "logprob": -0.014665893279016018
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18879040364627145,
              "max_token_negative_log_likelihood": 0.8802516460418701,
              "predictive_entropy": 0.08532321130405762,
              "shannon_entropy": 0.3308892215718515
            }
          }
        ],
        "cached": false,
        "request_time": 0.5063354969024658,
        "request_datetime": 1755804095
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ < ( < > ( { } ) { { < ( [ ( ) ] ) > ( < ( ) > ) ( { [ ] } ) { } } [ { ( { < > < < > < ( [ < { } > ] ) > { } > ( < ( ) > ) } ) } ] } ) > [ ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id162"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ < ( < > ( { } ) { { < ( [ ( ) ] ) > ( < ( ) > ) ( { [ ] } ) { } } [ { ( { < > < < > < ( [ < { } > ] ) > { } > ( < ( ) > ) } ) } ] } ) > [ ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5532832555431924,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.4742695987224579
              },
              {
                "text": "are",
                "logprob": -0.002727956511080265
              },
              {
                "text": "the",
                "logprob": -2.861018856492592e-06
              },
              {
                "text": "completed",
                "logprob": -0.06939663738012314
              },
              {
                "text": "Dy",
                "logprob": -0.006886201910674572
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11065664729185301,
              "max_token_negative_log_likelihood": 0.4742696285247803,
              "predictive_entropy": 0.07389260353438658,
              "shannon_entropy": 0.35077006247738607
            }
          }
        ],
        "cached": false,
        "request_time": 0.500807523727417,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ { < { } { ( < [ [ { ( { } ) } ] ] > ) } > } ] [ [ < < { < < > > } > [ ] > ] ( [ { } [ { } ]"
        },
        "references": [
          {
            "output": {
              "text": " ] ) ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id156"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ { < { } { ( < [ [ { ( { } ) } ] ] > ) } > } ] [ [ < < { < < > > } > [ ] > ] ( [ { } [ { } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -2.316374132409692,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.9408625364303589
              },
              {
                "text": ":",
                "logprob": -0.004584635142236948
              },
              {
                "text": "(",
                "logprob": -1.360141396522522
              },
              {
                "text": "{",
                "logprob": -0.004213384818285704
              },
              {
                "text": "[",
                "logprob": -0.0065721794962882996
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.46327479239553215,
              "max_token_negative_log_likelihood": 1.3601412773132324,
              "predictive_entropy": 0.1463088508695364,
              "shannon_entropy": 0.3890863224864006
            }
          }
        ],
        "cached": false,
        "request_time": 0.49195003509521484,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { < { [ [ [ { ( ) } ] [ ] ] ] } ( { ( < { } { < > } > ) ( { < > } ) [ < > ] [ { } ] [ { [ < [ ] > ] } ] } { } ) > { } { < [ ( [ { } ] ) ] > { [ < > < > ] } } [ [ { { [ [ { } ] ] } } ] ]"
        },
        "references": [
          {
            "output": {
              "text": " } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id244"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { < { [ [ [ { ( ) } ] [ ] ] ] } ( { ( < { } { < > } > ) ( { < > } ) [ < > ] [ { } ] [ { [ < [ ] > ] } ] } { } ) > { } { < [ ( [ { } ] ) ] > { [ < > < > ] } } [ [ { { [ [ { } ] ] } } ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.3985830607111893,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.3156416416168213
              },
              {
                "text": "are",
                "logprob": -0.0013947292463853955
              },
              {
                "text": "the",
                "logprob": -1.6689286894688848e-06
              },
              {
                "text": "completed",
                "logprob": -0.07878805696964264
              },
              {
                "text": "Dy",
                "logprob": -0.002756963949650526
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.07971660804496424,
              "max_token_negative_log_likelihood": 0.3156416416168213,
              "predictive_entropy": 0.061433309944982285,
              "shannon_entropy": 0.3059256013704726
            }
          }
        ],
        "cached": false,
        "request_time": 0.49757814407348633,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< [ [ < [ < < < [ [ ] ] > ( ) < > { { } } { { < { } > } { [ { } ( ) ] } } ( ( { { } } ) ) > > ] > ] ] [ { [ { } ] ( [ ] ) }"
        },
        "references": [
          {
            "output": {
              "text": " ] >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id253"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < [ [ < [ < < < [ [ ] ] > ( ) < > { { } } { { < { } > } { [ { } ( ) ] } } ( ( { { } } ) ) > > ] > ] ] [ { [ { } ] ( [ ] ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7760149184587135,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7016879320144653
              },
              {
                "text": "are",
                "logprob": -0.0018669809214770794
              },
              {
                "text": "the",
                "logprob": -2.3841830625315197e-06
              },
              {
                "text": "completed",
                "logprob": -0.06714607775211334
              },
              {
                "text": "Dy",
                "logprob": -0.005311543587595224
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15520299491531658,
              "max_token_negative_log_likelihood": 0.7016879320144653,
              "predictive_entropy": 0.0835590209806469,
              "shannon_entropy": 0.37478042891889346
            }
          }
        ],
        "cached": false,
        "request_time": 0.49665260314941406,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ [ < { } > ] [ ] ] [ { { < [ { } ] ( ) ( < > ) > } } ] ] < { [ ] ( < [ ( ) ] > ) ( { { { < > } } ( < { [ { [ ] } ] { { ( [ < { { } { } } > ] ) } } } > ) } ) }"
        },
        "references": [
          {
            "output": {
              "text": " >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id393"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ [ < { } > ] [ ] ] [ { { < [ { } ] ( ) ( < > ) > } } ] ] < { [ ] ( < [ ( ) ] > ) ( { { { < > } } ( < { [ { [ ] } ] { { ( [ < { { } { } } > ] ) } } } > ) } ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6608887080799946,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.600658118724823
              },
              {
                "text": "are",
                "logprob": -0.0011801904765889049
              },
              {
                "text": "the",
                "logprob": -5.960462772236497e-07
              },
              {
                "text": "completed",
                "logprob": -0.05480816587805748
              },
              {
                "text": "Dy",
                "logprob": -0.0042416369542479515
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.13217773530635668,
              "max_token_negative_log_likelihood": 0.6006580591201782,
              "predictive_entropy": 0.07734388732347952,
              "shannon_entropy": 0.34706564137868556
            }
          }
        ],
        "cached": false,
        "request_time": 0.49666833877563477,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < [ < [ ] > < > ] > { [ < > ] < < > { { } } > { ( ( { } ) ( < > ) ) } } { < > } } { { < > } ( ) { { } }"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id292"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < [ < [ ] > < > ] > { [ < > ] < < > { { } } > { ( ( { } ) ( < > ) ) } } { < > } } { { < > } ( ) { { } }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.407836910453625,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.3680503368377686
              },
              {
                "text": ":",
                "logprob": -0.009182248264551163
              },
              {
                "text": "(",
                "logprob": -0.011565305292606354
              },
              {
                "text": "{",
                "logprob": -0.0019012485863640904
              },
              {
                "text": "[",
                "logprob": -0.017137771472334862
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.28156739331316205,
              "max_token_negative_log_likelihood": 1.368050456047058,
              "predictive_entropy": 0.07751686645206064,
              "shannon_entropy": 0.30227645579725504
            }
          }
        ],
        "cached": false,
        "request_time": 0.4986886978149414,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( { ( ( ) ( { < [ ( ( ) ) ] { { { { ( ) } } } } > < < ( < > ) > > } ) < ( ) > < ( { } ) > ( { } ) < { < { [ ( ) ] } > } > { { { [ ] } { < ( { < { { } } > } ) > < > } } } ) [ < > ] }"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id174"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( { ( ( ) ( { < [ ( ( ) ) ] { { { { ( ) } } } } > < < ( < > ) > > } ) < ( ) > < ( { } ) > ( { } ) < { < { [ ( ) ] } > } > { { { [ ] } { < ( { < { { } } > } ) > < > } } } ) [ < > ] }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.585230450960637,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5277745723724365
              },
              {
                "text": "are",
                "logprob": -0.0012894895626232028
              },
              {
                "text": "the",
                "logprob": -5.960462772236497e-07
              },
              {
                "text": "completed",
                "logprob": -0.05161094292998314
              },
              {
                "text": "Dy",
                "logprob": -0.004554850049316883
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11704608011062874,
              "max_token_negative_log_likelihood": 0.5277745127677917,
              "predictive_entropy": 0.07323604216795729,
              "shannon_entropy": 0.343493911240148
            }
          }
        ],
        "cached": false,
        "request_time": 0.5017249584197998,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ < { { < < { { < [ [ ] ] > } } > > } } > ] ] { } < > { [ ] } { < ( { [ ] } [ ( ) [ { ( ) } { ( [ { } ] ) } { } ( ( [ ( [ [ [ ( ) ] ] ] ) ] ) ) ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ) > }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id332"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ < { { < < { { < [ [ ] ] > } } > > } } > ] ] { } < > { [ ] } { < ( { [ ] } [ ( ) [ { ( ) } { ( [ { } ] ) } { } ( ( [ ( [ [ [ ( ) ] ] ] ) ] ) ) ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7129985554961422,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6488715410232544
              },
              {
                "text": "are",
                "logprob": -0.002544382121413946
              },
              {
                "text": "the",
                "logprob": -4.768360213347478e-06
              },
              {
                "text": "completed",
                "logprob": -0.05663469061255455
              },
              {
                "text": "Dy",
                "logprob": -0.004943173378705978
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1425997066799937,
              "max_token_negative_log_likelihood": 0.6488715410232544,
              "predictive_entropy": 0.08002018620964009,
              "shannon_entropy": 0.3315862557807122
            }
          }
        ],
        "cached": false,
        "request_time": 0.499133825302124,
        "request_datetime": 1755804096
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( ( ( { < < > > { ( ( [ ( ) ] ) ) } [ { < > } ] < { ( ) } > { } ( { ( { { { ( { < > } < ( ) [ ( ) ] [ { < > } ] < > < ( < [ ] > ) > > { { < ( ) > } } ( < > ) ) } } [ ] ( ( ) ) } ) } ) }"
        },
        "references": [
          {
            "output": {
              "text": " ) ) )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id471"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( ( ( { < < > > { ( ( [ ( ) ] ) ) } [ { < > } ] < { ( ) } > { } ( { ( { { { ( { < > } < ( ) [ ( ) ] [ { < > } ] < > < ( < [ ] > ) > > { { < ( ) > } } ( < > ) ) } } [ ] ( ( ) ) } ) } ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5892969790138523,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5125877261161804
              },
              {
                "text": "are",
                "logprob": -0.0015648273983970284
              },
              {
                "text": "the",
                "logprob": -1.311301275563892e-06
              },
              {
                "text": "completed",
                "logprob": -0.07165613025426865
              },
              {
                "text": "Dy",
                "logprob": -0.0034869839437305927
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11785941016878496,
              "max_token_negative_log_likelihood": 0.5125877857208252,
              "predictive_entropy": 0.07575018219633875,
              "shannon_entropy": 0.3642936714328243
            }
          }
        ],
        "cached": false,
        "request_time": 0.5015273094177246,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< [ < [ ( [ < < > > ] { ( { < < > > } ) [ { ( { < < [ ] > > } ) } ] } ) [ < [ < { ( < > { ( ) } ) } > ] > ] ( ( { } ) ) { } ] > < [ ] > ["
        },
        "references": [
          {
            "output": {
              "text": " ] ] >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id358"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < [ < [ ( [ < < > > ] { ( { < < > > } ) [ { ( { < < [ ] > > } ) } ] } ) [ < [ < { ( < > { ( ) } ) } > ] > ] ( ( { } ) ) { } ] > < [ ] > [",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Completed Dyck Se",
            "logprob": -5.968514889478655,
            "tokens": [
              {
                "text": "Comple",
                "logprob": -2.903017520904541
              },
              {
                "text": "ted",
                "logprob": -0.02887001633644104
              },
              {
                "text": "Dy",
                "logprob": -0.6277006268501282
              },
              {
                "text": "ck",
                "logprob": -2.3841855067985307e-07
              },
              {
                "text": "Se",
                "logprob": -2.408926486968994
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1937029354274329,
              "max_token_negative_log_likelihood": 2.903017282485962,
              "predictive_entropy": 0.1477938849478903,
              "shannon_entropy": 0.7381094114740335
            }
          }
        ],
        "cached": false,
        "request_time": 0.4962773323059082,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ ] < ( { } < [ [ < > ] ] > ) > ( ( < > ) ) { ( [ < { [ ( [ < { < > } > ] [ < ( [ < [ ] { } > ] ) > ] < < < > > ( { { } { ( ) } < > [ ] } ) ( ) [ ] { } < [ { } ] > > ) ] } > ] )"
        },
        "references": [
          {
            "output": {
              "text": " } )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id157"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ ] < ( { } < [ [ < > ] ] > ) > ( ( < > ) ) { ( [ < { [ ( [ < { < > } > ] [ < ( [ < [ ] { } > ] ) > ] < < < > > ( { { } { ( ) } < > [ ] } ) ( ) [ ] { } < [ { } ] > > ) ] } > ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6181159736578365,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5524916052818298
              },
              {
                "text": "are",
                "logprob": -0.002434268593788147
              },
              {
                "text": "the",
                "logprob": -1.4305104514278355e-06
              },
              {
                "text": "completed",
                "logprob": -0.05692741274833679
              },
              {
                "text": "Dy",
                "logprob": -0.0062612565234303474
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1236231978519072,
              "max_token_negative_log_likelihood": 0.5524916052818298,
              "predictive_entropy": 0.0760791741775165,
              "shannon_entropy": 0.3644047977984883
            }
          }
        ],
        "cached": false,
        "request_time": 0.4974687099456787,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ } [ ] [ { ( ( { { } } ) ) } < < { ( < < ( ) > { } > ) } > > ( [ < < < ( ( { } ) ) > > > < [ ] >"
        },
        "references": [
          {
            "output": {
              "text": " ] ) ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id40"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { } [ ] [ { ( ( { { } } ) ) } < < { ( < < ( ) > { } > ) } > > ( [ < < < ( ( { } ) ) > > > < [ ] >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -1.12332669555326,
            "tokens": [
              {
                "text": "Here",
                "logprob": -1.0595710277557373
              },
              {
                "text": "are",
                "logprob": -0.005557206925004721
              },
              {
                "text": "the",
                "logprob": -2.95634672511369e-05
              },
              {
                "text": "completed",
                "logprob": -0.048272162675857544
              },
              {
                "text": "Dy",
                "logprob": -0.009896734729409218
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.22466534245177172,
              "max_token_negative_log_likelihood": 1.0595710277557373,
              "predictive_entropy": 0.08572092466602044,
              "shannon_entropy": 0.3281911288504489
            }
          }
        ],
        "cached": false,
        "request_time": 0.4979708194732666,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ < [ { < ( { < < < > [ ] > > } ( { ( ) } ) ) > } < ( { } ) { { { < { } > } } } > ] > ] < [ < [ ( { } ) ] > { } ]"
        },
        "references": [
          {
            "output": {
              "text": " > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id208"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ < [ { < ( { < < < > [ ] > > } ( { ( ) } ) ) > } < ( { } ) { { { < { } > } } } > ] > ] < [ < [ ( { } ) ] > { } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5704607725710957,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.49108240008354187
              },
              {
                "text": "are",
                "logprob": -0.002437717281281948
              },
              {
                "text": "the",
                "logprob": -8.583032467868179e-06
              },
              {
                "text": "completed",
                "logprob": -0.07019363343715668
              },
              {
                "text": "Dy",
                "logprob": -0.0067384387366473675
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1140921515021546,
              "max_token_negative_log_likelihood": 0.49108242988586426,
              "predictive_entropy": 0.07501870737614809,
              "shannon_entropy": 0.36123714043351357
            }
          }
        ],
        "cached": false,
        "request_time": 0.49720001220703125,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ ( < < > > [ { { { ( < > [ [ ] ] [ [ < ( { [ ( [ < > { } ] ) ] } ) > ] ] < > ) } } } < [ [ [ ] ] ] > ]"
        },
        "references": [
          {
            "output": {
              "text": " ) ] )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id369"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ ( < < > > [ { { { ( < > [ [ ] ] [ [ < ( { [ ( [ < > { } ] ) ] } ) > ] ] < > ) } } } < [ [ [ ] ] ] > ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Completed Dyck sequences",
            "logprob": -4.402945429086678,
            "tokens": [
              {
                "text": "Comple",
                "logprob": -3.852692127227783
              },
              {
                "text": "ted",
                "logprob": -0.12327560782432556
              },
              {
                "text": "Dy",
                "logprob": -0.260299950838089
              },
              {
                "text": "ck",
                "logprob": -1.1920928244535389e-07
              },
              {
                "text": "sequences",
                "logprob": -0.16667762398719788
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8805890023708371,
              "max_token_negative_log_likelihood": 3.852691650390625,
              "predictive_entropy": 0.10649492144584656,
              "shannon_entropy": 0.6409498296370657
            }
          }
        ],
        "cached": false,
        "request_time": 0.4913914203643799,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < ( { < ( ( ( { < [ < > [ [ ] { ( [ ] ) } ] ] < ( { [ < [ [ { { < > } } ] ] > ( { < { < [ [ ] ] { < > } > } > } ) ] } ) > > } ) ) ) > } ) >"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id243"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < ( { < ( ( ( { < [ < > [ [ ] { ( [ ] ) } ] ] < ( { [ < [ [ { { < > } } ] ] > ( { < { < [ [ ] ] { < > } > } > } ) ] } ) > > } ) ) ) > } ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For each input, I",
            "logprob": -3.445203885436058,
            "tokens": [
              {
                "text": "For",
                "logprob": -1.9713630676269531
              },
              {
                "text": "each",
                "logprob": -0.4031701683998108
              },
              {
                "text": "input",
                "logprob": -0.56124347448349
              },
              {
                "text": ",",
                "logprob": -0.23752941191196442
              },
              {
                "text": "I",
                "logprob": -0.2718977630138397
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6890407264232635,
              "max_token_negative_log_likelihood": 1.9713629484176636,
              "predictive_entropy": 0.2517218470573425,
              "shannon_entropy": 1.0114744186401368
            }
          }
        ],
        "cached": false,
        "request_time": 0.49710917472839355,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < [ { } [ { [ ] [ { < ( { ( ) } ) > } ] } { [ < > ] } < > ( { { { } [ { { } } < > ( ) ] } } ) ( ) ] ] { ( ) } >"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id111"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < [ { } [ { [ ] [ { < ( { ( ) } ) > } ] } { [ < > ] } < > ( { { { } [ { { } } < > ( ) ] } } ) ( ) ] ] { ( ) } >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To complete the rest of",
            "logprob": -6.142746386683939,
            "tokens": [
              {
                "text": "To",
                "logprob": -3.2824273109436035
              },
              {
                "text": "complete",
                "logprob": -0.01961781643331051
              },
              {
                "text": "the",
                "logprob": -0.008580483496189117
              },
              {
                "text": "rest",
                "logprob": -2.8320937156677246
              },
              {
                "text": "of",
                "logprob": -2.706014311115723e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2285491377846482,
              "max_token_negative_log_likelihood": 3.2824268341064453,
              "predictive_entropy": 0.06355278186601936,
              "shannon_entropy": 0.5444158262456767
            }
          }
        ],
        "cached": false,
        "request_time": 0.4911196231842041,
        "request_datetime": 1755804097
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < [ ] > } { } < < ( { } ) > [ [ { [ < > ] < { [ ] } > } ] < { < { ( ( { } ( ( [ ( [ ( ) ] ) ( ) ] < { ( ) } > ) ) ) ) { } } { } > } > < { { ( < > ) ( ) } } >"
        },
        "references": [
          {
            "output": {
              "text": " ] >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id48"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < [ ] > } { } < < ( { } ) > [ [ { [ < > ] < { [ ] } > } ] < { < { ( ( { } ( ( [ ( [ ( ) ] ) ( ) ] < { ( ) } > ) ) ) ) { } } { } > } > < { { ( < > ) ( ) } } >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Let's complete the",
            "logprob": -3.2038836854335386,
            "tokens": [
              {
                "text": "Let",
                "logprob": -2.8794338703155518
              },
              {
                "text": "'",
                "logprob": -0.00010322991875000298
              },
              {
                "text": "s",
                "logprob": 0.0
              },
              {
                "text": "complete",
                "logprob": -0.02373613230884075
              },
              {
                "text": "the",
                "logprob": -0.3006104528903961
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6407766948861535,
              "max_token_negative_log_likelihood": 2.8794336318969727,
              "predictive_entropy": 0.08151444648829057,
              "shannon_entropy": 0.42301208537743895
            }
          }
        ],
        "cached": false,
        "request_time": 0.49759340286254883,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < { } > ] { { [ { } ] } < [ { < > } ] > ( ) } [ ( [ < { < [ { ( { } ) } { } ] > } > [ < > ] ] ( { } ) [ < > ] ) < > ] [ [ ] ] ( ) { [ ] } < [ ("
        },
        "references": [
          {
            "output": {
              "text": " ) ] >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id441"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < { } > ] { { [ { } ] } < [ { < > } ] > ( ) } [ ( [ < { < [ { ( { } ) } { } ] > } > [ < > ] ] ( { } ) [ < > ] ) < > ] [ [ ] ] ( ) { [ ] } < [ (",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -0.9304786229331512,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.6128304600715637
              },
              {
                "text": ":",
                "logprob": -0.001255677198059857
              },
              {
                "text": "(",
                "logprob": -0.30022355914115906
              },
              {
                "text": "{",
                "logprob": -0.015738792717456818
              },
              {
                "text": "[",
                "logprob": -0.0004301338049117476
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18609573085559533,
              "max_token_negative_log_likelihood": 0.6128304600715637,
              "predictive_entropy": 0.11431585230166093,
              "shannon_entropy": 0.3743023322895169
            }
          }
        ],
        "cached": false,
        "request_time": 0.4961402416229248,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { { ( [ ( ( [ [ ] ] ) ) ] ) } } [ [ ( ) ] ] < { < ( ) > } > [ { { < ( ( ( { < > } { } { [ < [ ] ( ) { < > } ( < > ) > ] } { } ) ) ) > } } ] < ( ) > [ { [ { ( ) } ] } ]"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id24"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { { ( [ ( ( [ [ ] ] ) ) ] ) } } [ [ ( ) ] ] < { < ( ) > } > [ { { < ( ( ( { < > } { } { [ < [ ] ( ) { < > } ( < > ) > ] } { } ) ) ) > } } ] < ( ) > [ { [ { ( ) } ] } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6192046916080471,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5384840965270996
              },
              {
                "text": "are",
                "logprob": -0.002324500121176243
              },
              {
                "text": "the",
                "logprob": -2.50339189733495e-06
              },
              {
                "text": "completed",
                "logprob": -0.07265111058950424
              },
              {
                "text": "Dy",
                "logprob": -0.005742480978369713
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12384095201332457,
              "max_token_negative_log_likelihood": 0.5384841561317444,
              "predictive_entropy": 0.07797361370112413,
              "shannon_entropy": 0.36722823558884554
            }
          }
        ],
        "cached": false,
        "request_time": 0.5002729892730713,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< < ( < < { { { < ( ( ) ) > } } } > > { ( [ ( < > ) ] ) [ { < [ { } ] > } ( < < > > ) ] { < { { < > } } > } [ ] } ) > > < ( )"
        },
        "references": [
          {
            "output": {
              "text": " >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id370"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < < ( < < { { { < ( ( ) ) > } } } > > { ( [ ( < > ) ] ) [ { < [ { } ] > } ( < < > > ) ] { < { { < > } } > } [ ] } ) > > < ( )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For each provided input,",
            "logprob": -6.1246419586241245,
            "tokens": [
              {
                "text": "For",
                "logprob": -2.338409185409546
              },
              {
                "text": "each",
                "logprob": -0.21420681476593018
              },
              {
                "text": "provided",
                "logprob": -3.1303317546844482
              },
              {
                "text": "input",
                "logprob": -0.3813469707965851
              },
              {
                "text": ",",
                "logprob": -0.06034723296761513
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.2249283358454703,
              "max_token_negative_log_likelihood": 3.130331516265869,
              "predictive_entropy": 0.17051443308591843,
              "shannon_entropy": 0.8951004385948181
            }
          }
        ],
        "cached": false,
        "request_time": 0.4943406581878662,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { ( ( { < > [ ( [ { < ( ( { [ ] } ) ) > } ] ) ] } ) ( ( [ ] ( ( [ { [ ] } ] < < > > ) ) ) ) { < > } ) } > < > ("
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id99"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { ( ( { < > [ ( [ { < ( ( { [ ] } ) ) > } ] ) ] } ) ( ( [ ] ( ( [ { [ ] } ] < < > > ) ) ) ) { < > } ) } > < > (",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < { (",
            "logprob": -1.9505164557327817,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.811602771282196
              },
              {
                "text": ":",
                "logprob": -0.0016500442288815975
              },
              {
                "text": "<",
                "logprob": -1.1370863914489746
              },
              {
                "text": "{",
                "logprob": -0.00017569905321579427
              },
              {
                "text": "(",
                "logprob": -1.5497195136049413e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.39010326963641545,
              "max_token_negative_log_likelihood": 1.1370863914489746,
              "predictive_entropy": 0.14540345581167458,
              "shannon_entropy": 0.43997295592562297
            }
          }
        ],
        "cached": false,
        "request_time": 0.5155761241912842,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { ( [ { ( { { [ ] } [ { < { < ( { } ) > } < ( [ ( ( < [ ( ) ] > ) ) [ ( ( ) ) ] ] ) > > } ( ) ] } ( ( [ { < > } ] ) < > ( < { ( ) } { [ [ { { } } ] ] } > ) { [ { < [ ] > } ] } ) ) } ] )"
        },
        "references": [
          {
            "output": {
              "text": " } >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id236"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { ( [ { ( { { [ ] } [ { < { < ( { } ) > } < ( [ ( ( < [ ( ) ] > ) ) [ ( ( ) ) ] ] ) > > } ( ) ] } ( ( [ { < > } ] ) < > ( < { ( ) } { [ [ { { } } ] ] } > ) { [ { < [ ] > } ] } ) ) } ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6552324555750602,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5509457588195801
              },
              {
                "text": "are",
                "logprob": -0.003364737145602703
              },
              {
                "text": "the",
                "logprob": -3.576272320060525e-06
              },
              {
                "text": "completed",
                "logprob": -0.09719431400299072
              },
              {
                "text": "Dy",
                "logprob": -0.003724069334566593
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.13104647169948294,
              "max_token_negative_log_likelihood": 0.5509456992149353,
              "predictive_entropy": 0.08256538146979438,
              "shannon_entropy": 0.4023573672864586
            }
          }
        ],
        "cached": false,
        "request_time": 0.4894266128540039,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ { { [ < < { < [ [ ] ] > } > > { [ { ( { { [ < > ] } } ) { [ ( { [ { { < ( ) > } } ] } ) [ { ( ) } ] ] } < > } ] < ( ( { } ) ) > { { [ ( [ ( ) ] ) { } ] ( { { } } ) } } } ] } } ]"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id431"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ { { [ < < { < [ [ ] ] > } > > { [ { ( { { [ < > ] } } ) { [ ( { [ { { < ( ) > } } ] } ) [ { ( ) } ] ] } < > } ] < ( ( { } ) ) > { { [ ( [ ( ) ] ) { } ] ( { { } } ) } } } ] } } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7044889619492096,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6174821257591248
              },
              {
                "text": "are",
                "logprob": -0.00408434122800827
              },
              {
                "text": "the",
                "logprob": -4.0531076592742465e-06
              },
              {
                "text": "completed",
                "logprob": -0.07576518505811691
              },
              {
                "text": "Dy",
                "logprob": -0.007153256796300411
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1408978011475483,
              "max_token_negative_log_likelihood": 0.6174821257591248,
              "predictive_entropy": 0.08288388987839426,
              "shannon_entropy": 0.40362934848017173
            }
          }
        ],
        "cached": false,
        "request_time": 0.5024442672729492,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( ) ( [ ( ( [ { } < ( ( < < { ( ( { < [ [ ( < ( < > ) > ) ] ] > } ) ) } > > ) < [ [ ( { { } [ [ ( { < { < ( ) > } < < > > > } ) ] ] } ) ] ] > ) > ] ) ) ] { { } { { } } }"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id121"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( ) ( [ ( ( [ { } < ( ( < < { ( ( { < [ [ ( < ( < > ) > ) ] ] > } ) ) } > > ) < [ [ ( { { } [ [ ( { < { < ( ) > } < < > > > } ) ] ] } ) ] ] > ) > ] ) ) ] { { } { { } } }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the complete Dy",
            "logprob": -5.781950799978858,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.855820894241333
              },
              {
                "text": "are",
                "logprob": -0.001784519525244832
              },
              {
                "text": "the",
                "logprob": -2.145764938177308e-06
              },
              {
                "text": "complete",
                "logprob": -4.922459125518799
              },
              {
                "text": "Dy",
                "logprob": -0.0018841149285435677
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.1563898618104758,
              "max_token_negative_log_likelihood": 4.922457695007324,
              "predictive_entropy": 0.08063460979565207,
              "shannon_entropy": 0.3940174608032976
            }
          }
        ],
        "cached": false,
        "request_time": 0.5020630359649658,
        "request_datetime": 1755804098
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { ( { [ { { } } ] ( ) ( [ ] ) < ( ) ( ) [ < { { { [ [ ] [ < > ] < > ] } } < > } > { { { } } } ] > } ) ( { } ) } } < < { [ ( < [ { < > } ] > ) ] } > > ( [ [ ] ( ( { [ ] [ < [ ( { } ) ] > ] } ) ) ]"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id127"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { ( { [ { { } } ] ( ) ( [ ] ) < ( ) ( ) [ < { { { [ [ ] [ < > ] < > ] } } < > } > { { { } } } ] > } ) ( { } ) } } < < { [ ( < [ { < > } ] > ) ] } > > ( [ [ ] ( ( { [ ] [ < [ ( { } ) ] > ] } ) ) ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5662703534972024,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.4889252185821533
              },
              {
                "text": "are",
                "logprob": -0.0024211874697357416
              },
              {
                "text": "the",
                "logprob": -4.0531076592742465e-06
              },
              {
                "text": "completed",
                "logprob": -0.0697886049747467
              },
              {
                "text": "Dy",
                "logprob": -0.00513128936290741
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1132540673499534,
              "max_token_negative_log_likelihood": 0.4889252185821533,
              "predictive_entropy": 0.07449184101842547,
              "shannon_entropy": 0.35243971155505277
            }
          }
        ],
        "cached": false,
        "request_time": 0.49213480949401855,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < [ < < > > < ( ) > ] < { { { } } ( { [ ] } ) } > [ [ < > ] ] < { ( [ ( [ ] [ ( [ ] [ < < { } > > ] ) ] ) ] ) } > ( ( < ( { } ) > )"
        },
        "references": [
          {
            "output": {
              "text": " ) > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id194"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < [ < < > > < ( ) > ] < { { { } } ( { [ ] } ) } > [ [ < > ] ] < { ( [ ( [ ] [ ( [ ] [ < < { } > > ] ) ] ) ] ) } > ( ( < ( { } ) > )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.5195706403756049,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.4733927249908447
              },
              {
                "text": ":",
                "logprob": -0.005397153086960316
              },
              {
                "text": "(",
                "logprob": -0.03372829779982567
              },
              {
                "text": "{",
                "logprob": -0.006689061410725117
              },
              {
                "text": "[",
                "logprob": -0.0003634030872490257
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.30391409348812887,
              "max_token_negative_log_likelihood": 1.4733926057815552,
              "predictive_entropy": 0.07652170958463103,
              "shannon_entropy": 0.3088524510152638
            }
          }
        ],
        "cached": false,
        "request_time": 0.4567265510559082,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( ( { < ( ( ) ) { } < [ [ [ ] ] ] > < ( < [ ( [ < ( { < > } ) > ] ( [ < ( ) > ] ) ) ] ( ) > ) > > }"
        },
        "references": [
          {
            "output": {
              "text": " ) )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id377"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( ( { < ( ( ) ) { } < [ [ [ ] ] ] > < ( < [ ( [ < ( { < > } ) > ] ( [ < ( ) > ] ) ) ] ( ) > ) > > }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "The provided sequences seem to",
            "logprob": -9.67795187048614,
            "tokens": [
              {
                "text": "The",
                "logprob": -4.876532077789307
              },
              {
                "text": "provided",
                "logprob": -1.7927181720733643
              },
              {
                "text": "sequences",
                "logprob": -1.1854829788208008
              },
              {
                "text": "seem",
                "logprob": -1.8101768493652344
              },
              {
                "text": "to",
                "logprob": -0.013041792437434196
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.9355901554226875,
              "max_token_negative_log_likelihood": 4.87653112411499,
              "predictive_entropy": 0.201404201798141,
              "shannon_entropy": 1.238548782467842
            }
          }
        ],
        "cached": false,
        "request_time": 0.48162245750427246,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ { ( < [ [ ( < [ ] > < > [ { } ] ) ] [ ( ( ( < > ( [ [ ] ] ) ) ) [ { } ] ) ] < [ ( [ { [ ] } ] ) ] > [ ] ] > ) < > } ] ( ( [ ( ( { } ) ( [ ] ) { } ) ] )"
        },
        "references": [
          {
            "output": {
              "text": " ) }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id495"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ { ( < [ [ ( < [ ] > < > [ { } ] ) ] [ ( ( ( < > ( [ [ ] ] ) ) ) [ { } ] ) ] < [ ( [ { [ ] } ] ) ] > [ ] ] > ) < > } ] ( ( [ ( ( { } ) ( [ ] ) { } ) ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -0.8885102036165335,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.8570805788040161
              },
              {
                "text": ":",
                "logprob": -0.004926210269331932
              },
              {
                "text": "(",
                "logprob": -0.026142867282032967
              },
              {
                "text": "{",
                "logprob": -0.0003486264031380415
              },
              {
                "text": "[",
                "logprob": -1.1920858014491387e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.17770205518718285,
              "max_token_negative_log_likelihood": 0.8570806384086609,
              "predictive_entropy": 0.07889501838108118,
              "shannon_entropy": 0.29069570564606695
            }
          }
        ],
        "cached": false,
        "request_time": 0.4788057804107666,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< [ < [ ( ( { } ) ) ] { < > ( { < ( < > ) > } ) } > ( ( ) ) ] > [ < > ] [ ] { ( < < < { < ( ( ( { { ( ) } { < { } > { [ ] } } ( { < ( { ( [ ] ) } ) > [ ] ( ) ( { [ ] } { } ) } ) } ) ) ) > } > > >"
        },
        "references": [
          {
            "output": {
              "text": " ) }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id314"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < [ < [ ( ( { } ) ) ] { < > ( { < ( < > ) > } ) } > ( ( ) ) ] > [ < > ] [ ] { ( < < < { < ( ( ( { { ( ) } { < { } > { [ ] } } ( { < ( { ( [ ] ) } ) > [ ] ( ) ( { [ ] } { } ) } ) } ) ) ) > } > > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8648790584297785,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7828831672668457
              },
              {
                "text": "are",
                "logprob": -0.0038446097169071436
              },
              {
                "text": "the",
                "logprob": -4.768360213347478e-06
              },
              {
                "text": "completed",
                "logprob": -0.07320179790258408
              },
              {
                "text": "Dy",
                "logprob": -0.004944715183228254
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.17297581401880963,
              "max_token_negative_log_likelihood": 0.7828831672668457,
              "predictive_entropy": 0.08692696862626689,
              "shannon_entropy": 0.3779731131755398
            }
          }
        ],
        "cached": false,
        "request_time": 0.4798455238342285,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { ( ( ( ( ( < ( { ( ( { < { < > } > } ) [ ( { < ( ( < ( [ < > { < { [ [ [ ] ] ] } > } ] ) > ) [ ] ) > } ) < > < > ] ) } ) > ) ) { } ) { { } } ) ) }"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id454"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { ( ( ( ( ( < ( { ( ( { < { < > } > } ) [ ( { < ( ( < ( [ < > { < { [ [ [ ] ] ] } > } ] ) > ) [ ] ) > } ) < > < > ] ) } ) > ) ) { } ) { { } } ) ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For each input, I",
            "logprob": -3.813416689634323,
            "tokens": [
              {
                "text": "For",
                "logprob": -2.336310386657715
              },
              {
                "text": "each",
                "logprob": -0.26312100887298584
              },
              {
                "text": "input",
                "logprob": -0.6325180530548096
              },
              {
                "text": ",",
                "logprob": -0.3414757549762726
              },
              {
                "text": "I",
                "logprob": -0.23999148607254028
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7626832902431488,
              "max_token_negative_log_likelihood": 2.3363101482391357,
              "predictive_entropy": 0.2391274094581604,
              "shannon_entropy": 0.9452748537063599
            }
          }
        ],
        "cached": false,
        "request_time": 0.48036789894104004,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ [ < < ( ) > { [ ] } > ] ] [ [ < [ < { [ [ { { ( { ( { { ( { { } } ) } } ) } ) } } ] ] } > ] > [ < [ < > ] > ] ( { } ) ( < { ( ) } > ) ] ] { [ ]"
        },
        "references": [
          {
            "output": {
              "text": " } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id356"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ [ < < ( ) > { [ ] } > ] ] [ [ < [ < { [ [ { { ( { ( { { ( { { } } ) } } ) } ) } } ] ] } > ] > [ < [ < > ] > ] ( { } ) ( < { ( ) } > ) ] ] { [ ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.16223917757452,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.0534782409667969
              },
              {
                "text": ":",
                "logprob": -0.003846034873276949
              },
              {
                "text": "(",
                "logprob": -0.10328753292560577
              },
              {
                "text": "{",
                "logprob": -0.0015919642755761743
              },
              {
                "text": "[",
                "logprob": -3.540453326422721e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2324478067079326,
              "max_token_negative_log_likelihood": 1.0534781217575073,
              "predictive_entropy": 0.09319590613231413,
              "shannon_entropy": 0.3326882900262717
            }
          }
        ],
        "cached": false,
        "request_time": 0.4659688472747803,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ ( < < ( ) { < < [ ( ) ] > > } > ( ) > ) [ ( [ < { ( { < ( ) > } < < > > ( { { [ [ ] ] } } ) ) } < > > ]"
        },
        "references": [
          {
            "output": {
              "text": " ) ] }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id241"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { ( < < ( ) { < < [ ( ) ] > > } > ( ) > ) [ ( [ < { ( { < ( ) > } < < > > ( { { [ [ ] ] } } ) ) } < > > ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.4932712959125638,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.4161255359649658
              },
              {
                "text": ":",
                "logprob": -0.003515019081532955
              },
              {
                "text": "(",
                "logprob": -0.05913218483328819
              },
              {
                "text": "{",
                "logprob": -0.006379595957696438
              },
              {
                "text": "[",
                "logprob": -0.008118960075080395
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2986542544327676,
              "max_token_negative_log_likelihood": 1.4161255359649658,
              "predictive_entropy": 0.0834516225848347,
              "shannon_entropy": 0.361178108304739
            }
          }
        ],
        "cached": false,
        "request_time": 0.47112178802490234,
        "request_datetime": 1755804099
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ ( { < < [ ( ( ) < > ) ] > > } ( { < { [ [ [ ( [ { [ < > ] } ] ) ] ] ] } ( < [ ( < ( ( ( [ ] ) ) ) > ) ( ) ] > { { } } { < { ( ) } > } { [ < > ] } [ [ < > ] ] ) > }"
        },
        "references": [
          {
            "output": {
              "text": " ) ) ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id325"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ ( { < < [ ( ( ) < > ) ] > > } ( { < { [ [ [ ( [ { [ < > ] } ] ) ] ] ] } ( < [ ( < ( ( ( [ ] ) ) ) > ) ( ) ] > { { } } { < { ( ) } > } { [ < > ] } [ [ < > ] ] ) > }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To continue the given Dy",
            "logprob": -9.475254207849503,
            "tokens": [
              {
                "text": "To",
                "logprob": -2.724818468093872
              },
              {
                "text": "continue",
                "logprob": -5.333125114440918
              },
              {
                "text": "the",
                "logprob": -0.4018227756023407
              },
              {
                "text": "given",
                "logprob": -0.9166623950004578
              },
              {
                "text": "Dy",
                "logprob": -0.09882545471191406
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.8950504615902901,
              "max_token_negative_log_likelihood": 5.333123207092285,
              "predictive_entropy": 0.18586028255522252,
              "shannon_entropy": 0.9127084732055664
            }
          }
        ],
        "cached": false,
        "request_time": 0.4801938533782959,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < { } > ] { ( ( [ { [ < < > [ [ ] ] > [ [ [ < < > > ] ] < > ] ( < { } > ) { [ < [ ] > ] } ] [ { { [ ] } } ] } ]"
        },
        "references": [
          {
            "output": {
              "text": " ) ) }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id49"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < { } > ] { ( ( [ { [ < < > [ [ ] ] > [ [ [ < < > > ] ] < > ] ( < { } > ) { [ < [ ] > ] } ] [ { { [ ] } } ] } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6120003870350956,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.547169029712677
              },
              {
                "text": "are",
                "logprob": -0.0017727388767525554
              },
              {
                "text": "the",
                "logprob": -4.529942543740617e-06
              },
              {
                "text": "completed",
                "logprob": -0.05844394117593765
              },
              {
                "text": "Dy",
                "logprob": -0.004610147327184677
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12240007121790768,
              "max_token_negative_log_likelihood": 0.547169029712677,
              "predictive_entropy": 0.07561464670379792,
              "shannon_entropy": 0.3433141564601101
            }
          }
        ],
        "cached": false,
        "request_time": 0.4773404598236084,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { ( ) } { [ [ [ { ( < { ( [ [ ] ] [ ] ) ( < [ { } ] > ) ( { { [ < ( ( ) ) > ] [ ] } } ) } > { } ) < > } ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ] } >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id406"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { ( ) } { [ [ [ { ( < { ( [ [ ] ] [ ] ) ( < [ { } ] > ) ( { { [ < ( ( ) ) > ] [ ] } } ) } > { } ) < > } ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < { (",
            "logprob": -2.3956109140999615,
            "tokens": [
              {
                "text": "Input",
                "logprob": -2.1903910636901855
              },
              {
                "text": ":",
                "logprob": -0.0026240460574626923
              },
              {
                "text": "<",
                "logprob": -0.20219458639621735
              },
              {
                "text": "{",
                "logprob": -0.0002169373765354976
              },
              {
                "text": "(",
                "logprob": -0.0001842805795604363
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.47912216651893685,
              "max_token_negative_log_likelihood": 2.1903910636901855,
              "predictive_entropy": 0.0826487679994898,
              "shannon_entropy": 0.39957478889264164
            }
          }
        ],
        "cached": false,
        "request_time": 0.4872140884399414,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ ( [ ] ) } [ [ < > < ( { [ { } ] } ) > { [ [ { [ ] } ] ] } { { ( { < [ [ [ { [ ( [ ] ) ] } ] ] ] > } ) [ { [ ] } ( { { } } ) ] } < { } > < [ ] > [ < { ( ) } > ] ( ( [ < { } > ] < { } > ) ) } ]"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id224"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { ( [ ] ) } [ [ < > < ( { [ { } ] } ) > { [ [ { [ ] } ] ] } { { ( { < [ [ [ { [ ( [ ] ) ] } ] ] ] > } ) [ { [ ] } ( { { } } ) ] } < { } > < [ ] > [ < { ( ) } > ] ( ( [ < { } > ] < { } > ) ) } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6128700637468683,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5309878587722778
              },
              {
                "text": "are",
                "logprob": -0.001777022727765143
              },
              {
                "text": "the",
                "logprob": -2.145764938177308e-06
              },
              {
                "text": "completed",
                "logprob": -0.07603258639574051
              },
              {
                "text": "Dy",
                "logprob": -0.004070450086146593
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12257401223805572,
              "max_token_negative_log_likelihood": 0.5309878587722778,
              "predictive_entropy": 0.07770586828655723,
              "shannon_entropy": 0.36467953866085734
            }
          }
        ],
        "cached": false,
        "request_time": 0.48209071159362793,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ ( ( ( ) ) < [ ( ( ) ) ( { } ) [ [ ] ] < { [ < > ] } > < ( ) < < > > > { ( ) } ( ( ) ) ] > ) < ( )"
        },
        "references": [
          {
            "output": {
              "text": " > ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id79"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ ( ( ( ) ) < [ ( ( ) ) ( { } ) [ [ ] ] < { [ < > ] } > < ( ) < < > > > { ( ) } ( ( ) ) ] > ) < ( )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.8167878702661255,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.1382262706756592
              },
              {
                "text": ":",
                "logprob": -0.006894015707075596
              },
              {
                "text": "(",
                "logprob": -0.6068874597549438
              },
              {
                "text": "{",
                "logprob": -0.06466306746006012
              },
              {
                "text": "[",
                "logprob": -0.00011705666838679463
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3633575604966609,
              "max_token_negative_log_likelihood": 1.1382261514663696,
              "predictive_entropy": 0.15260625726368743,
              "shannon_entropy": 0.5155785412993282
            }
          }
        ],
        "cached": false,
        "request_time": 0.4777042865753174,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ ] [ { } [ [ { [ { [ ] } ] } ] ] { ( < { { < > { { [ ] < > } } } } > ( { } ) ) < [ ( < ( ( ) ( { } { [ [ < [ { ( < > [ ] < ( ) > ) } ] > < { } > ] ] } < ( ) > ) ) > ) < [ ] > ]"
        },
        "references": [
          {
            "output": {
              "text": " > } ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id4"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ ] [ { } [ [ { [ { [ ] } ] } ] ] { ( < { { < > { { [ ] < > } } } } > ( { } ) ) < [ ( < ( ( ) ( { } { [ [ < [ { ( < > [ ] < ( ) > ) } ] > < { } > ] ] } < ( ) > ) ) > ) < [ ] > ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6409015597255348,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5758392810821533
              },
              {
                "text": "are",
                "logprob": -0.0029774641152471304
              },
              {
                "text": "the",
                "logprob": -3.3378546504536644e-06
              },
              {
                "text": "completed",
                "logprob": -0.0529581718146801
              },
              {
                "text": "Dy",
                "logprob": -0.009123304858803749
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12818031269239327,
              "max_token_negative_log_likelihood": 0.5758392810821533,
              "predictive_entropy": 0.07719894312213,
              "shannon_entropy": 0.3732224373066856
            }
          }
        ],
        "cached": false,
        "request_time": 0.47885870933532715,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ ] [ < [ < { } > ] > ( ) < [ [ ( ) ] ] [ ] ( ( ) { ( ) } { [ ( ) [ < > ] ( ) [ { [ < { ( < < ( ) > > ) } > ( < > ) { [ ] } ] } ] ] < ( ) > } ) ( ( ) ) < [ { } ] > [ ( ) ] > < > ] {"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id216"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ ] [ < [ < { } > ] > ( ) < [ [ ( ) ] ] [ ] ( ( ) { ( ) } { [ ( ) [ < > ] ( ) [ { [ < { ( < < ( ) > > ) } > ( < > ) { [ ] } ] } ] ] < ( ) > } ) ( ( ) ) < [ { } ] > [ ( ) ] > < > ] {",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: [ ] [",
            "logprob": -1.8304532391139219,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.692647933959961
              },
              {
                "text": ":",
                "logprob": -0.002314509591087699
              },
              {
                "text": "[",
                "logprob": -0.12916350364685059
              },
              {
                "text": "]",
                "logprob": -0.006318947300314903
              },
              {
                "text": "[",
                "logprob": -8.34461570775602e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.36609064811600545,
              "max_token_negative_log_likelihood": 1.692647933959961,
              "predictive_entropy": 0.08672201586177834,
              "shannon_entropy": 0.3812280484897201
            }
          }
        ],
        "cached": false,
        "request_time": 0.4728968143463135,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { { } } ( ( ) ( < > ) ( [ ] ) ) [ ] < ( ) < < { { [ < { ( < { { < { < > } > } } > ) } > < > ] [ { < > } ] ( < > ) } } > [ [ ] ] > > } < ( < ( < ( [ { } ] ) > ) > )"
        },
        "references": [
          {
            "output": {
              "text": " >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id328"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { { } } ( ( ) ( < > ) ( [ ] ) ) [ ] < ( ) < < { { [ < { ( < { { < { < > } > } } > ) } > < > ] [ { < > } ] ( < > ) } } > [ [ ] ] > > } < ( < ( < ( [ { } ] ) > ) > )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.630698491468138,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5445661544799805
              },
              {
                "text": "are",
                "logprob": -0.0016925308154895902
              },
              {
                "text": "the",
                "logprob": -1.9073468138230965e-06
              },
              {
                "text": "completed",
                "logprob": -0.07909232378005981
              },
              {
                "text": "Dy",
                "logprob": -0.005345575045794249
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.12613970695565513,
              "max_token_negative_log_likelihood": 0.5445661544799805,
              "predictive_entropy": 0.07919712676630297,
              "shannon_entropy": 0.368126647268582
            }
          }
        ],
        "cached": false,
        "request_time": 0.4739992618560791,
        "request_datetime": 1755804100
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { { < [ ] > [ ] { { } [ { { < [ < { { { ( ) } } } > ] > } < > } [ [ ] ] [ { } ] { { [ { [ [ ] ] } ] } } [ [ ] { ( { ( { { < { } > } } ) } ) } ] ] < { } > } < [ ] > [ ]"
        },
        "references": [
          {
            "output": {
              "text": " } } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id421"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { { < [ ] > [ ] { { } [ { { < [ < { { { ( ) } } } > ] > } < > } [ [ ] ] [ { } ] { { [ { [ [ ] ] } ] } } [ [ ] { ( { ( { { < { } > } } ) } ) } ] ] < { } > } < [ ] > [ ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { {",
            "logprob": -2.2865286702945014,
            "tokens": [
              {
                "text": "Input",
                "logprob": -2.238311767578125
              },
              {
                "text": ":",
                "logprob": -0.004745174665004015
              },
              {
                "text": "(",
                "logprob": -0.03193308040499687
              },
              {
                "text": "{",
                "logprob": -9.083335316972807e-05
              },
              {
                "text": "{",
                "logprob": -0.011447814293205738
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.4573057234156295,
              "max_token_negative_log_likelihood": 2.238311767578125,
              "predictive_entropy": 0.05715007252438227,
              "shannon_entropy": 0.33564060085918757
            }
          }
        ],
        "cached": false,
        "request_time": 0.469008207321167,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ ( ( { } ) { { ( ) < [ ] > } } ) [ ( ) { < [ { < > [ [ { } ( < ( ) > ) ] < > ] } ] > } ] { } [ ] } [ ("
        },
        "references": [
          {
            "output": {
              "text": " ) ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id105"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { ( ( { } ) { { ( ) < [ ] > } } ) [ ( ) { < [ { < > [ [ { } ( < ( ) > ) ] < > ] } ] > } ] { } [ ] } [ (",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( ( {",
            "logprob": -1.0205770743195899,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.28423282504081726
              },
              {
                "text": ":",
                "logprob": -0.0005958688561804593
              },
              {
                "text": "(",
                "logprob": -0.12705665826797485
              },
              {
                "text": "(",
                "logprob": -0.47410014271736145
              },
              {
                "text": "{",
                "logprob": -0.13459157943725586
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.20411540541099385,
              "max_token_negative_log_likelihood": 0.47410011291503906,
              "predictive_entropy": 0.14782949414802715,
              "shannon_entropy": 0.4802486654371023
            }
          }
        ],
        "cached": false,
        "request_time": 0.4748373031616211,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < { < ( [ < { { < < > > } } > { { } [ ] < < > > } < < [ [ [ < [ ( { } ) ] { [ ( ) ] [ { { } } ] } > ] ] ( < ( < { } > ) > ) ] > > ( ) ] ) > } < < < < { < > } > > > ( )"
        },
        "references": [
          {
            "output": {
              "text": " > > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id366"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < { < ( [ < { { < < > > } } > { { } [ ] < < > > } < < [ [ [ < [ ( { } ) ] { [ ( ) ] [ { { } } ] } > ] ] ( < ( < { } > ) > ) ] > > ( ) ] ) > } < < < < { < > } > > > ( )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Let's complete the",
            "logprob": -2.7538132847403176,
            "tokens": [
              {
                "text": "Let",
                "logprob": -2.3482632637023926
              },
              {
                "text": "'",
                "logprob": -0.0005402297829277813
              },
              {
                "text": "s",
                "logprob": 0.0
              },
              {
                "text": "complete",
                "logprob": -0.0639459639787674
              },
              {
                "text": "the",
                "logprob": -0.34106382727622986
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.550762648251839,
              "max_token_negative_log_likelihood": 2.3482632637023926,
              "predictive_entropy": 0.1054733983008191,
              "shannon_entropy": 0.524267018201398
            }
          }
        ],
        "cached": false,
        "request_time": 0.4648005962371826,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < > ] ( ( ( ) ) ) ( ( { { } } { ( ( [ { [ ( < { { ( ) } [ { { } } ] ( [ ] ) } > ) ( { < > } ) ] } ] ) )"
        },
        "references": [
          {
            "output": {
              "text": " } ) )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id173"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < > ] ( ( ( ) ) ) ( ( { { } } { ( ( [ { [ ( < { { ( ) } [ { { } } ] ( [ ] ) } > ) ( { < > } ) ] } ] ) )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -1.0525215015459253,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.9907394647598267
              },
              {
                "text": "are",
                "logprob": -0.0011241076281294227
              },
              {
                "text": "the",
                "logprob": -3.3378546504536644e-06
              },
              {
                "text": "completed",
                "logprob": -0.054819900542497635
              },
              {
                "text": "Dy",
                "logprob": -0.005834690760821104
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2105043030588149,
              "max_token_negative_log_likelihood": 0.9907394647598267,
              "predictive_entropy": 0.0853372208763176,
              "shannon_entropy": 0.36170771687175146
            }
          }
        ],
        "cached": false,
        "request_time": 0.47011637687683105,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < { ( { { } } { } ) } ( < [ ( [ ] [ ] ) < > [ ] [ [ ( ) ] [ < { [ { } ] } > [ ] ] { ( < > ) } [ < > ] { } [ ] [ ( ) ] ] ] > ) [ < ( { } ) [ ] ( ) >"
        },
        "references": [
          {
            "output": {
              "text": " ] > }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id346"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < { ( { { } } { } ) } ( < [ ( [ ] [ ] ) < > [ ] [ [ ( ) ] [ < { [ { } ] } > [ ] ] { ( < > ) } [ < > ] { } [ ] [ ( ) ] ] ] > ) [ < ( { } ) [ ] ( ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Below are the completed Dy",
            "logprob": -5.324731338536367,
            "tokens": [
              {
                "text": "Below",
                "logprob": -5.218039512634277
              },
              {
                "text": "are",
                "logprob": -0.006081646773964167
              },
              {
                "text": "the",
                "logprob": -2.1576648578047752e-05
              },
              {
                "text": "completed",
                "logprob": -0.09383666515350342
              },
              {
                "text": "Dy",
                "logprob": -0.006751937326043844
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.064945880463347,
              "max_token_negative_log_likelihood": 5.2180376052856445,
              "predictive_entropy": 0.025295137939974666,
              "shannon_entropy": 0.3731795044033788
            }
          }
        ],
        "cached": false,
        "request_time": 0.47479796409606934,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ { { { ( ) { ( ) } } } < { < ( ( < > [ ] ) ) > } > } { [ < > ] } ( ) < ( { < ( { { } } ) > } ) >"
        },
        "references": [
          {
            "output": {
              "text": " ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id147"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ { { { ( ) { ( ) } } } < { < ( ( < > [ ] ) ) > } > } { [ < > ] } ( ) < ( { < ( { { } } ) > } ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.754355830368695,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6972957253456116
              },
              {
                "text": "are",
                "logprob": -0.0013598490040749311
              },
              {
                "text": "the",
                "logprob": -2.9802276912960224e-06
              },
              {
                "text": "completed",
                "logprob": -0.04975331947207451
              },
              {
                "text": "Dy",
                "logprob": -0.005943956319242716
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15087116041777335,
              "max_token_negative_log_likelihood": 0.6972957253456116,
              "predictive_entropy": 0.08036253221712286,
              "shannon_entropy": 0.3397437084255216
            }
          }
        ],
        "cached": false,
        "request_time": 0.47449302673339844,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ < < ( ) < < [ [ { } ] ( < [ { } < > ] > ( { [ ] < > } ) { [ [ [ < [ { } < { ( ( ( ) ) ) } > ] ( ) [ < [ { { } } ] > ( { } { < > } ) ] > ] ] ] } ) ] > > >"
        },
        "references": [
          {
            "output": {
              "text": " > ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id135"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ < < ( ) < < [ [ { } ] ( < [ { } < > ] > ( { [ ] < > } ) { [ [ [ < [ { } < { ( ( ( ) ) ) } > ] ( ) [ < [ { { } } ] > ( { } { < > } ) ] > ] ] ] } ) ] > > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.7226995803248428,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.5523757934570312
              },
              {
                "text": ":",
                "logprob": -0.0026238083373755217
              },
              {
                "text": "(",
                "logprob": -0.16257156431674957
              },
              {
                "text": "{",
                "logprob": -0.005110771395266056
              },
              {
                "text": "[",
                "logprob": -1.764281842042692e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.3445399128679128,
              "max_token_negative_log_likelihood": 1.5523757934570312,
              "predictive_entropy": 0.09492091524116404,
              "shannon_entropy": 0.39917811936466024
            }
          }
        ],
        "cached": false,
        "request_time": 0.4788970947265625,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< ( ) > ( ) ( ( ( [ ] ) ) { ( ( < [ [ { [ < < > > ] { < > } ( ( < > ) ) } ] ] > ) ) } < > ) ( ( [ < ( ) > ] ) ( ) { ( ( ) ) } < > [ < [ ] { } ( { } ) > ] [ < < { [ { } ] } { } >"
        },
        "references": [
          {
            "output": {
              "text": " > ] )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id15"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < ( ) > ( ) ( ( ( [ ] ) ) { ( ( < [ [ { [ < < > > ] { < > } ( ( < > ) ) } ] ] > ) ) } < > ) ( ( [ < ( ) > ] ) ( ) { ( ( ) ) } < > [ < [ ] { } ( { } ) > ] [ < < { [ { } ] } { } >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To complete the Dyck",
            "logprob": -4.279836326837369,
            "tokens": [
              {
                "text": "To",
                "logprob": -3.7986793518066406
              },
              {
                "text": "complete",
                "logprob": -0.02568821795284748
              },
              {
                "text": "the",
                "logprob": -0.01671840064227581
              },
              {
                "text": "Dy",
                "logprob": -0.438749760389328
              },
              {
                "text": "ck",
                "logprob": -5.960462772236497e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.855967164784704,
              "max_token_negative_log_likelihood": 3.7986788749694824,
              "predictive_entropy": 0.0818989135324614,
              "shannon_entropy": 0.5139788785481869
            }
          }
        ],
        "cached": false,
        "request_time": 0.4780848026275635,
        "request_datetime": 1755804101
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < [ { [ ] } ] ( < > ) [ [ { { ( < [ ( ) ] > ) } } { < ( { } ) > < < > > } ( < > ) ] ] ( [ { [ < ( ( < > ) ) > ] } ] { } { { } } ) <"
        },
        "references": [
          {
            "output": {
              "text": " > > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id330"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < [ { [ ] } ] ( < > ) [ [ { { ( < [ ( ) ] > ) } } { < ( { } ) > < < > > } ( < > ) ] ] ( [ { [ < ( ( < > ) ) > ] } ] { } { { } } ) <",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Let's complete the",
            "logprob": -2.813170509893098,
            "tokens": [
              {
                "text": "Let",
                "logprob": -2.264146089553833
              },
              {
                "text": "'",
                "logprob": -0.00014625910262111574
              },
              {
                "text": "s",
                "logprob": 0.0
              },
              {
                "text": "complete",
                "logprob": -0.01903095655143261
              },
              {
                "text": "the",
                "logprob": -0.5298472046852112
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5626340883754892,
              "max_token_negative_log_likelihood": 2.264146089553833,
              "predictive_entropy": 0.11320479149289894,
              "shannon_entropy": 0.4724723144780505
            }
          }
        ],
        "cached": false,
        "request_time": 0.49151182174682617,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( { ( < [ ( ( ) ) ] > ) } ) [ < { < { { ( ( [ ] ) ) } } > < ( [ ] ) > } < ( < ( ( < [ ] > [ ] ) ( < [ { ( ( { } < > ) ) } ] > ) [ < > ] ) > ) >"
        },
        "references": [
          {
            "output": {
              "text": " > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id176"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( { ( < [ ( ( ) ) ] > ) } ) [ < { < { { ( ( [ ] ) ) } } > < ( [ ] ) > } < ( < ( ( < [ ] > [ ] ) ( < [ { ( ( { } < > ) ) } ] > ) [ < > ] ) > ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { (",
            "logprob": -0.8251401544894179,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.8195655345916748
              },
              {
                "text": ":",
                "logprob": -0.0008652042597532272
              },
              {
                "text": "(",
                "logprob": -1.728519782773219e-05
              },
              {
                "text": "{",
                "logprob": -2.372236667724792e-05
              },
              {
                "text": "(",
                "logprob": -0.004668408073484898
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.16502802161739966,
              "max_token_negative_log_likelihood": 0.8195655345916748,
              "predictive_entropy": 0.07333430608996423,
              "shannon_entropy": 0.2907126870297361
            }
          }
        ],
        "cached": false,
        "request_time": 0.49115753173828125,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < ( { { { [ { { < ( ( ) ) > } { [ { [ ] } ] } } ] [ < { [ ] } > ] < > [ ( [ { } ] ) ] } } } < > )"
        },
        "references": [
          {
            "output": {
              "text": " > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id227"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < ( { { { [ { { < ( ( ) ) > } { [ { [ ] } ] } } ] [ < { [ ] } > ] < > [ ( [ { } ] ) ] } } } < > )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: [ < (",
            "logprob": -3.1008286012802273,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.6770877838134766
              },
              {
                "text": ":",
                "logprob": -0.003112474223598838
              },
              {
                "text": "[",
                "logprob": -1.408769130706787
              },
              {
                "text": "<",
                "logprob": -0.006077381316572428
              },
              {
                "text": "(",
                "logprob": -0.005781831219792366
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.6201656850986182,
              "max_token_negative_log_likelihood": 1.6770877838134766,
              "predictive_entropy": 0.13454680433496832,
              "shannon_entropy": 0.4322360821068287
            }
          }
        ],
        "cached": false,
        "request_time": 0.5063354969024658,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ { ( { { } } ) } [ < { } [ { { } } ] { < { ( [ ( [ ( ) ] ) ] ( { { < ( ) > } } ) ) } > } > ] ] { } ) < { [ [ ]"
        },
        "references": [
          {
            "output": {
              "text": " ] } >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id345"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ { ( { { } } ) } [ < { } [ { { } } ] { < { ( [ ( [ ( ) ] ) ] ( { { < ( ) > } } ) ) } > } > ] ] { } ) < { [ [ ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( [ {",
            "logprob": -0.489455924930553,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.4877839982509613
              },
              {
                "text": ":",
                "logprob": -0.0012182918144389987
              },
              {
                "text": "(",
                "logprob": -6.675497570540756e-05
              },
              {
                "text": "[",
                "logprob": -0.0003833036171272397
              },
              {
                "text": "{",
                "logprob": -3.576272320060525e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.09789119023316743,
              "max_token_negative_log_likelihood": 0.4877839982509613,
              "predictive_entropy": 0.06023252354370925,
              "shannon_entropy": 0.22356610348506364
            }
          }
        ],
        "cached": false,
        "request_time": 0.5010581016540527,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ [ { ( [ ] ) } { [ ( { ( < < > > ) } < > < { ( [ [ [ ( ) ] ] ] ) { ( < [ ( < > < { } > [ ( ) ] ) ] > ) < < > > } [ ] } ( ( [ ] ) ) > ) ] } < { } > [ < { [ [ ] ] } > ] < [ ( ( ) ) ] > ] ]"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id81"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ [ { ( [ ] ) } { [ ( { ( < < > > ) } < > < { ( [ [ [ ( ) ] ] ] ) { ( < [ ( < > < { } > [ ( ) ] ) ] > ) < < > > } [ ] } ( ( [ ] ) ) > ) ] } < { } > [ < { [ [ ] ] } > ] < [ ( ( ) ) ] > ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5383275486433376,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.4444394111633301
              },
              {
                "text": "are",
                "logprob": -0.0034045374486595392
              },
              {
                "text": "the",
                "logprob": -4.410734163684538e-06
              },
              {
                "text": "completed",
                "logprob": -0.08657781779766083
              },
              {
                "text": "Dy",
                "logprob": -0.0039013714995235205
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.10766551806782446,
              "max_token_negative_log_likelihood": 0.4444394111633301,
              "predictive_entropy": 0.07432965794378106,
              "shannon_entropy": 0.3681506096196244
            }
          }
        ],
        "cached": false,
        "request_time": 0.5191590785980225,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < [ ( ) ] ( [ ( ) ] ( ( < { } > [ ( { ( < ( < > ) > { ( ) } ) } ) ] < [ ] > [ < ( < < > > ) > ] ( ( < > < { } ( < { } ( ( { } { ( ) } ) ) ( [ ] ) > ) > ) ) ) ) ) { < > } ( ) >"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id279"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < [ ( ) ] ( [ ( ) ] ( ( < { } > [ ( { ( < ( < > ) > { ( ) } ) } ) ] < [ ] > [ < ( < < > > ) > ] ( ( < > < { } ( < { } ( ( { } { ( ) } ) ) ( [ ] ) > ) > ) ) ) ) ) { < > } ( ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7751533242303594,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7068280577659607
              },
              {
                "text": "are",
                "logprob": -0.0025814801920205355
              },
              {
                "text": "the",
                "logprob": -4.529942543740617e-06
              },
              {
                "text": "completed",
                "logprob": -0.059080272912979126
              },
              {
                "text": "Dy",
                "logprob": -0.006658983416855335
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15503065576986047,
              "max_token_negative_log_likelihood": 0.7068280577659607,
              "predictive_entropy": 0.08269939119727496,
              "shannon_entropy": 0.38424093964858913
            }
          }
        ],
        "cached": false,
        "request_time": 0.4916956424713135,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < > { ( [ [ [ < ( ) < { ( { ( < [ { } ] { } > ) [ { { { ( ( ) ) } { { } < < < > > > ( ) } < { < ( ) > } [ [ < [ ( [ [ ( ) ] ] ) ] > ] ] > } } ] } ) } > { ( ) } > ] ] ] )"
        },
        "references": [
          {
            "output": {
              "text": " } ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id390"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < > { ( [ [ [ < ( ) < { ( { ( < [ { } ] { } > ) [ { { { ( ( ) ) } { { } < < < > > > ( ) } < { < ( ) > } [ [ < [ ( [ [ ( ) ] ] ) ] > ] ] > } } ] } ) } > { ( ) } > ] ] ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6888493592798568,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6103107929229736
              },
              {
                "text": "are",
                "logprob": -0.0036482936702668667
              },
              {
                "text": "the",
                "logprob": -3.2186455882765586e-06
              },
              {
                "text": "completed",
                "logprob": -0.0680559054017067
              },
              {
                "text": "Dy",
                "logprob": -0.006831148639321327
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.13776988037966476,
              "max_token_negative_log_likelihood": 0.6103107929229736,
              "predictive_entropy": 0.08110223049193337,
              "shannon_entropy": 0.3958487091229472
            }
          }
        ],
        "cached": false,
        "request_time": 0.4969773292541504,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ [ { ( < ( < [ ] > ) > ( < ( ( < < > > { [ ] ( < ( { [ < { < [ < > ] > } > ] } < ( ) > ) > ) ( ( ) ( { < ( ) > } ) ) } ) ) > ) ( { } ) < [ ( { } ) < { } > ] > ( ) ) ( ) } { } ] ]"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id428"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ [ { ( < ( < [ ] > ) > ( < ( ( < < > > { [ ] ( < ( { [ < { < [ < > ] > } > ] } < ( ) > ) > ) ( ( ) ( { < ( ) > } ) ) } ) ) > ) ( { } ) < [ ( { } ) < { } > ] > ( ) ) ( ) } { } ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To complete the Dyck",
            "logprob": -2.778100579976922,
            "tokens": [
              {
                "text": "To",
                "logprob": -2.380988597869873
              },
              {
                "text": "complete",
                "logprob": -0.021792825311422348
              },
              {
                "text": "the",
                "logprob": -0.00950596109032631
              },
              {
                "text": "Dy",
                "logprob": -0.3658127188682556
              },
              {
                "text": "ck",
                "logprob": -4.768370445162873e-07
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.5556201137602557,
              "max_token_negative_log_likelihood": 2.380988597869873,
              "predictive_entropy": 0.10092466082421651,
              "shannon_entropy": 0.5323625355666991
            }
          }
        ],
        "cached": false,
        "request_time": 0.496046781539917,
        "request_datetime": 1755804102
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ { < { } > ( { { [ ] } } ) ( ) { ( [ < [ ] ( ( ) ) ( ) { } { ( ) } { { } } { } < ( ) [ < [ { } ] > ] > > { } ] )"
        },
        "references": [
          {
            "output": {
              "text": " } } ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id304"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ { < { } > ( { { [ ] } } ) ( ) { ( [ < [ ] ( ( ) ) ( ) { } { ( ) } { { } } { } < ( ) [ < [ { } ] > ] > > { } ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7503123364831481,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6834803223609924
              },
              {
                "text": "are",
                "logprob": -0.0016625404823571444
              },
              {
                "text": "the",
                "logprob": -2.9802276912960224e-06
              },
              {
                "text": "completed",
                "logprob": -0.05983242020010948
              },
              {
                "text": "Dy",
                "logprob": -0.005334073211997747
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15006246401553652,
              "max_token_negative_log_likelihood": 0.6834802627563477,
              "predictive_entropy": 0.08167714329815681,
              "shannon_entropy": 0.3756140279394458
            }
          }
        ],
        "cached": false,
        "request_time": 0.5055727958679199,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { ( < > ) } < [ { { < ( < [ [ < ( [ ( ) ] ) > ] ( ) ] > { } < < < < ( < < < { { } } > > < > ( { ( ) } { { } } ) > ) > > > > ) > ( ( [ < > ] ) ) } }"
        },
        "references": [
          {
            "output": {
              "text": " ] > }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id199"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { ( < > ) } < [ { { < ( < [ [ < ( [ ( ) ] ) > ] ( ) ] > { } < < < < ( < < < { { } } > > < > ( { ( ) } { { } } ) > ) > > > > ) > ( ( [ < > ] ) ) } }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Below are the completed Dy",
            "logprob": -5.381723859221893,
            "tokens": [
              {
                "text": "Below",
                "logprob": -5.286340236663818
              },
              {
                "text": "are",
                "logprob": -0.004903553053736687
              },
              {
                "text": "the",
                "logprob": -1.585470999998506e-05
              },
              {
                "text": "completed",
                "logprob": -0.08503101766109467
              },
              {
                "text": "Dy",
                "logprob": -0.005433197133243084
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.076344398341098,
              "max_token_negative_log_likelihood": 5.2863383293151855,
              "predictive_entropy": 0.023029798989227857,
              "shannon_entropy": 0.37009516673278997
            }
          }
        ],
        "cached": false,
        "request_time": 0.49483513832092285,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ ] ( ) < > ) { ( < ( ( < > ) ) > ) } ( ( { < < [ ( ) ] > { } > } ) ( ( [ ( ) ] { { [ ( { ( ( ( ) ) ) } ) ] [ ( ) ] } } { ( { } ) ( { } ) { ( ) } } < > { [ ] < < > > ( ) } ) ) < ["
        },
        "references": [
          {
            "output": {
              "text": " ] > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id13"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ ] ( ) < > ) { ( < ( ( < > ) ) > ) } ( ( { < < [ ( ) ] > { } > } ) ( ( [ ( ) ] { { [ ( { ( ( ( ) ) ) } ) ] [ ( ) ] } } { ( { } ) ( { } ) { ( ) } } < > { [ ] < < > > ( ) } ) ) < [",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( [ ]",
            "logprob": -0.9257280857491423,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.9206339716911316
              },
              {
                "text": ":",
                "logprob": -0.0016781308222562075
              },
              {
                "text": "(",
                "logprob": -9.214453893946484e-05
              },
              {
                "text": "[",
                "logprob": -0.0014336556196212769
              },
              {
                "text": "]",
                "logprob": -0.0018901830771937966
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18514561495976523,
              "max_token_negative_log_likelihood": 0.9206339120864868,
              "predictive_entropy": 0.0743486723062233,
              "shannon_entropy": 0.29877477190457286
            }
          }
        ],
        "cached": false,
        "request_time": 0.5000395774841309,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { [ [ ] ( [ ] ) ] } > { ( { ( [ ] ) } [ < > ] ( ) < < < < [ [ [ ] ] ] > > > ( < > < > ) < ( < < ( ) > > ) > > ) } [ ( ) ] { [ ( { { { } } }"
        },
        "references": [
          {
            "output": {
              "text": " ) ] }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id472"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { [ [ ] ( [ ] ) ] } > { ( { ( [ ] ) } [ < > ] ( ) < < < < [ [ [ ] ] ] > > > ( < > < > ) < ( < < ( ) > > ) > > ) } [ ( ) ] { [ ( { { { } } }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7105740856768534,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6299724578857422
              },
              {
                "text": "are",
                "logprob": -0.004205787554383278
              },
              {
                "text": "the",
                "logprob": -1.7165990357170813e-05
              },
              {
                "text": "completed",
                "logprob": -0.06804488599300385
              },
              {
                "text": "Dy",
                "logprob": -0.008333788253366947
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1421148201745382,
              "max_token_negative_log_likelihood": 0.6299724578857422,
              "predictive_entropy": 0.08231323097679706,
              "shannon_entropy": 0.32809216587338597
            }
          }
        ],
        "cached": false,
        "request_time": 0.4981353282928467,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ [ < > ] ] } { } { [ ( [ { { { < < ( ) > > } } } ] ) ] ( [ ] ) { { ( [ ] ) } } [ < < [ [ { [ { { ( ) } } ] [ { < > } ] } ( ( < < > > ) { } ) ] ] < > >"
        },
        "references": [
          {
            "output": {
              "text": " > ] }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id274"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ [ < > ] ] } { } { [ ( [ { { { < < ( ) > > } } } ] ) ] ( [ ] ) { { ( [ ] ) } } [ < < [ [ { [ { { ( ) } } ] [ { < > } ] } ( ( < < > > ) { } ) ] ] < > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For each input, I",
            "logprob": -3.964793562889099,
            "tokens": [
              {
                "text": "For",
                "logprob": -2.485557794570923
              },
              {
                "text": "each",
                "logprob": -0.31436505913734436
              },
              {
                "text": "input",
                "logprob": -0.5765597820281982
              },
              {
                "text": ",",
                "logprob": -0.3005228042602539
              },
              {
                "text": "I",
                "logprob": -0.28778812289237976
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7929587066173553,
              "max_token_negative_log_likelihood": 2.485557794570923,
              "predictive_entropy": 0.23976454734802247,
              "shannon_entropy": 0.9762006402015686
            }
          }
        ],
        "cached": false,
        "request_time": 0.5049493312835693,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< > ( < < { { < < < > > > } < < ( ) > < < > > > ( ) } > [ [ ] ] [ [ { { < < [ ] [ ] > > } } ] ] ( ) > ( ( [ ( < > ) [ { } ] [ { { } } ] ] ) ) ) [ ( < > ) [ ( { { } } ) ] ] {"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id78"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < > ( < < { { < < < > > > } < < ( ) > < < > > > ( ) } > [ [ ] ] [ [ { { < < [ ] [ ] > > } } ] ] ( ) > ( ( [ ( < > ) [ { } ] [ { { } } ] ] ) ) ) [ ( < > ) [ ( { { } } ) ] ] {",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Let's complete each",
            "logprob": -4.0372096849023364,
            "tokens": [
              {
                "text": "Let",
                "logprob": -3.0536558628082275
              },
              {
                "text": "'",
                "logprob": -0.0004903068183921278
              },
              {
                "text": "s",
                "logprob": 0.0
              },
              {
                "text": "complete",
                "logprob": -0.03362041339278221
              },
              {
                "text": "each",
                "logprob": -0.9494431018829346
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8074418844771571,
              "max_token_negative_log_likelihood": 3.0536556243896484,
              "predictive_entropy": 0.10889643039554357,
              "shannon_entropy": 0.45710713353235777
            }
          }
        ],
        "cached": false,
        "request_time": 0.49759912490844727,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ ( ) ( < < > > ) [ < { < ( [ ] ) > } > ] { < > } [ < [ { < ( ) { } < { < < < > > { { ( [ ] ) } } ( ( ) ) [ { } ] > ( < ( [ ] ) > ) { [ < > ] } < { } > } > > ( { { } } ) } ]"
        },
        "references": [
          {
            "output": {
              "text": " > ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id145"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ ( ) ( < < > > ) [ < { < ( [ ] ) > } > ] { < > } [ < [ { < ( ) { } < { < < < > > { { ( [ ] ) } } ( ( ) ) [ { } ] > ( < ( [ ] ) > ) { [ < > ] } < { } > } > > ( { { } } ) } ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For each given input,",
            "logprob": -4.408254213631153,
            "tokens": [
              {
                "text": "For",
                "logprob": -2.26814603805542
              },
              {
                "text": "each",
                "logprob": -0.22749446332454681
              },
              {
                "text": "given",
                "logprob": -1.5678869485855103
              },
              {
                "text": "input",
                "logprob": -0.2731766104698181
              },
              {
                "text": ",",
                "logprob": -0.071550153195858
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8816508427262306,
              "max_token_negative_log_likelihood": 2.26814603805542,
              "predictive_entropy": 0.20346686094999314,
              "shannon_entropy": 0.8560678482055664
            }
          }
        ],
        "cached": false,
        "request_time": 0.500464677810669,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( [ { ( [ < { [ [ ( ) < > { ( [ ] ) } { [ ] } [ < [ { } ] > [ { } ] ] < > [ ] ] ( ) ] < [ { [ ] } ] { { } < > } { < ( { } ) > } > < < { } > > [ ] { } } { { < < > > } } > ] [ [ { } ] ] < > ) }"
        },
        "references": [
          {
            "output": {
              "text": " ] )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id68"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( [ { ( [ < { [ [ ( ) < > { ( [ ] ) } { [ ] } [ < [ { } ] > [ { } ] ] < > [ ] ] ( ) ] < [ { [ ] } ] { { } < > } { < ( { } ) > } > < < { } > > [ ] { } } { { < < > > } } > ] [ [ { } ] ] < > ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the Dyck",
            "logprob": -4.906194243926507,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5217480659484863
              },
              {
                "text": "are",
                "logprob": -0.0016708712792024016
              },
              {
                "text": "the",
                "logprob": -1.4305104514278355e-06
              },
              {
                "text": "Dy",
                "logprob": -4.382771968841553
              },
              {
                "text": "ck",
                "logprob": -1.9073468138230965e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.9812386561190806,
              "max_token_negative_log_likelihood": 4.382771015167236,
              "predictive_entropy": 0.0732126859709524,
              "shannon_entropy": 0.36128806409651587
            }
          }
        ],
        "cached": false,
        "request_time": 0.5005674362182617,
        "request_datetime": 1755804103
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ [ < ( ( [ { { < < [ ] > > } } { < { } > } { < [ ] > } ( { { { ( [ ( ) { } ] ) } [ ] } } ) ] ) ) > ]"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id343"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ [ < ( ( [ { { < < [ ] > > } } { < { } > } { < [ ] > } ( { { { ( [ ( ) { } ] ) } [ ] } } ) ] ) ) > ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.77734561251782,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7253082990646362
              },
              {
                "text": "are",
                "logprob": -0.0018067717319354415
              },
              {
                "text": "the",
                "logprob": -4.6491513785440475e-06
              },
              {
                "text": "completed",
                "logprob": -0.042799025774002075
              },
              {
                "text": "Dy",
                "logprob": -0.0074268667958676815
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.15546911871279007,
              "max_token_negative_log_likelihood": 0.7253082394599915,
              "predictive_entropy": 0.08027246941128396,
              "shannon_entropy": 0.36988740564847833
            }
          }
        ],
        "cached": false,
        "request_time": 0.5055370330810547,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < ( ( ( ) ) ) ( [ ( ) ] ) { ( ( ( [ < ( ( ) ) < [ { < ( ) > } ] { ( ( ) ) } > > ] ) [ [ ] ] < { } > ) ) ( ( { } ) ) ( ) } < < < < > > > [ { ( ) } ] > > ) [ < ("
        },
        "references": [
          {
            "output": {
              "text": " ) > ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id487"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < ( ( ( ) ) ) ( [ ( ) ] ) { ( ( ( [ < ( ( ) ) < [ { < ( ) > } ] { ( ( ) ) } > > ] ) [ [ ] ] < { } > ) ) ( ( { } ) ) ( ) } < < < < > > > [ { ( ) } ] > > ) [ < (",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "To complete the given sequences",
            "logprob": -7.865878686308861,
            "tokens": [
              {
                "text": "To",
                "logprob": -3.461233139038086
              },
              {
                "text": "complete",
                "logprob": -0.04464075714349747
              },
              {
                "text": "the",
                "logprob": -0.0351717546582222
              },
              {
                "text": "given",
                "logprob": -1.2328146696090698
              },
              {
                "text": "sequences",
                "logprob": -3.0920183658599854
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.5731756255030631,
              "max_token_negative_log_likelihood": 3.4612326622009277,
              "predictive_entropy": 0.1370077282190323,
              "shannon_entropy": 0.7254066199064255
            }
          }
        ],
        "cached": false,
        "request_time": 0.4934074878692627,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< ( { < { [ < < { < > } > > ] { [ ( ) { ( ) { } } ] } } > } < [ ] ( { < ( { < [ ( ( { } ) ) ] > } ) > { [ ] } } ) { { } } < > < ( ) > >"
        },
        "references": [
          {
            "output": {
              "text": " ) >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id178"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < ( { < { [ < < { < > } > > ] { [ ( ) { ( ) { } } ] } } > } < [ ] ( { < ( { < [ ( ( { } ) ) ] > } ) > { [ ] } } ) { { } } < > < ( ) > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7040258489987536,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6314860582351685
              },
              {
                "text": "are",
                "logprob": -0.001907792640849948
              },
              {
                "text": "the",
                "logprob": -2.3841830625315197e-06
              },
              {
                "text": "completed",
                "logprob": -0.06572843343019485
              },
              {
                "text": "Dy",
                "logprob": -0.004901180509477854
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.14080517669267464,
              "max_token_negative_log_likelihood": 0.6314860582351685,
              "predictive_entropy": 0.0808311585098636,
              "shannon_entropy": 0.37961777639065986
            }
          }
        ],
        "cached": false,
        "request_time": 0.5005812644958496,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < { < [ { [ ] { ( ( < > ) ) } } ] [ [ ] ] { ( [ { ( [ [ ( ) ] { [ ] { ( [ ] ) } } [ < > ] ] ) } ] ) < > } > }"
        },
        "references": [
          {
            "output": {
              "text": " > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id365"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < { < [ { [ ] { ( ( < > ) ) } } ] [ [ ] ] { ( [ { ( [ [ ( ) ] { [ ] { ( [ ] ) } } [ < > ] ] ) } ] ) < > } > }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8648823192256714,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7904446721076965
              },
              {
                "text": "are",
                "logprob": -0.0034749857150018215
              },
              {
                "text": "the",
                "logprob": -4.172316494077677e-06
              },
              {
                "text": "completed",
                "logprob": -0.06617226451635361
              },
              {
                "text": "Dy",
                "logprob": -0.004786224570125341
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.17297646897086452,
              "max_token_negative_log_likelihood": 0.7904446721076965,
              "predictive_entropy": 0.08574908985583533,
              "shannon_entropy": 0.4088330408623733
            }
          }
        ],
        "cached": false,
        "request_time": 0.499265193939209,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { { [ ( ) ] } } < < [ { } ] > > > ( [ [ ( { < { ( ) { } } > } ) ( { } ) [ ] [ { ( { } ) } ] [ ( < ( { } ) > ) ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ] )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id267"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { { [ ( ) ] } } < < [ { } ] > > > ( [ [ ( { < { ( ) { } } > } ) ( { } ) [ ] [ { ( { } ) } ] [ ( < ( { } ) > ) ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5646418738065222,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.491410493850708
              },
              {
                "text": "are",
                "logprob": -0.002358038444072008
              },
              {
                "text": "the",
                "logprob": -4.768360213347478e-06
              },
              {
                "text": "completed",
                "logprob": -0.06473100185394287
              },
              {
                "text": "Dy",
                "logprob": -0.006137571297585964
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11292838258896154,
              "max_token_negative_log_likelihood": 0.4914105236530304,
              "predictive_entropy": 0.07395152793969828,
              "shannon_entropy": 0.35499570234387645
            }
          }
        ],
        "cached": false,
        "request_time": 0.49886083602905273,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( < { { ( < < { ( { ( ) ( { [ ] } < ( < > ) > < > ) < > } ) } > > ) } } < [ [ < > ] { < ( < > ) > } [ ] [ ] ] >"
        },
        "references": [
          {
            "output": {
              "text": " > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id103"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( < { { ( < < { ( { ( ) ( { [ ] } < ( < > ) > < > ) < > } ) } > > ) } } < [ [ < > ] { < ( < > ) > } [ ] [ ] ] >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( < {",
            "logprob": -1.6459138369791617,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.5626473426818848
              },
              {
                "text": ":",
                "logprob": -0.0016782497987151146
              },
              {
                "text": "(",
                "logprob": -4.672895011026412e-05
              },
              {
                "text": "<",
                "logprob": -0.08151552826166153
              },
              {
                "text": "{",
                "logprob": -2.5987286790041253e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.32918274268231473,
              "max_token_negative_log_likelihood": 1.5626472234725952,
              "predictive_entropy": 0.0808765828547621,
              "shannon_entropy": 0.3631968884787057
            }
          }
        ],
        "cached": false,
        "request_time": 0.4944601058959961,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ [ < [ ( ) ( < [ < < > > ] [ ] < ( ( { { } } ) ) > ( [ ( ( ) ) ] ) { } < > > ) ] > ] [ { [ ( ) ] [ ( < > ) ] { } } ( [ [ ] ] ) [ [ ( ) ] ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ] }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id494"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ [ < [ ( ) ( < [ < < > > ] [ ] < ( ( { { } } ) ) > ( [ ( ( ) ) ] ) { } < > > ) ] > ] [ { [ ( ) ] [ ( < > ) ] { } } ( [ [ ] ] ) [ [ ( ) ] ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5769500058356698,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5043839812278748
              },
              {
                "text": "are",
                "logprob": -0.0012430568458512425
              },
              {
                "text": "the",
                "logprob": -2.0265558760002023e-06
              },
              {
                "text": "completed",
                "logprob": -0.06575176119804382
              },
              {
                "text": "Dy",
                "logprob": -0.005569180008023977
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.11538999262306789,
              "max_token_negative_log_likelihood": 0.50438392162323,
              "predictive_entropy": 0.07458708456210843,
              "shannon_entropy": 0.3269078135112068
            }
          }
        ],
        "cached": false,
        "request_time": 0.5024876594543457,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < ( ( ( [ ( ) ] ) { < < { { } } > > { } } ) < [ ] > [ { { { [ { { } } ] } } } ( < [ { } ] > ) ] ) > ["
        },
        "references": [
          {
            "output": {
              "text": " ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id298"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < ( ( ( [ ( ) ] ) { < < { { } } > > { } } ) < [ ] > [ { { { [ { { } } ] } } } ( < [ { } ] > ) ] ) > [",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: [ < (",
            "logprob": -1.4797491076315055,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.7794044017791748
              },
              {
                "text": ":",
                "logprob": -0.0013329440262168646
              },
              {
                "text": "[",
                "logprob": -0.6936788558959961
              },
              {
                "text": "<",
                "logprob": -0.005307037848979235
              },
              {
                "text": "(",
                "logprob": -2.586808113846928e-05
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.29594980177644176,
              "max_token_negative_log_likelihood": 0.7794044017791748,
              "predictive_entropy": 0.14215750315051992,
              "shannon_entropy": 0.4340965803479776
            }
          }
        ],
        "cached": false,
        "request_time": 0.4997391700744629,
        "request_datetime": 1755804104
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < < ( < < < ( ) > { ( { { [ ( { { < > ( ) [ ( [ ( < > [ { } ] [ < { ( ) } > ] ) ] { [ ( [ ( [ ( ( ( ) { } ) ) [ [ ] ] ] ) ] ) ] } ) ] } < > } ) [ ( ) ] ] } } ) } > > ) > >"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id303"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < < ( < < < ( ) > { ( { { [ ( { { < > ( ) [ ( [ ( < > [ { } ] [ < { ( ) } > ] ) ] { [ ( [ ( [ ( ( ( ) { } ) ) [ [ ] ] ] ) ] ) ] } ) ] } < > } ) [ ( ) ] ] } } ) } > > ) > >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8209813465246043,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7356624603271484
              },
              {
                "text": "are",
                "logprob": -0.005297314375638962
              },
              {
                "text": "the",
                "logprob": -4.887569048150908e-06
              },
              {
                "text": "completed",
                "logprob": -0.0740455910563469
              },
              {
                "text": "Dy",
                "logprob": -0.005971093196421862
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.16419627191735345,
              "max_token_negative_log_likelihood": 0.7356624603271484,
              "predictive_entropy": 0.08649824755020745,
              "shannon_entropy": 0.42783301133604257
            }
          }
        ],
        "cached": false,
        "request_time": 0.5012168884277344,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < { { { } { [ [ ] ] } } ( ) [ { [ ( < < > > ) ] } < { ( < ( ) > ) } > ( ( [ ( ) ] < > ) ) { ( ) [ [ { } ] ] } ] { } } ( ( ) ) >"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id238"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < { { { } { [ [ ] ] } } ( ) [ { [ ( < < > > ) ] } < { ( < ( ) > ) } > ( ( [ ( ) ] < > ) ) { ( ) [ [ { } ] ] } ] { } } ( ( ) ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.9011586894034735,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.840691089630127
              },
              {
                "text": "are",
                "logprob": -0.0017847575945779681
              },
              {
                "text": "the",
                "logprob": -1.6689286894688848e-06
              },
              {
                "text": "completed",
                "logprob": -0.05453592911362648
              },
              {
                "text": "Dy",
                "logprob": -0.004145244136452675
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18023174211875811,
              "max_token_negative_log_likelihood": 0.840691089630127,
              "predictive_entropy": 0.08404744572442269,
              "shannon_entropy": 0.366519802800758
            }
          }
        ],
        "cached": false,
        "request_time": 0.498903751373291,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< { } < [ ] > ( { ( { } ) } ( ) [ [ ( < > ) ] ] [ ] ( ) ( < > ) { < > } ( < > ) ( [ [ ( ) ] ] [ ] ( < < [ ( ) ] > > ) ) ) > [ ] {"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id478"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < { } < [ ] > ( { ( { } ) } ( ) [ [ ( < > ) ] ] [ ] ( ) ( < > ) { < > } ( < > ) ( [ [ ( ) ] ] [ ] ( < < [ ( ) ] > > ) ) ) > [ ] {",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -2.0776849071262404,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.8355904221534729
              },
              {
                "text": ":",
                "logprob": -0.0015526870265603065
              },
              {
                "text": "(",
                "logprob": -1.095179796218872
              },
              {
                "text": "{",
                "logprob": -0.0014966250164434314
              },
              {
                "text": "[",
                "logprob": -0.14386537671089172
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.41553697576746346,
              "max_token_negative_log_likelihood": 1.095179796218872,
              "predictive_entropy": 0.17125503451097757,
              "shannon_entropy": 0.4898255344480276
            }
          }
        ],
        "cached": false,
        "request_time": 0.4978663921356201,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ < { < [ < [ < < { { < > [ [ ] ] } } > > [ ( < { ( ( ) ) } > ( ) < > [ ( < ( ) > ) ] ) ] < > ] > ] > } > ] ( [ ( [ ( ) ] [ { { ( ) } } ] ) ] ) {"
        },
        "references": [
          {
            "output": {
              "text": " } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id222"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ < { < [ < [ < < { { < > [ [ ] ] } } > > [ ( < { ( ( ) ) } > ( ) < > [ ( < ( ) > ) ] ) ] < > ] > ] > } > ] ( [ ( [ ( ) ] [ { { ( ) } } ] ) ] ) {",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.9435165222857904,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.8925889134407043
              },
              {
                "text": "are",
                "logprob": -0.0018273574532940984
              },
              {
                "text": "the",
                "logprob": -4.6491513785440475e-06
              },
              {
                "text": "completed",
                "logprob": -0.04569748044013977
              },
              {
                "text": "Dy",
                "logprob": -0.003398121800273657
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.18870329333221889,
              "max_token_negative_log_likelihood": 0.8925888538360596,
              "predictive_entropy": 0.08289410399520421,
              "shannon_entropy": 0.2849050693999743
            }
          }
        ],
        "cached": false,
        "request_time": 0.49857544898986816,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ { [ { } ] [ [ [ ( ( ( { { } } ) ) ) ] { { } } ] ] } [ < { { { ( [ ] ) } < [ ( ( ) ) { ( [ ] ) } ] > } } > ] ( ( ) [ ] < ( { { { } } } [ { } ] [ ] ) { }"
        },
        "references": [
          {
            "output": {
              "text": " > ) }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id333"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { { [ { } ] [ [ [ ( ( ( { { } } ) ) ) ] { { } } ] ] } [ < { { { ( [ ] ) } < [ ( ( ) ) { ( [ ] ) } ] > } } > ] ( ( ) [ ] < ( { { { } } } [ { } ] [ ] ) { }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -1.0218753821623068,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.9601554274559021
              },
              {
                "text": "are",
                "logprob": -0.0022999995853751898
              },
              {
                "text": "the",
                "logprob": -3.4570634852570947e-06
              },
              {
                "text": "completed",
                "logprob": -0.05431770533323288
              },
              {
                "text": "Dy",
                "logprob": -0.005098792724311352
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2043750620924584,
              "max_token_negative_log_likelihood": 0.9601553678512573,
              "predictive_entropy": 0.08527931240264479,
              "shannon_entropy": 0.3298595014632156
            }
          }
        ],
        "cached": false,
        "request_time": 0.501720666885376,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < [ [ ( ( [ { ( ) < > [ { { [ { < { { < > [ < [ < > ] > ] } } > } ] } } ] } < < ( { < ( ) > } { < > } { { < > } } ( < > ( ( ( { } ) ) ) ) ) > > ] ) ) ] ] >"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id329"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < [ [ ( ( [ { ( ) < > [ { { [ { < { { < > [ < [ < > ] > ] } } > } ] } } ] } < < ( { < ( ) > } { < > } { { < > } } ( < > ( ( ( { } ) ) ) ) ) > > ] ) ) ] ] >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: ( { [",
            "logprob": -1.202777159778634,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.1782362461090088
              },
              {
                "text": ":",
                "logprob": -0.0019185009878128767
              },
              {
                "text": "(",
                "logprob": -0.022442296147346497
              },
              {
                "text": "{",
                "logprob": -6.580135959666222e-05
              },
              {
                "text": "[",
                "logprob": -0.00011431517486926168
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.2405554600234609,
              "max_token_negative_log_likelihood": 1.1782363653182983,
              "predictive_entropy": 0.07734505220578285,
              "shannon_entropy": 0.3322759424801916
            }
          }
        ],
        "cached": false,
        "request_time": 0.49398016929626465,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< ( [ [ [ { [ < ( ) ( ) > ] } { } [ < [ { [ ] } ( { } ) ] > ] [ < { < ( < ( { } ) > ) > } > ] ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ] ) >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id424"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < ( [ [ [ { [ < ( ) ( ) > ] } { } [ < [ { [ ] } ( { } ) ] > ] [ < { < ( < ( { } ) > ) > } > ] ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.6234024313243935,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.5433138608932495
              },
              {
                "text": "are",
                "logprob": -0.0030125256162136793
              },
              {
                "text": "the",
                "logprob": -1.0013530300057027e-05
              },
              {
                "text": "completed",
                "logprob": -0.06984329968690872
              },
              {
                "text": "Dy",
                "logprob": -0.007222731597721577
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1246805041197149,
              "max_token_negative_log_likelihood": 0.5433139204978943,
              "predictive_entropy": 0.07817673095432838,
              "shannon_entropy": 0.37048639643762726
            }
          }
        ],
        "cached": false,
        "request_time": 0.49549365043640137,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< < { { [ [ [ ] ( { < [ [ ( [ ] ) ( ) ] ] > ( [ { < [ [ [ ( ) ] ( [ [ ( ) ] ] ) ] ] > } ] ) } ) [ ] ] [ ] ( ) < > { { } } [ [ ] ( ) ( [ ] ) [ [ ] { [ ] } ] ] ] }"
        },
        "references": [
          {
            "output": {
              "text": " } > >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id160"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < < { { [ [ [ ] ( { < [ [ ( [ ] ) ( ) ] ] > ( [ { < [ [ [ ( ) ] ( [ [ ( ) ] ] ) ] ] > } ] ) } ) [ ] ] [ ] ( ) < > { { } } [ [ ] ( ) ( [ ] ) [ [ ] { [ ] } ] ] ] }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < < {",
            "logprob": -2.2989582781592617,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.4692587852478027
              },
              {
                "text": ":",
                "logprob": -0.0015598285244777799
              },
              {
                "text": "<",
                "logprob": -0.827151894569397
              },
              {
                "text": "<",
                "logprob": -0.00015925093612167984
              },
              {
                "text": "{",
                "logprob": -0.0008285188814625144
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.459791652765125,
              "max_token_negative_log_likelihood": 1.4692587852478027,
              "predictive_entropy": 0.1404645340895513,
              "shannon_entropy": 0.4348886597668752
            }
          }
        ],
        "cached": false,
        "request_time": 0.49423813819885254,
        "request_datetime": 1755804105
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ ( ) [ { ( { [ [ ( ( ) ) ] ] } ) } ] { < [ ( < ( [ < > { [ < [ ] > ] } { { { [ [ [ { } ] ] ] } } } ] ) < { } > > [ ] ) ] > { [ [ < < > > ] ] }"
        },
        "references": [
          {
            "output": {
              "text": " } }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id351"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { ( ) [ { ( { [ [ ( ( ) ) ] ] } ) } ] { < [ ( < ( [ < > { [ < [ ] > ] } { { { [ [ [ { } ] ] ] } } } ] ) < { } > > [ ] ) ] > { [ [ < < > > ] ] }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Let's complete the",
            "logprob": -4.175478181408835,
            "tokens": [
              {
                "text": "Let",
                "logprob": -3.7296934127807617
              },
              {
                "text": "'",
                "logprob": -0.00023409964342135936
              },
              {
                "text": "s",
                "logprob": 0.0
              },
              {
                "text": "complete",
                "logprob": -0.03329657390713692
              },
              {
                "text": "the",
                "logprob": -0.41225409507751465
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8350955451693153,
              "max_token_negative_log_likelihood": 3.7296929359436035,
              "predictive_entropy": 0.07898602086934262,
              "shannon_entropy": 0.44217808103199296
            }
          }
        ],
        "cached": false,
        "request_time": 0.4908139705657959,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < [ < > ] [ < [ [ < > ] ] [ [ [ ( ) ] ( ( [ < < > > [ ( [ { } ] ) ] ] ) ) < [ ] > [ [ ] [ ] ] ( ) ] ] < { } > ( [ [ [ ] ] ] ) > ] [ ] >"
        },
        "references": [
          {
            "output": {
              "text": " }"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id57"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < [ < > ] [ < [ [ < > ] ] [ [ [ ( ) ] ( ( [ < < > > [ ( [ { } ] ) ] ] ) ) < [ ] > [ [ ] [ ] ] ( ) ] ] < { } > ( [ [ [ ] ] ] ) > ] [ ] >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.710385005903845,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6469196081161499
              },
              {
                "text": "are",
                "logprob": -0.0032804980874061584
              },
              {
                "text": "the",
                "logprob": -5.8412379075889476e-06
              },
              {
                "text": "completed",
                "logprob": -0.054809294641017914
              },
              {
                "text": "Dy",
                "logprob": -0.005369763821363449
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.14207699741582475,
              "max_token_negative_log_likelihood": 0.6469196081161499,
              "predictive_entropy": 0.07985324449500694,
              "shannon_entropy": 0.3743963925851858
            }
          }
        ],
        "cached": false,
        "request_time": 0.49106359481811523,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ { } [ ] ] < [ { } { [ [ ] ] } [ [ [ < ( [ ( ( ) ) ] ) ( ( < > ) ) > ] ] < [ { < [ ] > } ] > [ ] ]"
        },
        "references": [
          {
            "output": {
              "text": " ] >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id223"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ { } [ ] ] < [ { } { [ [ ] ] } [ [ [ < ( [ ( ( ) ) ] ) ( ( < > ) ) > ] ] < [ { < [ ] > } ] > [ ] ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.7119307950752045,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.6544047594070435
              },
              {
                "text": "are",
                "logprob": -0.00252714054659009
              },
              {
                "text": "the",
                "logprob": -7.986990567587782e-06
              },
              {
                "text": "completed",
                "logprob": -0.048011891543865204
              },
              {
                "text": "Dy",
                "logprob": -0.006979016587138176
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.14238615376580127,
              "max_token_negative_log_likelihood": 0.6544046998023987,
              "predictive_entropy": 0.07906964141238859,
              "shannon_entropy": 0.3577758066181559
            }
          }
        ],
        "cached": false,
        "request_time": 0.49533915519714355,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< [ ( ( [ ( ( ) < { < < { [ ( < ( [ [ < > ] ] ) > ) ] } > > } > ) ] ) ) ] ( ) ( < ( ( [ [ ] ] ) ( [ ( ) ] ) ) > ) { <"
        },
        "references": [
          {
            "output": {
              "text": " > } >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id405"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < [ ( ( [ ( ( ) < { < < { [ ( < ( [ [ < > ] ] ) > ) ] } > > } > ) ] ) ) ] ( ) ( < ( ( [ [ ] ] ) ( [ ( ) ] ) ) > ) { <",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < [ (",
            "logprob": -0.24928131279011723,
            "tokens": [
              {
                "text": "Input",
                "logprob": -0.21029722690582275
              },
              {
                "text": ":",
                "logprob": -0.0005550036439672112
              },
              {
                "text": "<",
                "logprob": -0.03824027255177498
              },
              {
                "text": "[",
                "logprob": -0.00018880968855228275
              },
              {
                "text": "(",
                "logprob": 0.0
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.04985624933906365,
              "max_token_negative_log_likelihood": 0.21029719710350037,
              "predictive_entropy": 0.04159238777356222,
              "shannon_entropy": 0.19346069684792155
            }
          }
        ],
        "cached": false,
        "request_time": 0.49239540100097656,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ < > [ < < [ ( ( ( < < > > ) < > ) [ ] ) ] > > ] ] [ ( < < ( ( { < [ { [ < ( { ( ) } ) > ] } ] > } ) ) [ ( { [ ] } ) ] { < > } > > )"
        },
        "references": [
          {
            "output": {
              "text": " ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id382"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ < > [ < < [ ( ( ( < < > > ) < > ) [ ] ) ] > > ] ] [ ( < < ( ( { < [ { [ < ( { ( ) } ) > ] } ] > } ) ) [ ( { [ ] } ) ] { < > } > > )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8607976982589207,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.8063868880271912
              },
              {
                "text": "are",
                "logprob": -0.001353063271380961
              },
              {
                "text": "the",
                "logprob": -1.6689286894688848e-06
              },
              {
                "text": "completed",
                "logprob": -0.04885290190577507
              },
              {
                "text": "Dy",
                "logprob": -0.004203176125884056
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.1721595350422831,
              "max_token_negative_log_likelihood": 0.8063868880271912,
              "predictive_entropy": 0.08241765266254789,
              "shannon_entropy": 0.3564138350666326
            }
          }
        ],
        "cached": false,
        "request_time": 0.4979104995727539,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ [ { [ < > ] } ] < > } { [ < { ( < < ( [ ( ( { ( ) } ) ) ] [ ] ) > > ) } > ] } [ < > ] [ [ [ [ ]"
        },
        "references": [
          {
            "output": {
              "text": " ] ] ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id203"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { [ { [ < > ] } ] < > } { [ < { ( < < ( [ ( ( { ( ) } ) ) ] [ ] ) > > ) } > ] } [ < > ] [ [ [ [ ]",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Completed Dyck sequences",
            "logprob": -3.7432148549705673,
            "tokens": [
              {
                "text": "Comple",
                "logprob": -3.157348871231079
              },
              {
                "text": "ted",
                "logprob": -0.018759334459900856
              },
              {
                "text": "Dy",
                "logprob": -0.4672054052352905
              },
              {
                "text": "ck",
                "logprob": -1.1920928244535389e-07
              },
              {
                "text": "sequences",
                "logprob": -0.09990112483501434
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.7486429132521181,
              "max_token_negative_log_likelihood": 3.1573486328125,
              "predictive_entropy": 0.10718881748616696,
              "shannon_entropy": 0.536725274639457
            }
          }
        ],
        "cached": false,
        "request_time": 0.48586606979370117,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "( ( [ [ < > ] ] ) ( [ ( { } ( ) [ [ ] [ ( ) ] < < { ( ( ) ) } > > ] ) ] [ [ < > < { { } } > [ [ ] ] ] ] )"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id182"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: ( ( [ [ < > ] ] ) ( [ ( { } ( ) [ [ ] [ ( ) ] < < { ( ( ) ) } > > ] ) ] [ [ < > < { { } } > [ [ ] ] ] ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Completed Dyck sequences",
            "logprob": -4.0614109225571156,
            "tokens": [
              {
                "text": "Comple",
                "logprob": -3.72164249420166
              },
              {
                "text": "ted",
                "logprob": -0.03469931706786156
              },
              {
                "text": "Dy",
                "logprob": -0.26926422119140625
              },
              {
                "text": "ck",
                "logprob": 0.0
              },
              {
                "text": "sequences",
                "logprob": -0.03580489009618759
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.8122820824384689,
              "max_token_negative_log_likelihood": 3.721642017364502,
              "predictive_entropy": 0.07276113852858543,
              "shannon_entropy": 0.4812869674877106
            }
          }
        ],
        "cached": false,
        "request_time": 0.4943697452545166,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ { } ( { } < ( < ( { { { } } } < { [ { ( ) } ] } > < { ( < < > > ) } > ) > ) > < ( ( [ ( ( [ < { } < < ( ) > > > ] [ ] ) ) ( { } ) ] ) ) >"
        },
        "references": [
          {
            "output": {
              "text": " ) ]"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id375"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ { } ( { } < ( < ( { { { } } } < { [ { ( ) } ] } > < { ( < < > > ) } > ) > ) > < ( ( [ ( ( [ < { } < < ( ) > > > ] [ ] ) ) ( { } ) ] ) ) >",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.8142126975560586,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.7520118951797485
              },
              {
                "text": "are",
                "logprob": -0.0021528657525777817
              },
              {
                "text": "the",
                "logprob": -2.0265558760002023e-06
              },
              {
                "text": "completed",
                "logprob": -0.05443274974822998
              },
              {
                "text": "Dy",
                "logprob": -0.005613160319626331
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.16284253038506905,
              "max_token_negative_log_likelihood": 0.7520118951797485,
              "predictive_entropy": 0.08275845996063254,
              "shannon_entropy": 0.3756809360565967
            }
          }
        ],
        "cached": false,
        "request_time": 0.4922177791595459,
        "request_datetime": 1755804106
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "[ ( [ ( ) { < > [ ] } [ < > ] ] ( ) < ( < > { < { } > ( ) ( { { } } ) [ ] [ ] } ) > < { ( [ ] ) } > { ( ) } ) ( { < [ ] > } [ { < > } ] ) ] ( < [ { [ { < [ < [ < [ ] > ] > ] > } ] }"
        },
        "references": [
          {
            "output": {
              "text": " ] > )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id59"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: [ ( [ ( ) { < > [ ] } [ < > ] ] ( ) < ( < > { < { } > ( ) ( { { } } ) [ ] [ ] } ) > < { ( [ ] ) } > { ( ) } ) ( { < [ ] > } [ { < > } ] ) ] ( < [ { [ { < [ < [ < [ ] > ] > ] > } ] }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Here are the completed Dy",
            "logprob": -0.5032768826768006,
            "tokens": [
              {
                "text": "Here",
                "logprob": -0.4382704496383667
              },
              {
                "text": "are",
                "logprob": -0.003946137614548206
              },
              {
                "text": "the",
                "logprob": -5.722029527532868e-06
              },
              {
                "text": "completed",
                "logprob": -0.05514237657189369
              },
              {
                "text": "Dy",
                "logprob": -0.005912196822464466
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.10065537356167624,
              "max_token_negative_log_likelihood": 0.4382703900337219,
              "predictive_entropy": 0.06894968850210717,
              "shannon_entropy": 0.3189557501449599
            }
          }
        ],
        "cached": false,
        "request_time": 0.5022268295288086,
        "request_datetime": 1755804107
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< ( [ [ ( < < { ( ( < ( ) { } > ) ) } > [ ] > { < ( ) > } ) < [ ( ) ] > ] [ [ [ ] ] ] ( ( [ ] ) ) ] )"
        },
        "references": [
          {
            "output": {
              "text": " >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id443"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < ( [ [ ( < < { ( ( < ( ) { } > ) ) } > [ ] > { < ( ) > } ) < [ ( ) ] > ] [ [ [ ] ] ] ( ( [ ] ) ) ] )",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Input: < ( [",
            "logprob": -2.2340558200367013,
            "tokens": [
              {
                "text": "Input",
                "logprob": -1.403659462928772
              },
              {
                "text": ":",
                "logprob": -0.00393260084092617
              },
              {
                "text": "<",
                "logprob": -0.8261095285415649
              },
              {
                "text": "(",
                "logprob": -0.00035291642416268587
              },
              {
                "text": "[",
                "logprob": -1.311301275563892e-06
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 0.44681114682480255,
              "max_token_negative_log_likelihood": 1.4036593437194824,
              "predictive_entropy": 0.1421547419681019,
              "shannon_entropy": 0.4255624909896142
            }
          }
        ],
        "cached": false,
        "request_time": 0.49602246284484863,
        "request_datetime": 1755804107
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "{ < > } [ { { ( < ( ( < < > > [ < > ] < ( ( ( < { } [ ( { } ) ] > ) ) ) > ) ) > ) } [ ( ) ] } { ( ( ) { ( [ ] ) } { } ( ) ) } ] ( [ ] { < [ < > ( { } ) ] > }"
        },
        "references": [
          {
            "output": {
              "text": " )"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id63"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: { < > } [ { { ( < ( ( < < > > [ < > ] < ( ( ( < { } [ ( { } ) ] > ) ) ) > ) ) > ) } [ ( ) ] } { ( ( ) { ( [ ] ) } { } ( ) ) } ] ( [ ] { < [ < > ( { } ) ] > }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "For the given inputs,",
            "logprob": -5.287767912726849,
            "tokens": [
              {
                "text": "For",
                "logprob": -2.826401472091675
              },
              {
                "text": "the",
                "logprob": -1.6138842105865479
              },
              {
                "text": "given",
                "logprob": -0.11515220254659653
              },
              {
                "text": "inputs",
                "logprob": -0.7282048463821411
              },
              {
                "text": ",",
                "logprob": -0.004125181119889021
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.05755350952968,
              "max_token_negative_log_likelihood": 2.8264012336730957,
              "predictive_entropy": 0.18940689442679287,
              "shannon_entropy": 0.7086057260632515
            }
          }
        ],
        "cached": false,
        "request_time": 0.43434882164001465,
        "request_datetime": 1755804107
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    },
    {
      "instance": {
        "input": {
          "text": "< ( { ( ) ( ( ( { ( ) } < { [ ] } > ) { ( [ ( { { ( ( ( ) [ ( [ ( { } ) ] ) ] ) [ ] ) } } ) ] ) } ) ) }"
        },
        "references": [
          {
            "output": {
              "text": " ) >"
            },
            "tags": [
              "correct"
            ]
          }
        ],
        "split": "test",
        "id": "id211"
      },
      "train_trial_index": 0,
      "request": {
        "model_deployment": "huggingface/phi-3.5-mini-instruct",
        "model": "microsoft/phi-3.5-mini-instruct",
        "embedding": false,
        "prompt": "Please complete the rest of the following Dyck sequences, making sure that the parentheses are closed properly.\n\nInput: < [ [ [ < [ ] > ] ] ] >\nInput: { < { < [ { < ( [ ] ) > } < ( < > ) > ( ) ] > } > [ { { } } ] < > [ ] { < > } }\nInput: ( { [ ( ) ] } )\nInput: < ( { ( ) ( ( ( { ( ) } < { [ ] } > ) { ( [ ( { { ( ( ( ) [ ( [ ( { } ) ] ) ] ) [ ] ) } } ) ] ) } ) ) }",
        "temperature": 0.0,
        "num_completions": 1,
        "top_k_per_token": 1,
        "max_tokens": 5,
        "stop_sequences": [
          "\n"
        ],
        "echo_prompt": false,
        "top_p": 1,
        "presence_penalty": 0,
        "frequency_penalty": 0
      },
      "result": {
        "success": true,
        "embedding": [],
        "completions": [
          {
            "text": "Given the input sequences,",
            "logprob": -7.197804480791092,
            "tokens": [
              {
                "text": "Given",
                "logprob": -4.979973793029785
              },
              {
                "text": "the",
                "logprob": -0.12237079441547394
              },
              {
                "text": "input",
                "logprob": -0.9717784523963928
              },
              {
                "text": "sequences",
                "logprob": -1.0741976499557495
              },
              {
                "text": ",",
                "logprob": -0.04948379099369049
              }
            ],
            "metrics": {
              "sequence_negative_log_likelihood": 1.4395606435835362,
              "max_token_negative_log_likelihood": 4.9799723625183105,
              "predictive_entropy": 0.1848500281572342,
              "shannon_entropy": 1.2136779069900512
            }
          }
        ],
        "cached": false,
        "request_time": 0.4337344169616699,
        "request_datetime": 1755804107
      },
      "num_train_instances": 3,
      "prompt_truncated": false,
      "num_conditioning_tokens": 0
    }
  ]
}